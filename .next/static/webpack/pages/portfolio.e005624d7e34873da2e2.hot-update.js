webpackHotUpdate_N_E("pages/portfolio",{

/***/ "./components/banner.js":
/*!******************************!*\
  !*** ./components/banner.js ***!
  \******************************/
/*! exports provided: BannerSingle, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BannerSingle\", function() { return BannerSingle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BannerSlider; });\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-jsx/style */ \"./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hooks */ \"./components/hooks.js\");\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;\n\n\nfunction BannerSingle(_ref) {\n  _s();\n\n  var defaultBackground = _ref.defaultBackground,\n      image = _ref.image,\n      children = _ref.children,\n      customHeight = _ref.customHeight,\n      fullsize = _ref.fullsize,\n      parallax = _ref.parallax;\n  var getWindow = Object(_hooks__WEBPACK_IMPORTED_MODULE_2__[\"useWindowSize\"])();\n  var getScroll = Object(_hooks__WEBPACK_IMPORTED_MODULE_2__[\"useScroll\"])();\n  var defaultSize = 600;\n  Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(function () {\n    console.log('hit');\n  }, []);\n  return __jsx(\"div\", {\n    id: \"banner\",\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1196307816\", [defaultBackground, customHeight ? customHeight : fullsize == true ? getWindow.height : defaultSize]]])\n  }, __jsx(\"img\", {\n    src: image,\n    style: {\n      top: parallax == true && getScroll.scrollY >= 0 ? (fullsize == true ? getWindow.height : customHeight) / 2 - getScroll.scrollY / 3 || 0 : '50%'\n    },\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1196307816\", [defaultBackground, customHeight ? customHeight : fullsize == true ? getWindow.height : defaultSize]]]) + \" \" + 'singleimage'\n  }), __jsx(\"div\", {\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"1196307816\", [defaultBackground, customHeight ? customHeight : fullsize == true ? getWindow.height : defaultSize]]]) + \" \" + 'content'\n  }, children), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {\n    id: \"1196307816\",\n    dynamic: [defaultBackground, customHeight ? customHeight : fullsize == true ? getWindow.height : defaultSize]\n  }, \"#banner.__jsx-style-dynamic-selector{float:left;width:100%;position:relative;overflow:hidden;background:\".concat(defaultBackground, \";height:\").concat(customHeight ? customHeight : fullsize == true ? getWindow.height : defaultSize, \"px;}.singleimage.__jsx-style-dynamic-selector{position:absolute;left:50%;width:100%;z-index:10;-webkit-transition:all .2s ease;transition:all .2s ease;-webkit-transform:translate(-50%,-50%) scale(1.2,1.2);-ms-transform:translate(-50%,-50%) scale(1.2,1.2);transform:translate(-50%,-50%) scale(1.2,1.2);}@media only screen and (max-width:800px){}@media only screen and (max-width:1100px){}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/williamforte/Canvas/burkedeveloping/components/banner.js */\")));\n}\n\n_s(BannerSingle, \"Su9zSfrRnTrz2kxSdR0oJbByw4U=\", false, function () {\n  return [_hooks__WEBPACK_IMPORTED_MODULE_2__[\"useWindowSize\"], _hooks__WEBPACK_IMPORTED_MODULE_2__[\"useScroll\"]];\n});\n\n_c = BannerSingle;\n\nfunction Slide(_ref2) {\n  var index = _ref2.index,\n      image = _ref2.image,\n      height = _ref2.height,\n      currentSlide = _ref2.currentSlide;\n  return __jsx(\"div\", {\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"2621986060\", [index * 100, height, index == currentSlide ? '1.1, 1.1' : '1, 1']]]) + \" \" + 'slide'\n  }, __jsx(\"img\", {\n    src: image,\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"2621986060\", [index * 100, height, index == currentSlide ? '1.1, 1.1' : '1, 1']]])\n  }), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {\n    id: \"2621986060\",\n    dynamic: [index * 100, height, index == currentSlide ? '1.1, 1.1' : '1, 1']\n  }, \".slide.__jsx-style-dynamic-selector{position:absolute;top:0;left:\".concat(index * 100, \"%;background:red;width:100%;height:\").concat(height, \"px;overflow:hidden;z-index:10;}.slide.__jsx-style-dynamic-selector img.__jsx-style-dynamic-selector{position:absolute;top:50%;left:50%;-webkit-transition:all 1s ease;transition:all 1s ease;-webkit-transform:translate(-50%,-50%) scale(\").concat(index == currentSlide ? '1.1, 1.1' : '1, 1', \");-ms-transform:translate(-50%,-50%) scale(\").concat(index == currentSlide ? '1.1, 1.1' : '1, 1', \");transform:translate(-50%,-50%) scale(\").concat(index == currentSlide ? '1.1, 1.1' : '1, 1', \");width:100%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/williamforte/Canvas/burkedeveloping/components/banner.js */\")));\n}\n\n_c2 = Slide;\nfunction BannerSlider(_ref3) {\n  _s2();\n\n  var cover = _ref3.cover,\n      defaultBackground = _ref3.defaultBackground,\n      images = _ref3.images,\n      children = _ref3.children,\n      height = _ref3.height,\n      shadow = _ref3.shadow;\n  var defaultSize = 600;\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(0),\n      currentSlide = _useState[0],\n      setCurrent = _useState[1];\n\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false),\n      isHovering = _useState2[0],\n      setHovering = _useState2[1]; // Measured in Seconds\n\n\n  var slideTimer = 5;\n  var timer = null;\n  Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(function () {\n    if (isHovering == false) {\n      timer = setTimeout(function () {\n        if (isHovering == false) rightClick();\n      }, slideTimer * 1000);\n    } else {\n      clearTimeout(timer);\n    }\n  }, [isHovering]);\n\n  var leftClick = function leftClick() {\n    var nextSlide = currentSlide - 1;\n\n    if (nextSlide < 0) {\n      setCurrent(images.length - 1);\n    } else {\n      setCurrent(nextSlide);\n    }\n  };\n\n  var rightClick = function rightClick() {\n    var nextSlide = currentSlide + 1;\n\n    if (nextSlide > images.length - 1) {\n      setCurrent(0);\n    } else {\n      setCurrent(nextSlide);\n    }\n  };\n\n  return __jsx(\"div\", {\n    id: \"banner\",\n    onMouseEnter: function onMouseEnter() {\n      return setHovering(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setHovering(false);\n    },\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"615645767\", [defaultBackground, height, isHovering ? '.94' : 1, currentSlide * 100, cover]]])\n  }, __jsx(\"div\", {\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"615645767\", [defaultBackground, height, isHovering ? '.94' : 1, currentSlide * 100, cover]]]) + \" \" + 'cover'\n  }), __jsx(\"div\", {\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"615645767\", [defaultBackground, height, isHovering ? '.94' : 1, currentSlide * 100, cover]]]) + \" \" + 'imgcont'\n  }, images == null ? null : images.map(function (image, i) {\n    return __jsx(Slide, {\n      key: i,\n      image: image,\n      height: height,\n      index: i,\n      currentSlide: currentSlide\n    });\n  })), __jsx(\"div\", {\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"615645767\", [defaultBackground, height, isHovering ? '.94' : 1, currentSlide * 100, cover]]]) + \" \" + 'dots'\n  }, images == null ? null : images.map(function (image, i) {\n    return __jsx(\"div\", {\n      style: {\n        background: currentSlide == i ? 'white' : 'rgba(255, 255, 255, .2)'\n      },\n      key: i,\n      onClick: function onClick() {\n        return setCurrent(i);\n      },\n      className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"615645767\", [defaultBackground, height, isHovering ? '.94' : 1, currentSlide * 100, cover]]]) + \" \" + 'dot'\n    });\n  })), __jsx(\"img\", {\n    onClick: leftClick,\n    style: {\n      left: 40\n    },\n    src: '/logo_arrow_left.png',\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"615645767\", [defaultBackground, height, isHovering ? '.94' : 1, currentSlide * 100, cover]]]) + \" \" + 'arrow'\n  }), __jsx(\"img\", {\n    onClick: rightClick,\n    style: {\n      right: 40\n    },\n    src: '/logo_arrow_left.png',\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"615645767\", [defaultBackground, height, isHovering ? '.94' : 1, currentSlide * 100, cover]]]) + \" \" + 'arrow right'\n  }), __jsx(\"div\", {\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([[\"615645767\", [defaultBackground, height, isHovering ? '.94' : 1, currentSlide * 100, cover]]]) + \" \" + 'content'\n  }, children), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {\n    id: \"615645767\",\n    dynamic: [defaultBackground, height, isHovering ? '.94' : 1, currentSlide * 100, cover]\n  }, \"#banner.__jsx-style-dynamic-selector{float:left;width:100%;position:relative;overflow:hidden;background:\".concat(defaultBackground, \";height:\").concat(height, \"px;}.dots.__jsx-style-dynamic-selector{position:absolute;min-width:40px;bottom:14px;left:50%;-webkit-backdrop-filter:blur(12px);backdrop-filter:blur(12px);background:rgba(255,255,255,.4);padding:7px;border-radius:10px;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);z-index:12;}.dot.__jsx-style-dynamic-selector{float:left;width:12px;height:12px;box-shadow:0 0 2px rgba(20,20,20,.4);border-radius:50%;cursor:pointer;-webkit-transition:all .4s ease;transition:all .4s ease;margin:0 5px;}.arrow.__jsx-style-dynamic-selector{position:absolute;width:25px;height:25px;top:50%;padding:10px;z-index:12;opacity:.4;-webkit-transition:all .3s ease;transition:all .3s ease;-webkit-backdrop-filter:blur(18px);backdrop-filter:blur(18px);background:rgba(255,255,255,.6);border-radius:50%;cursor:pointer;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);}.arrow.__jsx-style-dynamic-selector:hover{opacity:1;}.right.__jsx-style-dynamic-selector{-webkit-transform:translateY(-50%) rotateY(180deg);-ms-transform:translateY(-50%) rotateY(180deg);transform:translateY(-50%) rotateY(180deg);}.imgcont.__jsx-style-dynamic-selector{float:left;height:100%;width:100%;opacity:\").concat(isHovering ? '.94' : 1, \";-webkit-transition:all .6s ease;transition:all .6s ease;-webkit-transform:translateX(-\").concat(currentSlide * 100, \"%);-ms-transform:translateX(-\").concat(currentSlide * 100, \"%);transform:translateX(-\").concat(currentSlide * 100, \"%);}.cover.__jsx-style-dynamic-selector{position:absolute;top:0;left:0;background:\").concat(cover, \";height:100%;width:100%;z-index:10;}@media only screen and (max-width:800px){}@media only screen and (max-width:1100px){}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/williamforte/Canvas/burkedeveloping/components/banner.js */\")));\n}\n\n_s2(BannerSlider, \"reAaLftFlHTAoRko139Cv611PNI=\");\n\n_c3 = BannerSlider;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"BannerSingle\");\n$RefreshReg$(_c2, \"Slide\");\n$RefreshReg$(_c3, \"BannerSlider\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/banner.js\n");

/***/ })

})