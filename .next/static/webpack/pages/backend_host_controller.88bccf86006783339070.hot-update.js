webpackHotUpdate_N_E("pages/backend_host_controller",{

/***/ "./components/backend/taskmanager.js":
/*!*******************************************!*\
  !*** ./components/backend/taskmanager.js ***!
  \*******************************************/
/*! exports provided: compare, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"compare\", function() { return compare; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return TaskManager; });\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! styled-jsx/style */ \"./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _services_apiservice__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/apiservice */ \"./services/apiservice.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/router */ \"./node_modules/next/dist/client/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _styles_theme__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../styles/theme */ \"./styles/theme.js\");\n\n\n\n\nvar _this = undefined,\n    _jsxFileName = \"/Users/williamforte/Canvas/burkedeveloping/components/backend/taskmanager.js\",\n    _s = $RefreshSig$();\n\n\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\n\nvar sortingOrder = {\n  'inprogress': 1,\n  'created': 2,\n  'done': 3\n};\nfunction compare(key) {\n  var order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'asc';\n  return function (a, b) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) return 0;\n    var first = a[key].toLowerCase() in sortingOrder ? sortingOrder[a[key]] : Number.MAX_SAFE_INTEGER;\n    var second = b[key].toLowerCase() in sortingOrder ? sortingOrder[b[key]] : Number.MAX_SAFE_INTEGER;\n    var result = 0;\n    if (first < second) result = -1;else if (first > second) result = 1;\n    return order === 'desc' ? ~result : result;\n  };\n}\n\nvar HamEx = function HamEx(_ref) {\n  var onClick = _ref.onClick,\n      color = _ref.color,\n      width = _ref.width,\n      height = _ref.height,\n      active = _ref.active;\n  return __jsx(\"div\", {\n    onClick: onClick,\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"145300930\", [width, height, color, height / 2, height / 2]]]) + \" \" + 'hame',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"145300930\", [width, height, color, height / 2, height / 2]]]) + \" \" + \"slash \".concat(active == true ? 'one' : ''),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"145300930\", [width, height, color, height / 2, height / 2]]]) + \" \" + \"slash \".concat(active == true ? 'two' : ''),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"145300930\", [width, height, color, height / 2, height / 2]]]) + \" \" + \"slash \".concat(active == true ? 'three' : ''),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a, {\n    id: \"145300930\",\n    dynamic: [width, height, color, height / 2, height / 2],\n    __self: _this\n  }, \".hame.__jsx-style-dynamic-selector{float:left;width:\".concat(width, \"px;height:\").concat(height, \"px;padding:10px;position:relative;cursor:pointer;}.slash.__jsx-style-dynamic-selector{float:left;width:100%;height:8px;border-radius:8px;background:\").concat(color, \";margin:2px 0;-webkit-transition:all .4s ease;transition:all .4s ease;}.one.__jsx-style-dynamic-selector{-webkit-transform:translateY(\").concat(height / 2, \"px) rotate(45deg);-ms-transform:translateY(\").concat(height / 2, \"px) rotate(45deg);transform:translateY(\").concat(height / 2, \"px) rotate(45deg);}.two.__jsx-style-dynamic-selector{opacity:0;}.three.__jsx-style-dynamic-selector{-webkit-transform:translateY(-\").concat(height / 2, \"px) rotate(-45deg);-ms-transform:translateY(-\").concat(height / 2, \"px) rotate(-45deg);transform:translateY(-\").concat(height / 2, \"px) rotate(-45deg);}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/williamforte/Canvas/burkedeveloping/components/backend/taskmanager.js */\")));\n};\n\n_c = HamEx;\nfunction TaskManager(_ref2) {\n  _s();\n\n  var _this2 = this;\n\n  var getFirstLoad = _ref2.getFirstLoad;\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])({\n    objective: '',\n    status: 'created'\n  }),\n      inputs = _useState[0],\n      setInputs = _useState[1];\n\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])(getFirstLoad != null ? getFirstLoad : null),\n      allTasks = _useState2[0],\n      setAllTasks = _useState2[1];\n\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])(getFirstLoad != null ? 'succeeded' : 'none'),\n      status = _useState3[0],\n      setStatus = _useState3[1];\n\n  var _useState4 = Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])(false),\n      active = _useState4[0],\n      setActive = _useState4[1];\n\n  var lastcat = null; // Create a new Task DEFAULT: status: 'created'\n\n  var createNewTask = /*#__PURE__*/function () {\n    var _ref3 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(e) {\n      var newTask;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return Object(_services_apiservice__WEBPACK_IMPORTED_MODULE_5__[\"createTask\"])(inputs.objective, inputs.status);\n\n            case 3:\n              newTask = _context.sent;\n\n              if (newTask) {\n                console.log(newTask);\n                setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n                  objective: ''\n                }));\n                updateTasks(e);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function createNewTask(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // Updating Tasks with Backend\n\n\n  var updateTasks = /*#__PURE__*/function () {\n    var _ref4 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(e) {\n      var getalltasks;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setStatus('loading');\n              _context2.next = 3;\n              return Object(_services_apiservice__WEBPACK_IMPORTED_MODULE_5__[\"getTasks\"])(50, null);\n\n            case 3:\n              getalltasks = _context2.sent;\n\n              if (getalltasks) {\n                console.log(getalltasks);\n                getalltasks.sort(compare('status'));\n                setAllTasks(getalltasks);\n                setStatus('succeeded');\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function updateTasks(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var removeThisTask = /*#__PURE__*/function () {\n    var _ref5 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3(e, task_id) {\n      var removenewtask;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              e.preventDefault();\n              _context3.next = 3;\n              return Object(_services_apiservice__WEBPACK_IMPORTED_MODULE_5__[\"removeTask\"])(task_id);\n\n            case 3:\n              removenewtask = _context3.sent;\n\n              if (removenewtask) {\n                console.log(removenewtask);\n                updateTasks(e);\n              }\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function removeThisTask(_x3, _x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var updateThisTask = /*#__PURE__*/function () {\n    var _ref6 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4(e, task_id, status) {\n      var updatenewtask;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              e.preventDefault();\n              _context4.next = 3;\n              return Object(_services_apiservice__WEBPACK_IMPORTED_MODULE_5__[\"updateTaskStatus\"])(task_id, status);\n\n            case 3:\n              updatenewtask = _context4.sent;\n\n              if (updatenewtask) {\n                console.log(updatenewtask);\n                updateTasks(e);\n              }\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function updateThisTask(_x5, _x6, _x7) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var isTyping = function isTyping(e) {\n    e.persist();\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({}, e.target.name, e.target.value)));\n  };\n\n  var toggleActive = function toggleActive(e) {\n    e.persist();\n    if (active == true) setActive(false);else setActive(true);\n  };\n\n  return __jsx(\"div\", {\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"3140488744\", [_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '0' : '1', active == true ? 'auto' : '0.1px', active == true ? '1' : '0', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '23%' : '50px', active == true ? '1' : '0', active == true ? 'auto' : '0.1px', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral]]]) + \" \" + 'sideleft',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, __jsx(HamEx, {\n    onClick: toggleActive,\n    active: active,\n    width: 30,\n    height: 30,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }), __jsx(\"form\", {\n    onSubmit: createNewTask,\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"3140488744\", [_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '0' : '1', active == true ? 'auto' : '0.1px', active == true ? '1' : '0', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '23%' : '50px', active == true ? '1' : '0', active == true ? 'auto' : '0.1px', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"3140488744\", [_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '0' : '1', active == true ? 'auto' : '0.1px', active == true ? '1' : '0', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '23%' : '50px', active == true ? '1' : '0', active == true ? 'auto' : '0.1px', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, \"New Task\"), __jsx(\"textarea\", {\n    name: \"objective\",\n    onChange: isTyping,\n    value: inputs.objective,\n    placeholder: \"Objective\",\n    required: true,\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"3140488744\", [_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '0' : '1', active == true ? 'auto' : '0.1px', active == true ? '1' : '0', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '23%' : '50px', active == true ? '1' : '0', active == true ? 'auto' : '0.1px', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"3140488744\", [_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '0' : '1', active == true ? 'auto' : '0.1px', active == true ? '1' : '0', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '23%' : '50px', active == true ? '1' : '0', active == true ? 'auto' : '0.1px', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, \"Add Task\")), __jsx(\"div\", {\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"3140488744\", [_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '0' : '1', active == true ? 'auto' : '0.1px', active == true ? '1' : '0', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '23%' : '50px', active == true ? '1' : '0', active == true ? 'auto' : '0.1px', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral]]]) + \" \" + 'tasklist',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"3140488744\", [_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '0' : '1', active == true ? 'auto' : '0.1px', active == true ? '1' : '0', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '23%' : '50px', active == true ? '1' : '0', active == true ? 'auto' : '0.1px', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, \"My Tasks\"), allTasks ? allTasks.map(function (task, i) {\n    var nextStatus = task.status == 'created' ? 'inprogress' : 'done';\n\n    if (lastcat == task.status) {\n      return __jsx(\"div\", {\n        key: i,\n        className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"3140488744\", [_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '0' : '1', active == true ? 'auto' : '0.1px', active == true ? '1' : '0', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '23%' : '50px', active == true ? '1' : '0', active == true ? 'auto' : '0.1px', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral]]]) + \" \" + 'task',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 29\n        }\n      }, __jsx(\"h2\", {\n        className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"3140488744\", [_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '0' : '1', active == true ? 'auto' : '0.1px', active == true ? '1' : '0', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '23%' : '50px', active == true ? '1' : '0', active == true ? 'auto' : '0.1px', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral]]]),\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 33\n        }\n      }, \"Objective: \", task.objective), __jsx(\"h3\", {\n        className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"3140488744\", [_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '0' : '1', active == true ? 'auto' : '0.1px', active == true ? '1' : '0', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '23%' : '50px', active == true ? '1' : '0', active == true ? 'auto' : '0.1px', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral]]]),\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 33\n        }\n      }, \"Status: \", task.status), __jsx(\"img\", {\n        src: \"/three_dots.png\",\n        className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"3140488744\", [_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '0' : '1', active == true ? 'auto' : '0.1px', active == true ? '1' : '0', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '23%' : '50px', active == true ? '1' : '0', active == true ? 'auto' : '0.1px', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral]]]) + \" \" + 'threedots',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 33\n        }\n      }), __jsx(\"div\", {\n        className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"3140488744\", [_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '0' : '1', active == true ? 'auto' : '0.1px', active == true ? '1' : '0', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '23%' : '50px', active == true ? '1' : '0', active == true ? 'auto' : '0.1px', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral]]]) + \" \" + 'floater',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 33\n        }\n      }, __jsx(\"div\", {\n        onClick: function onClick(e) {\n          task.status = nextStatus;\n          updateThisTask(e, task.id, nextStatus);\n        },\n        className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"3140488744\", [_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '0' : '1', active == true ? 'auto' : '0.1px', active == true ? '1' : '0', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '23%' : '50px', active == true ? '1' : '0', active == true ? 'auto' : '0.1px', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral]]]) + \" \" + 'update',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 37\n        }\n      }, \"Update Status\"), __jsx(\"div\", {\n        onClick: function onClick(e) {\n          return removeThisTask(e, task.id);\n        },\n        className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"3140488744\", [_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '0' : '1', active == true ? 'auto' : '0.1px', active == true ? '1' : '0', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '23%' : '50px', active == true ? '1' : '0', active == true ? 'auto' : '0.1px', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral]]]) + \" \" + 'remove',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 37\n        }\n      }, \"Remove Task\")));\n    } else {\n      lastcat = task.status;\n      return [__jsx(\"div\", {\n        key: task.status,\n        className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"3140488744\", [_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '0' : '1', active == true ? 'auto' : '0.1px', active == true ? '1' : '0', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '23%' : '50px', active == true ? '1' : '0', active == true ? 'auto' : '0.1px', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral]]]) + \" \" + 'cat',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 29\n        }\n      }, task.status.toUpperCase()), __jsx(\"div\", {\n        key: i,\n        className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"3140488744\", [_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '0' : '1', active == true ? 'auto' : '0.1px', active == true ? '1' : '0', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '23%' : '50px', active == true ? '1' : '0', active == true ? 'auto' : '0.1px', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral]]]) + \" \" + 'task',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 29\n        }\n      }, __jsx(\"h2\", {\n        className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"3140488744\", [_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '0' : '1', active == true ? 'auto' : '0.1px', active == true ? '1' : '0', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '23%' : '50px', active == true ? '1' : '0', active == true ? 'auto' : '0.1px', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral]]]),\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 33\n        }\n      }, \"Objective: \", task.objective), __jsx(\"h3\", {\n        className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"3140488744\", [_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '0' : '1', active == true ? 'auto' : '0.1px', active == true ? '1' : '0', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '23%' : '50px', active == true ? '1' : '0', active == true ? 'auto' : '0.1px', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral]]]),\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 33\n        }\n      }, \"Status: \", task.status), __jsx(\"img\", {\n        src: \"/three_dots.png\",\n        className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"3140488744\", [_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '0' : '1', active == true ? 'auto' : '0.1px', active == true ? '1' : '0', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '23%' : '50px', active == true ? '1' : '0', active == true ? 'auto' : '0.1px', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral]]]) + \" \" + 'threedots',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 33\n        }\n      }), __jsx(\"div\", {\n        className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"3140488744\", [_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '0' : '1', active == true ? 'auto' : '0.1px', active == true ? '1' : '0', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '23%' : '50px', active == true ? '1' : '0', active == true ? 'auto' : '0.1px', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral]]]) + \" \" + 'floater',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 33\n        }\n      }, __jsx(\"div\", {\n        onClick: function onClick(e) {\n          return updateThisTask(e, task.id, 'inprogress');\n        },\n        className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"3140488744\", [_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '0' : '1', active == true ? 'auto' : '0.1px', active == true ? '1' : '0', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '23%' : '50px', active == true ? '1' : '0', active == true ? 'auto' : '0.1px', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral]]]) + \" \" + 'update',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 37\n        }\n      }, \"Update Status\"), __jsx(\"div\", {\n        onClick: function onClick(e) {\n          return removeThisTask(e, task.id);\n        },\n        className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"3140488744\", [_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '0' : '1', active == true ? 'auto' : '0.1px', active == true ? '1' : '0', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '23%' : '50px', active == true ? '1' : '0', active == true ? 'auto' : '0.1px', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral]]]) + \" \" + 'remove',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 37\n        }\n      }, \"Remove Task\")))];\n    }\n  }) : status == 'none' ? __jsx(\"h2\", {\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"3140488744\", [_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '0' : '1', active == true ? 'auto' : '0.1px', active == true ? '1' : '0', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '23%' : '50px', active == true ? '1' : '0', active == true ? 'auto' : '0.1px', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 40\n    }\n  }, \"No Tasks yet\") : __jsx(\"div\", {\n    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a.dynamic([[\"3140488744\", [_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '0' : '1', active == true ? 'auto' : '0.1px', active == true ? '1' : '0', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '23%' : '50px', active == true ? '1' : '0', active == true ? 'auto' : '0.1px', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral]]]) + \" \" + 'loading',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 63\n    }\n  })), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a, {\n    id: \"3140488744\",\n    dynamic: [_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '0' : '1', active == true ? 'auto' : '0.1px', active == true ? '1' : '0', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, active == true ? '23%' : '50px', active == true ? '1' : '0', active == true ? 'auto' : '0.1px', _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, _styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral],\n    __self: this\n  }, \".cat.__jsx-style-dynamic-selector{float:left;width:90%;padding:10px 5%;color:white;font:12px 'Roboto';background:\".concat(_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, \";}.tasktoggle.__jsx-style-dynamic-selector{float:left;width:100px;height:100px;padding:10px;opacity:\").concat(active == true ? '0' : '1', \";}.update.__jsx-style-dynamic-selector{float:left;width:130px;text-align:center;font:12px 'Open Sans';padding:6px;opacity:.9;color:white;border-radius:8px;background:rgba(70,70,70,.6);-webkit-transition:opacity .4s ease;transition:opacity .4s ease;cursor:pointer;}.update.__jsx-style-dynamic-selector:hover{opacity:1;}.remove.__jsx-style-dynamic-selector{float:left;width:75px;text-align:center;font:12px 'Open Sans';margin-left:10px;padding:6px;opacity:.9;color:white;border-radius:8px;background:rgba(226,70,70,.8);cursor:pointer;}.remove.__jsx-style-dynamic-selector:hover{opacity:1;}.threedots.__jsx-style-dynamic-selector{position:absolute;top:-5px;right:-5px;width:20px;height:20px;padding:15px;cursor:pointer;}.threedots.__jsx-style-dynamic-selector:hover~.floater.__jsx-style-dynamic-selector,.floater.__jsx-style-dynamic-selector:hover{opacity:1;-webkit-transform:translateX(100%) scale(1,1);-ms-transform:translateX(100%) scale(1,1);transform:translateX(100%) scale(1,1);}.floater.__jsx-style-dynamic-selector{position:absolute;right:-2px;top:10px;-webkit-transform:translateX(0) scale(0,0);-ms-transform:translateX(0) scale(0,0);transform:translateX(0) scale(0,0);padding:4px;opacity:0;overflow:hidden;-webkit-transition:opacity .2s ease,-webkit-transform .4s;-webkit-transition:opacity .2s ease,transform .4s;transition:opacity .2s ease,transform .4s;border-radius:10px;-webkit-backdrop-filter:blur(8px);backdrop-filter:blur(8px);background:rgba(255,255,255,.7);box-shadow:0 0 1px rgba(20,20,20,.6);z-index:9999;}.tasklist.__jsx-style-dynamic-selector{float:left;width:100%;-webkit-transition:all .2s ease;transition:all .2s ease;height:\").concat(active == true ? 'auto' : '0.1px', \";opacity:\").concat(active == true ? '1' : '0', \";}.task.__jsx-style-dynamic-selector{float:left;width:90%;padding:10px 5%;position:relative;border-top:1px solid \").concat(_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, \";}.task.__jsx-style-dynamic-selector h2.__jsx-style-dynamic-selector{float:left;width:90%;padding:5px 5%;margin:0;font:14px 'Montserrat';}.task.__jsx-style-dynamic-selector h3.__jsx-style-dynamic-selector{float:left;width:90%;padding:5px 5%;margin:0;font:12px 'Roboto';opacity:.8;}.sideleft.__jsx-style-dynamic-selector textarea.__jsx-style-dynamic-selector{float:left;margin:10px 2.5%;padding:10px 2.5%;width:90%;font:18px 'Roboto';border:none;resize:vertical;max-height:150px;min-height:30px;border-radius:6px;box-shadow:0 0 2px rgba(20,20,20,.8);}.sideleft.__jsx-style-dynamic-selector{float:left;width:\").concat(active == true ? '23%' : '50px', \";-webkit-transition:width .3s ease-in-out;transition:width .3s ease-in-out;z-index:9999;margin:20px 1%;border-radius:10px;-webkit-backdrop-filter:blur(8px);backdrop-filter:blur(8px);background:rgba(255,255,255,.7);box-shadow:0 0 2px rgba(20,20,20,.8);}.sideleft.__jsx-style-dynamic-selector h1.__jsx-style-dynamic-selector{float:left;margin:10px 5%;width:90%;font:20px 'Montserrat';}.sideleft.__jsx-style-dynamic-selector form.__jsx-style-dynamic-selector{float:left;width:90%;-webkit-transition:all .2s ease;transition:all .2s ease;opacity:\").concat(active == true ? '1' : '0', \";height:\").concat(active == true ? 'auto' : '0.1px', \";border-bottom:2px solid \").concat(_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, \";padding:10px 5%;}.sideleft.__jsx-style-dynamic-selector button.__jsx-style-dynamic-selector{float:left;width:90%;padding:10px 5%;background:\").concat(_styles_theme__WEBPACK_IMPORTED_MODULE_7__[\"default\"].colors.coral, \";color:white;cursor:pointer;border:none;border-radius:8px;margin:10px 5%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/williamforte/Canvas/burkedeveloping/components/backend/taskmanager.js */\")));\n}\n\n_s(TaskManager, \"TfyGxM9q/Ie8h5kDgVZQWbHlCi4=\");\n\n_c2 = TaskManager;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HamEx\");\n$RefreshReg$(_c2, \"TaskManager\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/backend/taskmanager.js\n");

/***/ })

})