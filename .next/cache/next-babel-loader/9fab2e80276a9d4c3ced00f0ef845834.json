{"ast":null,"code":"var _jsxFileName = \"/Users/williamforte/Canvas/burkedeveloping/pages/backend_host_controller/imageupload.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { baseConfig } from '../../services/restservice';\nimport Theme from '../../styles/theme';\n\nfunction UploadImage({\n  firstLoadImages\n}) {\n  const {\n    0: images,\n    1: setImages\n  } = useState(firstLoadImages);\n  const {\n    0: file,\n    1: setFile\n  } = useState(null);\n  const {\n    0: preview,\n    1: setPreview\n  } = useState(null);\n\n  const uploadImageSingle = async e => {\n    e.preventDefault();\n    if (file == null) return;\n    const formData = new FormData();\n    formData.append(\"myFile\", file);\n    const uploadImage = await fetch(baseConfig.baseURL + '/uploadfile', {\n      method: 'POST',\n      body: formData\n    }).then(response => {\n      return response.json();\n    });\n\n    if (uploadImage) {\n      setPreview(null);\n      setFile(null);\n      loadImages(e);\n    }\n  };\n\n  const uploadImageMultiple = async e => {\n    e.preventDefault();\n    console.log(file);\n    if (file == null) return;\n    const formData = new FormData();\n\n    for (let i = 0; i < file.length; i++) {\n      console.log(file[i].uri);\n      formData.append(`myImages[]`, {\n        uri: file[i].uri,\n        type: 'image/*',\n        name: file[i].name\n      });\n    }\n\n    console.log(formData);\n    const newupload = await fetch('http://localhost:3600/uploadmultiple', {\n      method: 'POST',\n      body: formData\n    }).then(response => {\n      return response.json();\n    });\n    console.log(newupload);\n\n    if (newupload) {\n      setPreview(null);\n      setFile(null);\n      console.log(newupload);\n      loadImages(e);\n    }\n  };\n\n  const handleFileChangeSingle = e => {\n    e.persist();\n    setPreview(URL.createObjectURL(e.target.files[0]));\n    setFile(e.target.files[0]);\n  };\n\n  const handleFileChangeMulti = e => {\n    e.persist();\n    setPreview(URL.createObjectURL(e.target.files[0]));\n    setFile(e.target.files[0]);\n  };\n\n  const removeImage = async (e, image) => {\n    e.preventDefault();\n    const newremove = await fetch(baseConfig.baseURL + '/removeimage/' + image, {\n      method: 'DELETE'\n    }).then(response => {\n      return response.status;\n    });\n\n    if (newremove) {\n      console.log(newremove);\n    }\n  };\n\n  const loadImages = async e => {\n    e.preventDefault();\n    const getImages = await fetch('http://localhost:3600/getallimages', {\n      method: 'GET'\n    }).then(response => {\n      return response.json();\n    });\n\n    if (getImages) {\n      setImages(getImages.images);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-236463443\" + \" \" + 'body',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    id: \"left\",\n    className: \"jsx-236463443\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    className: \"jsx-236463443\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"Single Image Upload\"), __jsx(\"div\", {\n    className: \"jsx-236463443\" + \" \" + 'uploadform',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, __jsx(\"form\", {\n    onSubmit: uploadImageSingle,\n    className: \"jsx-236463443\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-236463443\" + \" \" + 'previewframe',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, __jsx(\"img\", {\n    src: preview ? preview : '/imageplaceholder.png',\n    className: \"jsx-236463443\" + \" \" + 'preview',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 55\n    }\n  })), __jsx(\"label\", {\n    htmlFor: \"fileid\",\n    className: \"jsx-236463443\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, file ? file.name : 'Select image'), __jsx(\"input\", {\n    id: \"fileid\",\n    type: \"file\",\n    accept: \"image/*\",\n    onChange: handleFileChangeSingle,\n    required: true,\n    className: \"jsx-236463443\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"jsx-236463443\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, \"Upload Image\"))), __jsx(\"h2\", {\n    className: \"jsx-236463443\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"Multiple Image Upload\"), __jsx(\"div\", {\n    className: \"jsx-236463443\" + \" \" + 'uploadform',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, __jsx(\"form\", {\n    onSubmit: uploadImageMultiple,\n    className: \"jsx-236463443\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-236463443\" + \" \" + 'previewframe',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, __jsx(\"img\", {\n    src: preview ? preview : '/imageplaceholder.png',\n    className: \"jsx-236463443\" + \" \" + 'preview',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 55\n    }\n  })), __jsx(\"label\", {\n    htmlFor: \"fileid\",\n    className: \"jsx-236463443\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, file ? file.name : 'Select images'), __jsx(\"input\", {\n    id: \"fileid\",\n    type: \"file\",\n    accept: \"image/*\",\n    onChange: handleFileChangeMulti,\n    required: true,\n    multiple: true,\n    className: \"jsx-236463443\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"jsx-236463443\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, \"Upload Images\")))), __jsx(\"div\", {\n    className: \"jsx-236463443\" + \" \" + 'images',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: \"jsx-236463443\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, \"My Images\"), __jsx(\"div\", {\n    className: \"jsx-236463443\" + \" \" + 'imageholder',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, images != null ? images.map((image, i) => {\n    return __jsx(\"div\", {\n      key: i,\n      className: \"jsx-236463443\" + \" \" + 'imgframe',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 33\n      }\n    }, __jsx(\"div\", {\n      onClick: e => removeImage(e, image),\n      className: \"jsx-236463443\" + \" \" + 'x',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 37\n      }\n    }, \"x\"), __jsx(\"img\", {\n      src: baseConfig.backendImages + image,\n      className: \"jsx-236463443\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 37\n      }\n    }));\n  }) : __jsx(\"h2\", {\n    onClick: loadImages,\n    className: \"jsx-236463443\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, \"Load Images\"))), __jsx(_JSXStyle, {\n    id: \"236463443\",\n    __self: this\n  }, \".imageholder.jsx-236463443{float:left;width:100%;margin-top:10px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}.imgframe.jsx-236463443{float:left;width:150px;height:120px;margin:8px;overflow:hidden;position:relative;background:rgba(200,200,200,.2);}.imgframe.jsx-236463443 img.jsx-236463443{position:absolute;width:100%;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);}.x.jsx-236463443{position:absolute;right:10px;top:10px;padding:0 8px;padding-bottom:4px;text-align:center;font:18px 'Roboto';cursor:pointer;opacity:.7;-webkit-transition:all .3s ease;transition:all .3s ease;z-index:999;background:rgba(255,255,255,1);}.x.jsx-236463443:hover{opacity:1;}.images.jsx-236463443{float:left;width:60%;}.images.jsx-236463443 h1.jsx-236463443{float:left;font:30px 'Montserrat';margin:0;padding:10px;}.uploadform.jsx-236463443 input.jsx-236463443{display:none;}.uploadform.jsx-236463443 label.jsx-236463443{position:absolute;top:60px;left:20px;padding:10px;cursor:pointer;opacity:.7;-webkit-transition:all .3s ease;transition:all .3s ease;font:14px 'Roboto';}.uploadform.jsx-236463443 label.jsx-236463443:hover{opacity:1;}.uploadform.jsx-236463443 button.jsx-236463443{position:absolute;bottom:90px;left:20px;padding:10px;cursor:pointer;opacity:.7;-webkit-transition:all .3s ease;transition:all .3s ease;font:14px 'Roboto';}.uploadform.jsx-236463443 .previewframe.jsx-236463443{position:absolute;right:20px;top:20px;width:300px;max-height:300px;overflow:hidden;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;}.uploadform.jsx-236463443 .previewframe.jsx-236463443 img.jsx-236463443{float:left;width:100%;height:auto;}.uploadform.jsx-236463443 form.jsx-236463443{float:left;width:100%;height:100%;}.uploadform.jsx-236463443{float:left;width:100%;position:relative;min-height:300px;}#left.jsx-236463443 h2.jsx-236463443{float:left;margin:0;width:90%;padding:10px 5%;font:22px 'Montserrat';}#left.jsx-236463443{float:left;width:40%;height:100%;}.body.jsx-236463443{float:left;width:100%;height:100%;margin-top:90px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/williamforte/Canvas/burkedeveloping/pages/backend_host_controller/imageupload.js */\"));\n}\n\nUploadImage.getInitialProps = async e => {\n  const getimg = await fetch(baseConfig.baseURL + '/getallimages', {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  });\n  return {\n    firstLoadImages: getimg.images\n  };\n};\n\nexport default UploadImage;","map":{"version":3,"sources":["/Users/williamforte/Canvas/burkedeveloping/pages/backend_host_controller/imageupload.js"],"names":["useState","baseConfig","Theme","UploadImage","firstLoadImages","images","setImages","file","setFile","preview","setPreview","uploadImageSingle","e","preventDefault","formData","FormData","append","uploadImage","fetch","baseURL","method","body","then","response","json","loadImages","uploadImageMultiple","console","log","i","length","uri","type","name","newupload","handleFileChangeSingle","persist","URL","createObjectURL","target","files","handleFileChangeMulti","removeImage","image","newremove","status","getImages","map","backendImages","getInitialProps","getimg"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { baseConfig } from '../../services/restservice'\nimport Theme from '../../styles/theme'\n\nfunction UploadImage({firstLoadImages}) {\n\n    const [images, setImages] = useState(firstLoadImages)\n    const [file, setFile] = useState(null)\n    const [preview, setPreview] = useState(null)\n\n    const uploadImageSingle = async(e) => {\n        e.preventDefault()\n        if(file == null) return \n        const formData = new FormData()\n        formData.append(\"myFile\", file)\n        const uploadImage = await fetch(baseConfig.baseURL + '/uploadfile', {\n            method: 'POST',\n            body: formData\n        })\n        .then(response => {\n            return response.json()\n        })\n        if(uploadImage) {\n            setPreview(null)\n            setFile(null)\n            loadImages(e)\n        }\n    }\n\n    const uploadImageMultiple = async(e) => {\n        e.preventDefault()\n        console.log(file)\n        if(file == null) return \n        const formData = new FormData()\n\n        for (let i = 0; i < file.length; i++) {\n            console.log(file[i].uri)\n            formData.append(`myImages[]`, {\n                uri: file[i].uri,\n                type: 'image/*',\n                name: file[i].name\n            })\n        }\n\n        console.log(formData)\n        const newupload = await fetch('http://localhost:3600/uploadmultiple', {\n            method: 'POST',\n            body: formData\n        })\n        .then(response => {\n            return response.json()\n        })\n        console.log(newupload)\n        if(newupload) {\n            setPreview(null)\n            setFile(null)\n            console.log(newupload)\n            loadImages(e)\n        }\n    }\n\n    const handleFileChangeSingle = (e) => {\n        e.persist()\n        setPreview(URL.createObjectURL(e.target.files[0]))\n        setFile(e.target.files[0])\n    }\n\n    const handleFileChangeMulti = (e) => {\n        e.persist()\n        setPreview(URL.createObjectURL(e.target.files[0]))\n        setFile(e.target.files[0])\n    }\n\n    const removeImage = async(e, image) => {\n        e.preventDefault()\n        const newremove = await fetch(baseConfig.baseURL + '/removeimage/' + image, {\n            method: 'DELETE',\n        }).then(response => {\n            return response.status\n        })\n        if(newremove) {\n            console.log(newremove)\n\n        }\n    }\n\n    const loadImages = async(e) => {\n        e.preventDefault()\n        const getImages = await fetch('http://localhost:3600/getallimages', {\n            method: 'GET',\n        }).then (response => {\n            return response.json()\n        })\n        if(getImages) {\n            setImages(getImages.images)\n        }\n    }\n\n    return (\n        <div className='body'>\n            <div id=\"left\">\n                <h2>Single Image Upload</h2>\n                <div className='uploadform'>\n                    <form onSubmit={uploadImageSingle}>\n                        <div className='previewframe'><img className='preview' src={preview ? preview: '/imageplaceholder.png'} /></div>\n                        <label htmlFor='fileid'>{file ? file.name: 'Select image'}</label>\n                        <input id='fileid' type='file' accept='image/*' onChange={handleFileChangeSingle} required />\n                        <button type='submit'>Upload Image</button>\n                    </form>\n                </div>\n                <h2>Multiple Image Upload</h2>\n                <div className='uploadform'>\n                    <form onSubmit={uploadImageMultiple}>\n                        <div className='previewframe'><img className='preview' src={preview ? preview: '/imageplaceholder.png'} /></div>\n                        <label htmlFor='fileid'>{file ? file.name: 'Select images'}</label>\n                        <input id='fileid' type='file' accept='image/*' onChange={handleFileChangeMulti} required multiple/>\n                        <button type='submit'>Upload Images</button>\n                    </form>\n                </div>\n            </div>\n            <div className='images'>\n                    <h1>My Images</h1>\n                    <div className='imageholder'>\n                        {images != null ? images.map((image, i) => {\n                            return (\n                                <div key={i} className='imgframe'>\n                                    <div onClick={(e) => removeImage(e, image)} className='x'>x</div>\n                                    <img src={baseConfig.backendImages + image} />\n                                </div>\n                            )\n                        }): <h2 onClick={loadImages}>Load Images</h2>}\n                    </div>\n                </div>\n            <style jsx>{`\n                .imageholder {\n                    float: left;\n                    width: 100%;\n                    margin-top: 10px;\n                    display: flex;\n                    flex-wrap: wrap;\n                    justify-content: center;\n                }\n                .imgframe {\n                    float: left;\n                    width: 150px;\n                    height: 120px;\n                    margin: 8px;\n                    overflow: hidden;\n                    position: relative;\n                    background: rgba(200,200,200,.2);\n                }\n                .imgframe img {\n                    position: absolute;\n                    width: 100%;\n                    top: 50%;\n                    left: 50%;\n                    transform: translate(-50%, -50%);\n                }\n                .x {\n                    position: absolute;\n                    right: 10px;\n                    top: 10px;\n                    padding: 0 8px;\n                    padding-bottom: 4px;\n                    text-align: center;\n                    font: 18px 'Roboto';\n                    cursor: pointer;\n                    opacity: .7;\n                    transition: all .3s ease;\n                    z-index: 999;\n                    background: rgba(255,255,255,1);\n                }\n                .x:hover {\n                    opacity: 1;\n                }\n                .images {\n                    float: left;\n                    width: 60%;\n                }\n                .images h1 {\n                    float: left;\n                    font: 30px 'Montserrat';\n                    margin: 0;\n                    padding: 10px;\n                }\n                .uploadform input {\n                    display: none;\n                }\n                .uploadform label {\n                    position: absolute;\n                    top: 60px;\n                    left: 20px;\n                    padding: 10px;\n                    cursor: pointer;\n                    opacity: .7;\n                    transition: all .3s ease;\n                    font: 14px 'Roboto';\n                }\n                .uploadform label:hover {\n                    opacity: 1;\n                }\n                .uploadform button {\n                    position: absolute;\n                    bottom: 90px;\n                    left: 20px;\n                    padding: 10px;\n                    cursor: pointer;\n                    opacity: .7;\n                    transition: all .3s ease;\n                    font: 14px 'Roboto';\n                }\n                .uploadform .previewframe {\n                    position: absolute;\n                    right: 20px;\n                    top: 20px;\n                    width: 300px;\n                    max-height: 300px;\n                    overflow: hidden;\n                    display: flex;\n                    justify-content: center;\n                    align-content: center;\n                }\n                .uploadform .previewframe img {\n                    float: left;\n                    width: 100%;\n                    height: auto;\n                }\n                .uploadform form {\n                    float: left;\n                    width: 100%;\n                    height: 100%;\n                }\n                .uploadform {\n                    float: left;\n                    width: 100%;\n                    position: relative;\n                    min-height: 300px;\n                }\n                #left h2 {\n                    float: left;\n                    margin: 0;\n                    width: 90%;\n                    padding: 10px 5%;\n                    font: 22px 'Montserrat';\n                }\n                #left {\n                    float: left;\n                    width: 40%;\n                    height: 100%;\n                }\n                .body {\n                    float: left;\n                    width: 100%;\n                    height: 100%;\n                    margin-top: 90px;\n                }\n            `}</style>\n        </div>\n    )\n}\n\nUploadImage.getInitialProps = async(e) => {\n    \n    const getimg = await fetch(baseConfig.baseURL + '/getallimages', {\n        method: 'GET',\n    }).then (response => {\n        return response.json()\n    })\n    return {firstLoadImages: getimg.images}\n}\n\nexport default UploadImage"]},"metadata":{},"sourceType":"module"}