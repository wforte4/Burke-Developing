{"ast":null,"code":"import { Cookies } from 'react-cookie';\nimport { baseConfig } from './restservice';\nconst cookies = new Cookies();\nexport async function createProject(title, body, tags, images) {\n  const getCookies = cookies.getAll(); // New Login Data request\n\n  const newProject = await fetch(baseConfig.projectURL, {\n    method: 'POST',\n    headers: {\n      \"Content-type\": \"application/json\",\n      \"Authorization\": `Bearer ${getCookies.accessToken}`\n    },\n    body: JSON.stringify({\n      \"title\": title,\n      \"body\": body,\n      \"tags\": tags,\n      \"images\": images\n    })\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (error) {\n    return error;\n  });\n\n  if (newProject) {\n    return newProject;\n  }\n}\nexport async function getProjects(limit) {\n  // New Login Data request\n  const newTask = await fetch(baseConfig.projectURL + '/get', {\n    method: 'GET',\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    query: JSON.stringify({\n      \"limit\": limit\n    })\n  }).then(function (response) {\n    if (response.status == 403) {\n      return 'Not Authorized';\n    }\n\n    return response.json();\n  }).catch(function (error) {\n    return error;\n  });\n\n  if (newTask) {\n    return newTask;\n  }\n}\nexport async function getProjectById(id) {\n  // New Login Data request\n  const newTask = await fetch(baseConfig.projectURL + id, {\n    method: 'GET',\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  }).then(function (response) {\n    if (response.status == 403) {\n      return 'Not Authorized';\n    }\n\n    return response.json();\n  }).catch(function (error) {\n    return error;\n  });\n\n  if (newTask) {\n    return newTask;\n  }\n}\nexport async function removeProject(taskId) {\n  const getCookies = cookies.getAll(); // New Login Data request\n\n  const newTask = await fetch(baseConfig.projectURL + taskId, {\n    method: 'DELETE',\n    headers: {\n      \"Authorization\": `Bearer ${getCookies.accessToken ? getCookies.accessToken : token}`\n    }\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (error) {\n    return error;\n  });\n\n  if (newTask) {\n    return newTask;\n  }\n}\nexport async function updateProject(taskId, edits) {\n  const getCookies = cookies.getAll(); // New Login Data request\n\n  const newTask = await fetch(baseConfig.projectURL + taskId, {\n    method: 'PATCH',\n    headers: {\n      \"Content-type\": \"application/json\",\n      \"Authorization\": `Bearer ${getCookies.accessToken ? getCookies.accessToken : token}`\n    },\n    body: JSON.stringify({\n      edits\n    })\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (error) {\n    return error;\n  });\n\n  if (newTask) {\n    return newTask;\n  }\n}","map":{"version":3,"sources":["/Users/williamforte/Canvas/burkedeveloping/services/projectservice.js"],"names":["Cookies","baseConfig","cookies","createProject","title","body","tags","images","getCookies","getAll","newProject","fetch","projectURL","method","headers","accessToken","JSON","stringify","then","response","json","catch","error","getProjects","limit","newTask","query","status","getProjectById","id","removeProject","taskId","token","updateProject","edits"],"mappings":"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","sourcesContent":["import { Cookies } from 'react-cookie';\nimport { baseConfig } from './restservice' \n\nconst cookies = new Cookies();\n\nexport async function createProject(title, body, tags, images) {\n    \n    const getCookies = cookies.getAll()\n    // New Login Data request\n    const newProject = await fetch(baseConfig.projectURL, {\n        method: 'POST',\n        headers: {\n            \"Content-type\": \"application/json\",\n            \"Authorization\": `Bearer ${getCookies.accessToken}`\n        },\n        body: JSON.stringify({\n            \"title\": title,\n            \"body\": body,\n            \"tags\": tags,\n            \"images\": images\n        })\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newProject) {\n        return newProject\n    }\n}\n\nexport async function getProjects(limit) {\n    // New Login Data request\n    const newTask = await fetch(baseConfig.projectURL + '/get', {\n        method: 'GET',\n        headers: {\n            \"Content-type\": \"application/json\"\n        },\n        query: JSON.stringify({\n            \"limit\": limit\n        })\n    })\n    .then(function(response) {\n        if(response.status == 403) {\n            return 'Not Authorized'\n        }\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newTask) {\n        return newTask\n    }\n}\n\nexport async function getProjectById(id) {\n    // New Login Data request\n    const newTask = await fetch(baseConfig.projectURL + id, {\n        method: 'GET',\n        headers: {\n            \"Content-type\": \"application/json\"\n        }\n    })\n    .then(function(response) {\n        if(response.status == 403) {\n            return 'Not Authorized'\n        }\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newTask) {\n        return newTask\n    }\n}\n\nexport async function removeProject(taskId) {\n    \n    const getCookies = cookies.getAll()\n    // New Login Data request\n    const newTask = await fetch(baseConfig.projectURL + taskId, {\n        method: 'DELETE',\n        headers: {\n            \"Authorization\": `Bearer ${getCookies.accessToken ? getCookies.accessToken: token}`\n        }\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newTask) {\n        return newTask\n    }\n}\n\nexport async function updateProject(taskId, edits) {\n    \n    const getCookies = cookies.getAll()\n    // New Login Data request\n    const newTask = await fetch(baseConfig.projectURL + taskId, {\n        method: 'PATCH',\n        headers: {\n            \"Content-type\": \"application/json\",\n            \"Authorization\": `Bearer ${getCookies.accessToken ? getCookies.accessToken: token}`\n        },\n        body: JSON.stringify({ edits })\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newTask) {\n        return newTask\n    }\n}"]},"metadata":{},"sourceType":"module"}