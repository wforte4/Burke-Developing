{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { catchAxiosError } from \"./error\";\nimport { post, get, postFile } from \"./restservice\";\nimport Router from 'next/router';\nimport { Cookies } from 'react-cookie';\nimport nextCookies from 'next-cookies';\nimport jwt_decode from 'jwt-decode';\nvar cookies = new Cookies();\nexport var backendImages = \"https://uplink.work/restapi/uploadimages/\";\nexport function createProfile(_x, _x2, _x3, _x4) {\n  return _createProfile.apply(this, arguments);\n}\n\nfunction _createProfile() {\n  _createProfile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(firstname, lastname, email, password) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // Request data to post to createprofile route on rest api\n            fetch('http://localhost:3600/users', {\n              method: 'POST',\n              headers: {\n                \"Content-type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                \"firstName\": firstname,\n                \"lastName\": lastname,\n                \"email\": email,\n                \"password\": password\n              })\n            }).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              console.log('Request succeeded with JSON response', data);\n            })[\"catch\"](function (error) {\n              console.log('Request failed', error);\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _createProfile.apply(this, arguments);\n}\n\nexport function loginRequest(_x5, _x6) {\n  return _loginRequest.apply(this, arguments);\n}\n\nfunction _loginRequest() {\n  _loginRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email, password) {\n    var newLogin;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch('http://localhost:3600/auth', {\n              method: 'POST',\n              headers: {\n                \"Content-type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                \"email\": email,\n                \"password\": password\n              })\n            }).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              cookies.set('accessToken', data.accessToken);\n              cookies.set('refreshToken', data.refreshToken);\n              var decoded = jwt_decode(data.accessToken);\n              cookies.set('name', decoded.name);\n              cookies.set('email', decoded.email);\n              cookies.set('refreshKey', decoded.refreshKey);\n              cookies.set('permission_level', decoded.permissionLevel);\n              cookies.set('userId', decoded.userId);\n              Router.push(\"/\");\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 2:\n            newLogin = _context2.sent;\n\n            if (!newLogin) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", \"Username/Password does not match our records!\");\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _loginRequest.apply(this, arguments);\n}\n\nexport function Logout() {\n  return _Logout.apply(this, arguments);\n}\n\nfunction _Logout() {\n  _Logout = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            cookies.remove('accessToken');\n            cookies.remove('refreshToken');\n            cookies.remove('name');\n            cookies.remove('email');\n            cookies.remove('refreshKey');\n            cookies.remove('userId');\n            _context3.next = 8;\n            return Router.push(\"/login\");\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _Logout.apply(this, arguments);\n}\n\nexport function createTask(_x7, _x8) {\n  return _createTask.apply(this, arguments);\n}\n\nfunction _createTask() {\n  _createTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(objective, status) {\n    var getCookies, newTask;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            getCookies = cookies.getAll(); // New Login Data request\n\n            _context4.next = 3;\n            return fetch('http://localhost:3600/tasks', {\n              method: 'POST',\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(getCookies.accessToken)\n              },\n              body: JSON.stringify({\n                \"objective\": objective,\n                \"status\": status\n              })\n            }).then(function (response) {\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 3:\n            newTask = _context4.sent;\n\n            if (!newTask) {\n              _context4.next = 6;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", newTask);\n\n          case 6:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _createTask.apply(this, arguments);\n}\n\nexport function getTasks(_x9, _x10) {\n  return _getTasks.apply(this, arguments);\n}\n\nfunction _getTasks() {\n  _getTasks = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(limit, token) {\n    var getCookies, newTask;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            getCookies = cookies.getAll(); // New Login Data request\n\n            _context5.next = 3;\n            return fetch('http://localhost:3600/tasks', {\n              method: 'GET',\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(getCookies.accessToken ? getCookies.accessToken : token)\n              },\n              query: JSON.stringify({\n                \"limit\": limit\n              })\n            }).then(function (response) {\n              if (response.status == 403) {\n                return 'Not Authorized';\n              }\n\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 3:\n            newTask = _context5.sent;\n\n            if (!newTask) {\n              _context5.next = 6;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", newTask);\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _getTasks.apply(this, arguments);\n}\n\nexport function removeTask(_x11) {\n  return _removeTask.apply(this, arguments);\n}\n\nfunction _removeTask() {\n  _removeTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(taskId) {\n    var getCookies, newTask;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            getCookies = cookies.getAll(); // New Login Data request\n\n            _context6.next = 3;\n            return fetch(\"http://localhost:3600/tasks/\".concat(taskId), {\n              method: 'DELETE',\n              headers: {\n                \"Authorization\": \"Bearer \".concat(getCookies.accessToken ? getCookies.accessToken : token)\n              }\n            }).then(function (response) {\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 3:\n            newTask = _context6.sent;\n\n            if (!newTask) {\n              _context6.next = 6;\n              break;\n            }\n\n            return _context6.abrupt(\"return\", newTask);\n\n          case 6:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _removeTask.apply(this, arguments);\n}\n\nexport function updateTaskStatus(_x12, _x13) {\n  return _updateTaskStatus.apply(this, arguments);\n}\n\nfunction _updateTaskStatus() {\n  _updateTaskStatus = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(taskId, newstatus) {\n    var getCookies, newTask;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            getCookies = cookies.getAll(); // New Login Data request\n\n            _context7.next = 3;\n            return fetch(\"http://localhost:3600/tasks/\".concat(taskId), {\n              method: 'PATCH',\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(getCookies.accessToken ? getCookies.accessToken : token)\n              },\n              body: JSON.stringify({\n                \"status\": newstatus\n              })\n            }).then(function (response) {\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 3:\n            newTask = _context7.sent;\n\n            if (!newTask) {\n              _context7.next = 6;\n              break;\n            }\n\n            return _context7.abrupt(\"return\", newTask);\n\n          case 6:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _updateTaskStatus.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}