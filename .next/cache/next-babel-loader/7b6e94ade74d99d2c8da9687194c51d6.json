{"ast":null,"code":"var _jsxFileName = \"/Users/williamforte/Canvas/burkedeveloping/pages/backend_host_controller/imageupload.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { baseConfig } from '../../services/restservice';\n\nfunction UploadImage({\n  images\n}) {\n  const {\n    0: file,\n    1: setFile\n  } = useState(null);\n  const {\n    0: preview,\n    1: setPreview\n  } = useState(null);\n\n  const uploadImageSingle = async e => {\n    e.preventDefault();\n    if (file == null) return;\n    const formData = new FormData();\n    formData.append(\"myFile\", file);\n    const uploadImage = await fetch('http://localhost:3600/uploadfile', {\n      method: 'POST',\n      body: formData\n    }).then(response => {\n      return response.json();\n    });\n\n    if (uploadImage) {\n      setPreview(null);\n      setFile(null);\n      loadImages(e);\n    }\n  };\n\n  const uploadImageMultiple = async e => {\n    e.preventDefault();\n    console.log(file);\n    if (file == null) return;\n    const formData = new FormData();\n\n    for (let i = 0; i < file.length; i++) {\n      console.log(file[i].uri);\n      formData.append(`myImages[]`, {\n        uri: file[i].uri,\n        type: 'image/*',\n        name: file[i].name\n      });\n    }\n\n    console.log(formData);\n    const newupload = await fetch('http://localhost:3600/uploadmultiple', {\n      method: 'POST',\n      body: formData\n    }).then(response => {\n      return response.json();\n    });\n    console.log(newupload);\n\n    if (newupload) {\n      setPreview(null);\n      setFile(null);\n      console.log(newupload);\n      loadImages(e);\n    }\n  };\n\n  const handleFileChangeSingle = e => {\n    e.persist();\n    setPreview(URL.createObjectURL(e.target.files[0]));\n    setFile(e.target.file[0]);\n  };\n\n  const removeImage = async (e, image) => {\n    e.preventDefault();\n    const newremove = await fetch(baseConfig.baseURL + '/removeimage/' + image, {\n      method: 'DELETE'\n    }).then(response => {\n      return response.status;\n    });\n\n    if (newremove) {\n      console.log(newremove);\n    }\n  };\n\n  const loadImages = async e => {\n    e.preventDefault();\n    const getImages = await fetch('http://localhost:3600/getallimages', {\n      method: 'GET'\n    }).then(response => {\n      return response.json();\n    });\n\n    if (getImages) {\n      setImages(getImages.images);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-76393128\" + \" \" + 'body',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-76393128\" + \" \" + 'uploadform',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, __jsx(\"form\", {\n    onSubmit: uploadImageSingle,\n    className: \"jsx-76393128\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-76393128\" + \" \" + 'previewframe',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: preview ? preview : '/imageplaceholder.png',\n    className: \"jsx-76393128\" + \" \" + 'preview',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 51\n    }\n  })), __jsx(\"label\", {\n    htmlFor: \"fileid\",\n    className: \"jsx-76393128\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, file ? file.name : 'Select image'), __jsx(\"input\", {\n    id: \"fileid\",\n    type: \"file\",\n    accept: \"image/*\",\n    onChange: handleFileChangeSingle,\n    required: true,\n    className: \"jsx-76393128\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"jsx-76393128\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, \"Upload Image\"))), __jsx(\"div\", {\n    className: \"jsx-76393128\" + \" \" + 'images',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: \"jsx-76393128\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"My Images\"), __jsx(\"div\", {\n    className: \"jsx-76393128\" + \" \" + 'imageholder',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, images != null ? images.map((image, i) => {\n    return __jsx(\"div\", {\n      key: i,\n      className: \"jsx-76393128\" + \" \" + 'imgframe',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 33\n      }\n    }, __jsx(\"div\", {\n      onClick: e => removeImage(e, image),\n      className: \"jsx-76393128\" + \" \" + 'x',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 37\n      }\n    }, \"x\"), __jsx(\"img\", {\n      src: baseConfig.backendImages + image,\n      className: \"jsx-76393128\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 37\n      }\n    }));\n  }) : __jsx(\"h2\", {\n    onClick: loadImages,\n    className: \"jsx-76393128\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }, \"Load Images\"))), __jsx(_JSXStyle, {\n    id: \"76393128\",\n    __self: this\n  }, \".uploadform.jsx-76393128 input.jsx-76393128{display:none;}.uploadform.jsx-76393128 label.jsx-76393128{float:left;padding:10px;}.uploadform.jsx-76393128 .previewframe.jsx-76393128{position:absolute;left:20px;top:20px;width:300px;max-height:300px;overflow:hidden;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;}.uploadform.jsx-76393128 .previewframe.jsx-76393128 img.jsx-76393128{float:left;width:100%;height:auto;}.uploadform.jsx-76393128 form.jsx-76393128{float:left;width:100%;height:100%;}.uploadform.jsx-76393128{float:left;width:40%;position:relative;}.body.jsx-76393128{float:left;width:100%;margin-top:80px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy93aWxsaWFtZm9ydGUvQ2FudmFzL2J1cmtlZGV2ZWxvcGluZy9wYWdlcy9iYWNrZW5kX2hvc3RfY29udHJvbGxlci9pbWFnZXVwbG9hZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpSHdCLEFBR2tDLEFBR0YsQUFLTyxBQVdQLEFBS0EsQUFLQSxBQUtBLFdBOUJFLEFBZ0JGLEFBS0EsQUFLRCxBQUtDLEVBbENmLEtBUWMsR0FzQlEsQ0FWTixBQUtBLEFBVUksRUE5QnBCLElBSWEsTUFZYixBQUtBLEdBaEJnQixDQTBCaEIsQ0FMQSxVQXBCcUIsaUJBQ0QsZ0JBQ0gsMEVBQ1UsbUdBQ0YsNEVBQ3pCIiwiZmlsZSI6Ii9Vc2Vycy93aWxsaWFtZm9ydGUvQ2FudmFzL2J1cmtlZGV2ZWxvcGluZy9wYWdlcy9iYWNrZW5kX2hvc3RfY29udHJvbGxlci9pbWFnZXVwbG9hZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBiYXNlQ29uZmlnIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvcmVzdHNlcnZpY2UnXG5cbmZ1bmN0aW9uIFVwbG9hZEltYWdlKHtpbWFnZXN9KSB7XG5cbiAgICBjb25zdCBbZmlsZSwgc2V0RmlsZV0gPSB1c2VTdGF0ZShudWxsKVxuICAgIGNvbnN0IFtwcmV2aWV3LCBzZXRQcmV2aWV3XSA9IHVzZVN0YXRlKG51bGwpXG5cbiAgICBjb25zdCB1cGxvYWRJbWFnZVNpbmdsZSA9IGFzeW5jKGUpID0+IHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICAgIGlmKGZpbGUgPT0gbnVsbCkgcmV0dXJuIFxuICAgICAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpXG4gICAgICAgIGZvcm1EYXRhLmFwcGVuZChcIm15RmlsZVwiLCBmaWxlKVxuICAgICAgICBjb25zdCB1cGxvYWRJbWFnZSA9IGF3YWl0IGZldGNoKCdodHRwOi8vbG9jYWxob3N0OjM2MDAvdXBsb2FkZmlsZScsIHtcbiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgICAgYm9keTogZm9ybURhdGFcbiAgICAgICAgfSlcbiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKVxuICAgICAgICB9KVxuICAgICAgICBpZih1cGxvYWRJbWFnZSkge1xuICAgICAgICAgICAgc2V0UHJldmlldyhudWxsKVxuICAgICAgICAgICAgc2V0RmlsZShudWxsKVxuICAgICAgICAgICAgbG9hZEltYWdlcyhlKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgdXBsb2FkSW1hZ2VNdWx0aXBsZSA9IGFzeW5jKGUpID0+IHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICAgIGNvbnNvbGUubG9nKGZpbGUpXG4gICAgICAgIGlmKGZpbGUgPT0gbnVsbCkgcmV0dXJuIFxuICAgICAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpXG5cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBmaWxlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhmaWxlW2ldLnVyaSlcbiAgICAgICAgICAgIGZvcm1EYXRhLmFwcGVuZChgbXlJbWFnZXNbXWAsIHtcbiAgICAgICAgICAgICAgICB1cmk6IGZpbGVbaV0udXJpLFxuICAgICAgICAgICAgICAgIHR5cGU6ICdpbWFnZS8qJyxcbiAgICAgICAgICAgICAgICBuYW1lOiBmaWxlW2ldLm5hbWVcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgICAgICBjb25zb2xlLmxvZyhmb3JtRGF0YSlcbiAgICAgICAgY29uc3QgbmV3dXBsb2FkID0gYXdhaXQgZmV0Y2goJ2h0dHA6Ly9sb2NhbGhvc3Q6MzYwMC91cGxvYWRtdWx0aXBsZScsIHtcbiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgICAgYm9keTogZm9ybURhdGFcbiAgICAgICAgfSlcbiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKVxuICAgICAgICB9KVxuICAgICAgICBjb25zb2xlLmxvZyhuZXd1cGxvYWQpXG4gICAgICAgIGlmKG5ld3VwbG9hZCkge1xuICAgICAgICAgICAgc2V0UHJldmlldyhudWxsKVxuICAgICAgICAgICAgc2V0RmlsZShudWxsKVxuICAgICAgICAgICAgY29uc29sZS5sb2cobmV3dXBsb2FkKVxuICAgICAgICAgICAgbG9hZEltYWdlcyhlKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgaGFuZGxlRmlsZUNoYW5nZVNpbmdsZSA9IChlKSA9PiB7XG4gICAgICAgIGUucGVyc2lzdCgpXG4gICAgICAgIHNldFByZXZpZXcoVVJMLmNyZWF0ZU9iamVjdFVSTChlLnRhcmdldC5maWxlc1swXSkpXG4gICAgICAgIHNldEZpbGUoZS50YXJnZXQuZmlsZVswXSlcbiAgICB9XG5cbiAgICBjb25zdCByZW1vdmVJbWFnZSA9IGFzeW5jKGUsIGltYWdlKSA9PiB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgICBjb25zdCBuZXdyZW1vdmUgPSBhd2FpdCBmZXRjaChiYXNlQ29uZmlnLmJhc2VVUkwgKyAnL3JlbW92ZWltYWdlLycgKyBpbWFnZSwge1xuICAgICAgICAgICAgbWV0aG9kOiAnREVMRVRFJyxcbiAgICAgICAgfSkudGhlbihyZXNwb25zZSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gcmVzcG9uc2Uuc3RhdHVzXG4gICAgICAgIH0pXG4gICAgICAgIGlmKG5ld3JlbW92ZSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2cobmV3cmVtb3ZlKVxuXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBsb2FkSW1hZ2VzID0gYXN5bmMoZSkgPT4ge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgY29uc3QgZ2V0SW1hZ2VzID0gYXdhaXQgZmV0Y2goJ2h0dHA6Ly9sb2NhbGhvc3Q6MzYwMC9nZXRhbGxpbWFnZXMnLCB7XG4gICAgICAgICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgICB9KS50aGVuIChyZXNwb25zZSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpXG4gICAgICAgIH0pXG4gICAgICAgIGlmKGdldEltYWdlcykge1xuICAgICAgICAgICAgc2V0SW1hZ2VzKGdldEltYWdlcy5pbWFnZXMpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nYm9keSc+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ndXBsb2FkZm9ybSc+XG4gICAgICAgICAgICAgICAgPGZvcm0gb25TdWJtaXQ9e3VwbG9hZEltYWdlU2luZ2xlfT5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3ByZXZpZXdmcmFtZSc+PGltZyBjbGFzc05hbWU9J3ByZXZpZXcnIHNyYz17cHJldmlldyA/IHByZXZpZXc6ICcvaW1hZ2VwbGFjZWhvbGRlci5wbmcnfSAvPjwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgaHRtbEZvcj0nZmlsZWlkJz57ZmlsZSA/IGZpbGUubmFtZTogJ1NlbGVjdCBpbWFnZSd9PC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IGlkPSdmaWxlaWQnIHR5cGU9J2ZpbGUnIGFjY2VwdD0naW1hZ2UvKicgb25DaGFuZ2U9e2hhbmRsZUZpbGVDaGFuZ2VTaW5nbGV9IHJlcXVpcmVkIC8+XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0nc3VibWl0Jz5VcGxvYWQgSW1hZ2U8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L2Zvcm0+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdpbWFnZXMnPlxuICAgICAgICAgICAgICAgICAgICA8aDE+TXkgSW1hZ2VzPC9oMT5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2ltYWdlaG9sZGVyJz5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtpbWFnZXMgIT0gbnVsbCA/IGltYWdlcy5tYXAoKGltYWdlLCBpKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBrZXk9e2l9IGNsYXNzTmFtZT0naW1nZnJhbWUnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBvbkNsaWNrPXsoZSkgPT4gcmVtb3ZlSW1hZ2UoZSwgaW1hZ2UpfSBjbGFzc05hbWU9J3gnPng8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXtiYXNlQ29uZmlnLmJhY2tlbmRJbWFnZXMgKyBpbWFnZX0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk6IDxoMiBvbkNsaWNrPXtsb2FkSW1hZ2VzfT5Mb2FkIEltYWdlczwvaDI+fVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAgICAgICAudXBsb2FkZm9ybSBpbnB1dCB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC51cGxvYWRmb3JtIGxhYmVsIHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAudXBsb2FkZm9ybSAucHJldmlld2ZyYW1lIHtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgICAgICBsZWZ0OiAyMHB4O1xuICAgICAgICAgICAgICAgICAgICB0b3A6IDIwcHg7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAzMDBweDtcbiAgICAgICAgICAgICAgICAgICAgbWF4LWhlaWdodDogMzAwcHg7XG4gICAgICAgICAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgICAgICAgICAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC51cGxvYWRmb3JtIC5wcmV2aWV3ZnJhbWUgaW1nIHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC51cGxvYWRmb3JtIGZvcm0ge1xuICAgICAgICAgICAgICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnVwbG9hZGZvcm0ge1xuICAgICAgICAgICAgICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDQwJTtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAuYm9keSB7XG4gICAgICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogODBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgfTwvc3R5bGU+XG4gICAgICAgIDwvZGl2PlxuICAgIClcbn1cblxuVXBsb2FkSW1hZ2UuZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMoZSkgPT4ge1xuICAgIFxuICAgIGNvbnN0IGdldGltZyA9IGF3YWl0IGZldGNoKGJhc2VDb25maWcuYmFzZVVSTCArICcvZ2V0YWxsaW1hZ2VzJywge1xuICAgICAgICBtZXRob2Q6ICdHRVQnLFxuICAgIH0pLnRoZW4gKHJlc3BvbnNlID0+IHtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKVxuICAgIH0pXG4gICAgcmV0dXJuIHtpbWFnZXM6IGdldGltZy5pbWFnZXN9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFVwbG9hZEltYWdlIl19 */\\n/*@ sourceURL=/Users/williamforte/Canvas/burkedeveloping/pages/backend_host_controller/imageupload.js */\"));\n}\n\nUploadImage.getInitialProps = async e => {\n  const getimg = await fetch(baseConfig.baseURL + '/getallimages', {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  });\n  return {\n    images: getimg.images\n  };\n};\n\nexport default UploadImage;","map":{"version":3,"sources":["/Users/williamforte/Canvas/burkedeveloping/pages/backend_host_controller/imageupload.js"],"names":["useState","baseConfig","UploadImage","images","file","setFile","preview","setPreview","uploadImageSingle","e","preventDefault","formData","FormData","append","uploadImage","fetch","method","body","then","response","json","loadImages","uploadImageMultiple","console","log","i","length","uri","type","name","newupload","handleFileChangeSingle","persist","URL","createObjectURL","target","files","removeImage","image","newremove","baseURL","status","getImages","setImages","map","backendImages","getInitialProps","getimg"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { baseConfig } from '../../services/restservice'\n\nfunction UploadImage({images}) {\n\n    const [file, setFile] = useState(null)\n    const [preview, setPreview] = useState(null)\n\n    const uploadImageSingle = async(e) => {\n        e.preventDefault()\n        if(file == null) return \n        const formData = new FormData()\n        formData.append(\"myFile\", file)\n        const uploadImage = await fetch('http://localhost:3600/uploadfile', {\n            method: 'POST',\n            body: formData\n        })\n        .then(response => {\n            return response.json()\n        })\n        if(uploadImage) {\n            setPreview(null)\n            setFile(null)\n            loadImages(e)\n        }\n    }\n\n    const uploadImageMultiple = async(e) => {\n        e.preventDefault()\n        console.log(file)\n        if(file == null) return \n        const formData = new FormData()\n\n        for (let i = 0; i < file.length; i++) {\n            console.log(file[i].uri)\n            formData.append(`myImages[]`, {\n                uri: file[i].uri,\n                type: 'image/*',\n                name: file[i].name\n            })\n        }\n\n        console.log(formData)\n        const newupload = await fetch('http://localhost:3600/uploadmultiple', {\n            method: 'POST',\n            body: formData\n        })\n        .then(response => {\n            return response.json()\n        })\n        console.log(newupload)\n        if(newupload) {\n            setPreview(null)\n            setFile(null)\n            console.log(newupload)\n            loadImages(e)\n        }\n    }\n\n    const handleFileChangeSingle = (e) => {\n        e.persist()\n        setPreview(URL.createObjectURL(e.target.files[0]))\n        setFile(e.target.file[0])\n    }\n\n    const removeImage = async(e, image) => {\n        e.preventDefault()\n        const newremove = await fetch(baseConfig.baseURL + '/removeimage/' + image, {\n            method: 'DELETE',\n        }).then(response => {\n            return response.status\n        })\n        if(newremove) {\n            console.log(newremove)\n\n        }\n    }\n\n    const loadImages = async(e) => {\n        e.preventDefault()\n        const getImages = await fetch('http://localhost:3600/getallimages', {\n            method: 'GET',\n        }).then (response => {\n            return response.json()\n        })\n        if(getImages) {\n            setImages(getImages.images)\n        }\n    }\n\n    return (\n        <div className='body'>\n            <div className='uploadform'>\n                <form onSubmit={uploadImageSingle}>\n                    <div className='previewframe'><img className='preview' src={preview ? preview: '/imageplaceholder.png'} /></div>\n                    <label htmlFor='fileid'>{file ? file.name: 'Select image'}</label>\n                    <input id='fileid' type='file' accept='image/*' onChange={handleFileChangeSingle} required />\n                    <button type='submit'>Upload Image</button>\n                </form>\n            </div>\n            <div className='images'>\n                    <h1>My Images</h1>\n                    <div className='imageholder'>\n                        {images != null ? images.map((image, i) => {\n                            return (\n                                <div key={i} className='imgframe'>\n                                    <div onClick={(e) => removeImage(e, image)} className='x'>x</div>\n                                    <img src={baseConfig.backendImages + image} />\n                                </div>\n                            )\n                        }): <h2 onClick={loadImages}>Load Images</h2>}\n                    </div>\n                </div>\n            <style jsx>{`\n                .uploadform input {\n                    display: none;\n                }\n                .uploadform label {\n                    float: left;\n                    padding: 10px;\n                    \n                }\n                .uploadform .previewframe {\n                    position: absolute;\n                    left: 20px;\n                    top: 20px;\n                    width: 300px;\n                    max-height: 300px;\n                    overflow: hidden;\n                    display: flex;\n                    justify-content: center;\n                    align-content: center;\n                }\n                .uploadform .previewframe img {\n                    float: left;\n                    width: 100%;\n                    height: auto;\n                }\n                .uploadform form {\n                    float: left;\n                    width: 100%;\n                    height: 100%;\n                }\n                .uploadform {\n                    float: left;\n                    width: 40%;\n                    position: relative;\n                }\n                .body {\n                    float: left;\n                    width: 100%;\n                    margin-top: 80px;\n                }\n            `}</style>\n        </div>\n    )\n}\n\nUploadImage.getInitialProps = async(e) => {\n    \n    const getimg = await fetch(baseConfig.baseURL + '/getallimages', {\n        method: 'GET',\n    }).then (response => {\n        return response.json()\n    })\n    return {images: getimg.images}\n}\n\nexport default UploadImage"]},"metadata":{},"sourceType":"module"}