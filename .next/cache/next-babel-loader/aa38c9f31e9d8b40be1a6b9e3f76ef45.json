{"ast":null,"code":"var _jsxFileName = \"/Users/williamforte/Canvas/burkedeveloping/pages/backend_host_controller/taskmanager.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createTask, getTasks, removeTask, updateTaskStatus } from '../../services/apiservice';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport nextCookie from 'next-cookies';\nimport Theme from '../../styles/theme';\nconst sortingOrder = {\n  'inprogress': 1,\n  'created': 2,\n  'done': 3\n};\nexport function compare(key, order = 'asc') {\n  return function (a, b) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) return 0;\n    const first = a[key].toLowerCase() in sortingOrder ? sortingOrder[a[key]] : Number.MAX_SAFE_INTEGER;\n    const second = b[key].toLowerCase() in sortingOrder ? sortingOrder[b[key]] : Number.MAX_SAFE_INTEGER;\n    let result = 0;\n    if (first < second) result = -1;else if (first > second) result = 1;\n    return order === 'desc' ? ~result : result;\n  };\n}\n\nconst HamEx = ({\n  onClick,\n  color,\n  width,\n  height,\n  active\n}) => {\n  return __jsx(\"div\", {\n    onClick: onClick,\n    className: _JSXStyle.dynamic([[\"1318293250\", [width, height, color]]]) + \" \" + 'hame',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1318293250\", [width, height, color]]]) + \" \" + `slash ${active == true ? 'one' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1318293250\", [width, height, color]]]) + \" \" + `slash ${active == true ? 'two' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1318293250\", [width, height, color]]]) + \" \" + `slash ${active == true ? 'three' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"1318293250\",\n    dynamic: [width, height, color],\n    __self: this\n  }, `.hame.__jsx-style-dynamic-selector{float:left;width:${width}px;height:${height}px;padding:10px;position:relative;cursor:pointer;}.slash.__jsx-style-dynamic-selector{float:left;width:100%;height:8px;border-radius:8px;background:${color};margin:2px 0;-webkit-transition:all .4s ease;transition:all .4s ease;}.one.__jsx-style-dynamic-selector{-webkit-transform:translateY(12px) rotate(45deg);-ms-transform:translateY(12px) rotate(45deg);transform:translateY(12px) rotate(45deg);}.two.__jsx-style-dynamic-selector{opacity:0;}.three.__jsx-style-dynamic-selector{-webkit-transform:translateY(-12px) rotate(-45deg);-ms-transform:translateY(-12px) rotate(-45deg);transform:translateY(-12px) rotate(-45deg);}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy93aWxsaWFtZm9ydGUvQ2FudmFzL2J1cmtlZGV2ZWxvcGluZy9wYWdlcy9iYWNrZW5kX2hvc3RfY29udHJvbGxlci90YXNrbWFuYWdlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtQ3dCLEFBR2dDLEFBUUEsQUFTOEIsQUFHL0IsQUFHaUMsVUFGL0MsQ0FwQnlDLEFBUTFCLFdBQ0EsV0FDTyxlQVRvQixHQVVFLG1DQVQzQixLQVVBLFFBVEssS0FVTSxhQVRULGVBQ25CLEdBWUEsTUFNQSxtQkFUQSIsImZpbGUiOiIvVXNlcnMvd2lsbGlhbWZvcnRlL0NhbnZhcy9idXJrZWRldmVsb3BpbmcvcGFnZXMvYmFja2VuZF9ob3N0X2NvbnRyb2xsZXIvdGFza21hbmFnZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVUYXNrLCBnZXRUYXNrcywgcmVtb3ZlVGFzaywgdXBkYXRlVGFza1N0YXR1cyB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2FwaXNlcnZpY2UnXG5pbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUm91dGVyIGZyb20gJ25leHQvcm91dGVyJ1xuaW1wb3J0IG5leHRDb29raWUgZnJvbSAnbmV4dC1jb29raWVzJ1xuaW1wb3J0IFRoZW1lIGZyb20gJy4uLy4uL3N0eWxlcy90aGVtZSdcblxuY29uc3Qgc29ydGluZ09yZGVyID0ge1xuICAgICdpbnByb2dyZXNzJzogMSxcbiAgICAnY3JlYXRlZCc6IDIsXG4gICAgJ2RvbmUnOiAzXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjb21wYXJlKGtleSwgb3JkZXIgPSAnYXNjJykge1xuICAgIHJldHVybiBmdW5jdGlvbiAoYSwgYikge1xuICAgICAgICBpZiAoIWEuaGFzT3duUHJvcGVydHkoa2V5KSB8fCAhYi5oYXNPd25Qcm9wZXJ0eShrZXkpKSBcblx0ICAgIHJldHVybiAwO1xuXHRcdFxuXHRjb25zdCBmaXJzdCA9IChhW2tleV0udG9Mb3dlckNhc2UoKSBpbiBzb3J0aW5nT3JkZXIpID8gc29ydGluZ09yZGVyW2Fba2V5XV0gOiBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUjtcblx0Y29uc3Qgc2Vjb25kID0gKGJba2V5XS50b0xvd2VyQ2FzZSgpIGluIHNvcnRpbmdPcmRlcikgPyBzb3J0aW5nT3JkZXJbYltrZXldXSA6IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSO1xuXHRcdFxuXHRsZXQgcmVzdWx0ID0gMDtcblx0aWYgKGZpcnN0IDwgc2Vjb25kKSBcblx0ICAgIHJlc3VsdCA9IC0xO1xuXHRlbHNlIGlmIChmaXJzdCA+IHNlY29uZCkgXG5cdCAgICByZXN1bHQgPSAxO1xuXHRyZXR1cm4gKG9yZGVyID09PSAnZGVzYycpID8gfnJlc3VsdCA6IHJlc3VsdFxuICAgIH07XG59XG5cbmNvbnN0IEhhbUV4ID0gKHtvbkNsaWNrLCBjb2xvciwgd2lkdGgsIGhlaWdodCwgYWN0aXZlfSkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgb25DbGljaz17b25DbGlja30gY2xhc3NOYW1lPSdoYW1lJz5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgc2xhc2ggJHthY3RpdmUgPT0gdHJ1ZSA/ICdvbmUnOiAnJ31gfT48L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgc2xhc2ggJHthY3RpdmUgPT0gdHJ1ZSA/ICd0d28nOiAnJ31gfT48L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgc2xhc2ggJHthY3RpdmUgPT0gdHJ1ZSA/ICd0aHJlZSc6ICcnfWB9PjwvZGl2PlxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgICAgIC5oYW1lIHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAke3dpZHRofXB4O1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICR7aGVpZ2h0fXB4O1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnNsYXNoIHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDhweDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAke2NvbG9yfTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAycHggMDtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIC40cyBlYXNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAub25lIHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEycHgpIHJvdGF0ZSg0NWRlZyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC50d28ge1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAudGhyZWUge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEycHgpIHJvdGF0ZSgtNDVkZWcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC9kaXY+XG4gICAgKVxufVxuXG5mdW5jdGlvbiBUYXNrTWFuYWdlcih7Z2V0Rmlyc3RMb2FkfSkge1xuXG4gICAgY29uc3QgW2lucHV0cywgc2V0SW5wdXRzXSA9IHVzZVN0YXRlKHtcbiAgICAgICAgb2JqZWN0aXZlOiAnJyxcbiAgICAgICAgc3RhdHVzOiAnY3JlYXRlZCcsXG4gICAgfSlcbiAgICBjb25zdCBbYWxsVGFza3MsIHNldEFsbFRhc2tzXSA9IHVzZVN0YXRlKGdldEZpcnN0TG9hZCAhPSBudWxsID8gZ2V0Rmlyc3RMb2FkOiBudWxsKVxuICAgIGNvbnN0IFtzdGF0dXMsIHNldFN0YXR1c10gPSB1c2VTdGF0ZShnZXRGaXJzdExvYWQgIT0gbnVsbCA/ICdzdWNjZWVkZWQnOiAnbm9uZScpXG4gICAgbGV0IGxhc3RjYXQgPSBudWxsXG5cbiAgICAvLyBDcmVhdGUgYSBuZXcgVGFzayBERUZBVUxUOiBzdGF0dXM6ICdjcmVhdGVkJ1xuICAgIGNvbnN0IGNyZWF0ZU5ld1Rhc2sgPSBhc3luYyhlKSA9PiB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgY29uc3QgbmV3VGFzayA9IGF3YWl0IGNyZWF0ZVRhc2soaW5wdXRzLm9iamVjdGl2ZSwgaW5wdXRzLnN0YXR1cylcbiAgICAgICAgaWYobmV3VGFzaykge1xuICAgICAgICAgICAgY29uc29sZS5sb2cobmV3VGFzaylcbiAgICAgICAgICAgIHNldElucHV0cyh7Li4uaW5wdXRzLCBvYmplY3RpdmU6ICcnfSlcbiAgICAgICAgICAgIHVwZGF0ZVRhc2tzKGUpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBVcGRhdGluZyBUYXNrcyB3aXRoIEJhY2tlbmRcbiAgICBjb25zdCB1cGRhdGVUYXNrcyA9IGFzeW5jKGUpID0+IHtcbiAgICAgICAgc2V0U3RhdHVzKCdsb2FkaW5nJylcbiAgICAgICAgY29uc3QgZ2V0YWxsdGFza3MgPSBhd2FpdCBnZXRUYXNrcyg1MCwgbnVsbClcbiAgICAgICAgaWYoZ2V0YWxsdGFza3MpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGdldGFsbHRhc2tzKVxuICAgICAgICAgICAgZ2V0YWxsdGFza3Muc29ydChjb21wYXJlKCdzdGF0dXMnKSlcbiAgICAgICAgICAgIHNldEFsbFRhc2tzKGdldGFsbHRhc2tzKVxuICAgICAgICAgICAgc2V0U3RhdHVzKCdzdWNjZWVkZWQnKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgcmVtb3ZlVGhpc1Rhc2sgPSBhc3luYyhlLCB0YXNrX2lkKSA9PiB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgICBjb25zdCByZW1vdmVuZXd0YXNrID0gYXdhaXQgcmVtb3ZlVGFzayh0YXNrX2lkKTtcbiAgICAgICAgaWYocmVtb3ZlbmV3dGFzaykge1xuICAgICAgICAgICAgY29uc29sZS5sb2cocmVtb3ZlbmV3dGFzaylcbiAgICAgICAgICAgIHVwZGF0ZVRhc2tzKGUpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCB1cGRhdGVUaGlzVGFzayA9IGFzeW5jKGUsIHRhc2tfaWQsIHN0YXR1cykgPT4ge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgY29uc3QgdXBkYXRlbmV3dGFzayA9IGF3YWl0IHVwZGF0ZVRhc2tTdGF0dXModGFza19pZCwgc3RhdHVzKTtcbiAgICAgICAgaWYodXBkYXRlbmV3dGFzaykge1xuICAgICAgICAgICAgY29uc29sZS5sb2codXBkYXRlbmV3dGFzaylcbiAgICAgICAgICAgIHVwZGF0ZVRhc2tzKGUpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBpc1R5cGluZyA9IChlKSA9PiB7XG4gICAgICAgIGUucGVyc2lzdCgpO1xuICAgICAgICBzZXRJbnB1dHMoe1xuICAgICAgICAgICAgLi4uaW5wdXRzLFxuICAgICAgICAgICAgW2UudGFyZ2V0Lm5hbWVdOiBlLnRhcmdldC52YWx1ZVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdtYWluZGl2Jz5cbiAgICAgICAgICAgIDxmb3JtIG9uU3VibWl0PXtjcmVhdGVOZXdUYXNrfT5cbiAgICAgICAgICAgICAgICA8aDE+TmV3IFRhc2s8L2gxPlxuICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBcbiAgICAgICAgICAgICAgICAgICAgbmFtZT0nb2JqZWN0aXZlJ1xuICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17aXNUeXBpbmd9XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlPXtpbnB1dHMub2JqZWN0aXZlfVxuICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0nT2JqZWN0aXZlJ1xuICAgICAgICAgICAgICAgICAgICByZXF1aXJlZFxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPGJ1dHRvbj5BZGQgVGFzazwvYnV0dG9uPlxuICAgICAgICAgICAgPC9mb3JtPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3Rhc2tsaXN0Jz5cbiAgICAgICAgICAgICAgICA8aDE+TXkgVGFza3M8L2gxPlxuICAgICAgICAgICAgICAgIHthbGxUYXNrcyA/IGFsbFRhc2tzLm1hcCgodGFzaywgaSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBsZXQgbmV4dFN0YXR1cyA9IHRhc2suc3RhdHVzID09ICdjcmVhdGVkJyA/ICdpbnByb2dyZXNzJzogJ2RvbmUnO1xuICAgICAgICAgICAgICAgICAgICBpZihsYXN0Y2F0ID09IHRhc2suc3RhdHVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYga2V5PXtpfSBjbGFzc05hbWU9J3Rhc2snPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDI+T2JqZWN0aXZlOiB7dGFzay5vYmplY3RpdmV9PC9oMj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzPlN0YXR1czoge3Rhc2suc3RhdHVzfTwvaDM+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3NOYW1lPSd0aHJlZWRvdHMnIHNyYz0nL3RocmVlX2RvdHMucG5nJy8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdmbG9hdGVyJz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgb25DbGljaz17KGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXNrLnN0YXR1cyA9IG5leHRTdGF0dXM7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlVGhpc1Rhc2soZSwgdGFzay5pZCwgbmV4dFN0YXR1cylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19IGNsYXNzTmFtZT0ndXBkYXRlJz5VcGRhdGUgU3RhdHVzPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IG9uQ2xpY2s9eyhlKSA9PiByZW1vdmVUaGlzVGFzayhlLCB0YXNrLmlkKX0gY2xhc3NOYW1lPSdyZW1vdmUnPlJlbW92ZSBUYXNrPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGFzdGNhdCA9IHRhc2suc3RhdHVzO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGtleT17dGFzay5zdGF0dXN9IGNsYXNzTmFtZT0nY2F0Jz57dGFzay5zdGF0dXMudG9VcHBlckNhc2UoKX08L2Rpdj4sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBrZXk9e2l9IGNsYXNzTmFtZT0ndGFzayc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMj5PYmplY3RpdmU6IHt0YXNrLm9iamVjdGl2ZX08L2gyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDM+U3RhdHVzOiB7dGFzay5zdGF0dXN9PC9oMz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzc05hbWU9J3RocmVlZG90cycgc3JjPScvdGhyZWVfZG90cy5wbmcnLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2Zsb2F0ZXInPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBvbkNsaWNrPXsoZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhc2suc3RhdHVzID0gbmV4dFN0YXR1cztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVUaGlzVGFzayhlLCB0YXNrLmlkLCBuZXh0U3RhdHVzKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0gY2xhc3NOYW1lPSd1cGRhdGUnPlVwZGF0ZSBTdGF0dXM8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgb25DbGljaz17KGUpID0+IHJlbW92ZVRoaXNUYXNrKGUsIHRhc2suaWQpfSBjbGFzc05hbWU9J3JlbW92ZSc+UmVtb3ZlIFRhc2s8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTogc3RhdHVzID09ICdub25lJyA/IDxoMj5ObyBUYXNrcyB5ZXQ8L2gyPjogPGRpdiBjbGFzc05hbWU9J2xvYWRpbmcnPjwvZGl2Pn1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgXG4gICAgICAgICAgICA8aW1nIGlkPSdib2R5X2JnJyBzcmM9Jy9iZ19sb2dpbi5wbmcnLz5cbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAgICAgICAuY2F0IHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiA5MCU7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHggNSU7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICAgICAgICAgICAgZm9udDogMTJweCAnUm9ib3RvJztcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJHtUaGVtZS5jb2xvcnMuZ3VubWV0YWx9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAudGFza3RvZ2dsZSB7XG4gICAgICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwcHg7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTAwcHg7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC51cGRhdGUge1xuICAgICAgICAgICAgICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDhweCAwO1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQ6IDEycHggJ09wZW4gU2Fucyc7XG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IC45O1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC40cyBlYXNlO1xuICAgICAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC51cGRhdGU6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAucmVtb3ZlIHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiA4cHggMDtcbiAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgICAgICAgICBmb250OiAxMnB4ICdPcGVuIFNhbnMnO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogLjk7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyMjYsIDcwLCA3MCwuOCk7XG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnJlbW92ZTpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC50aHJlZWRvdHMge1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgICAgIHRvcDogLTVweDtcbiAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IC01cHg7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAyMHB4O1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDIwcHg7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnRocmVlZG90czpob3ZlciB+IC5mbG9hdGVyLCAuZmxvYXRlcjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKSBzY2FsZSgxLDEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAuZmxvYXRlciB7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IC0xMHB4O1xuICAgICAgICAgICAgICAgICAgICB0b3A6IC0xMHB4O1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogODBweDtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApIHNjYWxlKDAsMCk7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgICAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjJzIGVhc2UsIHRyYW5zZm9ybSAuNHM7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tkcm9wLWZpbHRlcjogYmx1cig4cHgpO1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsLjgpO1xuICAgICAgICAgICAgICAgICAgICBib3gtc2hhZG93OiAwIDAgMXB4IHJnYmEoMjAsMjAsMjAsLjYpO1xuICAgICAgICAgICAgICAgICAgICB6LWluZGV4OiA5OTk5O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAudGFza2xpc3Qge1xuICAgICAgICAgICAgICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAuMnMgZWFzZTtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnRhc2sge1xuICAgICAgICAgICAgICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDIwMHB4O1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC50YXNrIGgyIHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiA5MCU7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDVweCA1JTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgICAgICAgICBmb250OiAxM3B4ICdPcGVuIFNhbnMnO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAudGFzayBoMyB7XG4gICAgICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiA1cHggNSU7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgICAgICAgICAgZm9udDogMTJweCAnUm9ib3RvJztcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogLjg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC5tYWluZGl2IHRleHRhcmVhIHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMTBweCAyLjUlO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4IDIuNSU7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiA5MCU7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQ6IDE4cHggJ1JvYm90byc7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgICAgICAgICAgcmVzaXplOiB2ZXJ0aWNhbDtcbiAgICAgICAgICAgICAgICAgICAgbWF4LWhlaWdodDogMTUwcHg7XG4gICAgICAgICAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDMwcHg7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgICAgICAgICAgICAgICAgICAgYm94LXNoYWRvdzogMCAwIDJweCByZ2JhKDIwLDIwLDIwLC44KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLm1haW5kaXYge1xuICAgICAgICAgICAgICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgICAgIHotaW5kZXg6IDk5OTk7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMjBweCAwO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA5MHB4O1xuICAgICAgICAgICAgICAgICAgICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoOHB4KTtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAuOSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC5tYWluZGl2IGgxIHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMTBweCA1JTtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDkwJTtcbiAgICAgICAgICAgICAgICAgICAgZm9udDogMjBweCAnTW9udHNlcnJhdCc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC5tYWluZGl2IGZvcm0ge1xuICAgICAgICAgICAgICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDQwJTtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIC4ycyBlYXNlO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4IDUlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAjYm9keV9iZyB7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICB6LWluZGV4OiAtMjA7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgICAgICAgdG9wOiA1MCU7XG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgc2NhbGUoMS4xLDEuMSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC5tYWluZGl2IGJ1dHRvbiB7XG4gICAgICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4IDUlO1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAke1RoZW1lLmNvbG9ycy5yb3lhbGJsdWV9O1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMTBweCA1JTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgfTwvc3R5bGU+XG4gICAgICAgIDwvZGl2PlxuICAgIClcbn1cblxuVGFza01hbmFnZXIuZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMoY3R4KSA9PiB7XG4gICAgY29uc3QgY29va2llcyA9IGF3YWl0IG5leHRDb29raWUoY3R4KVxuICAgIGNvbnN0IGdldGZpcnN0dGFza3MgPSBhd2FpdCBnZXRUYXNrcyg1MCwgY29va2llcy5hY2Nlc3NUb2tlbilcbiAgICBpZihnZXRmaXJzdHRhc2tzID09ICdOb3QgQXV0aG9yaXplZCcpIHtcbiAgICAgICAgaWYgKGN0eC5yZXMpIHtcbiAgICAgICAgICAgIGN0eC5yZXMud3JpdGVIZWFkKDMwMSwge1xuICAgICAgICAgICAgICBMb2NhdGlvbjogJy9sb2dpbidcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgY3R4LnJlcy5lbmQoKTtcbiAgICAgICAgfSBcbiAgICB9XG4gICAgZ2V0Zmlyc3R0YXNrcy5zb3J0KGNvbXBhcmUoJ3N0YXR1cycpKVxuICAgIHJldHVybiB7Z2V0Rmlyc3RMb2FkOiBnZXRmaXJzdHRhc2tzfVxufVxuXG5leHBvcnQgZGVmYXVsdCBUYXNrTWFuYWdlciJdfQ== */\n/*@ sourceURL=/Users/williamforte/Canvas/burkedeveloping/pages/backend_host_controller/taskmanager.js */`));\n};\n\nfunction TaskManager({\n  getFirstLoad\n}) {\n  const {\n    0: inputs,\n    1: setInputs\n  } = useState({\n    objective: '',\n    status: 'created'\n  });\n  const {\n    0: allTasks,\n    1: setAllTasks\n  } = useState(getFirstLoad != null ? getFirstLoad : null);\n  const {\n    0: status,\n    1: setStatus\n  } = useState(getFirstLoad != null ? 'succeeded' : 'none');\n  let lastcat = null; // Create a new Task DEFAULT: status: 'created'\n\n  const createNewTask = async e => {\n    e.preventDefault();\n    const newTask = await createTask(inputs.objective, inputs.status);\n\n    if (newTask) {\n      console.log(newTask);\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        objective: ''\n      }));\n      updateTasks(e);\n    }\n  }; // Updating Tasks with Backend\n\n\n  const updateTasks = async e => {\n    setStatus('loading');\n    const getalltasks = await getTasks(50, null);\n\n    if (getalltasks) {\n      console.log(getalltasks);\n      getalltasks.sort(compare('status'));\n      setAllTasks(getalltasks);\n      setStatus('succeeded');\n    }\n  };\n\n  const removeThisTask = async (e, task_id) => {\n    e.preventDefault();\n    const removenewtask = await removeTask(task_id);\n\n    if (removenewtask) {\n      console.log(removenewtask);\n      updateTasks(e);\n    }\n  };\n\n  const updateThisTask = async (e, task_id, status) => {\n    e.preventDefault();\n    const updatenewtask = await updateTaskStatus(task_id, status);\n\n    if (updatenewtask) {\n      console.log(updatenewtask);\n      updateTasks(e);\n    }\n  };\n\n  const isTyping = e => {\n    e.persist();\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"969923021\", [Theme.colors.gunmetal, Theme.colors.royalblue]]]) + \" \" + 'maindiv',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    onSubmit: createNewTask,\n    className: _JSXStyle.dynamic([[\"969923021\", [Theme.colors.gunmetal, Theme.colors.royalblue]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: _JSXStyle.dynamic([[\"969923021\", [Theme.colors.gunmetal, Theme.colors.royalblue]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, \"New Task\"), __jsx(\"textarea\", {\n    name: \"objective\",\n    onChange: isTyping,\n    value: inputs.objective,\n    placeholder: \"Objective\",\n    required: true,\n    className: _JSXStyle.dynamic([[\"969923021\", [Theme.colors.gunmetal, Theme.colors.royalblue]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    className: _JSXStyle.dynamic([[\"969923021\", [Theme.colors.gunmetal, Theme.colors.royalblue]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"Add Task\")), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"969923021\", [Theme.colors.gunmetal, Theme.colors.royalblue]]]) + \" \" + 'tasklist',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: _JSXStyle.dynamic([[\"969923021\", [Theme.colors.gunmetal, Theme.colors.royalblue]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, \"My Tasks\"), allTasks ? allTasks.map((task, i) => {\n    let nextStatus = task.status == 'created' ? 'inprogress' : 'done';\n\n    if (lastcat == task.status) {\n      return __jsx(\"div\", {\n        key: i,\n        className: _JSXStyle.dynamic([[\"969923021\", [Theme.colors.gunmetal, Theme.colors.royalblue]]]) + \" \" + 'task',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 29\n        }\n      }, __jsx(\"h2\", {\n        className: _JSXStyle.dynamic([[\"969923021\", [Theme.colors.gunmetal, Theme.colors.royalblue]]]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 33\n        }\n      }, \"Objective: \", task.objective), __jsx(\"h3\", {\n        className: _JSXStyle.dynamic([[\"969923021\", [Theme.colors.gunmetal, Theme.colors.royalblue]]]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 33\n        }\n      }, \"Status: \", task.status), __jsx(\"img\", {\n        src: \"/three_dots.png\",\n        className: _JSXStyle.dynamic([[\"969923021\", [Theme.colors.gunmetal, Theme.colors.royalblue]]]) + \" \" + 'threedots',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 33\n        }\n      }), __jsx(\"div\", {\n        className: _JSXStyle.dynamic([[\"969923021\", [Theme.colors.gunmetal, Theme.colors.royalblue]]]) + \" \" + 'floater',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 33\n        }\n      }, __jsx(\"div\", {\n        onClick: e => {\n          task.status = nextStatus;\n          updateThisTask(e, task.id, nextStatus);\n        },\n        className: _JSXStyle.dynamic([[\"969923021\", [Theme.colors.gunmetal, Theme.colors.royalblue]]]) + \" \" + 'update',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 37\n        }\n      }, \"Update Status\"), __jsx(\"div\", {\n        onClick: e => removeThisTask(e, task.id),\n        className: _JSXStyle.dynamic([[\"969923021\", [Theme.colors.gunmetal, Theme.colors.royalblue]]]) + \" \" + 'remove',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 37\n        }\n      }, \"Remove Task\")));\n    } else {\n      lastcat = task.status;\n      return [__jsx(\"div\", {\n        key: task.status,\n        className: _JSXStyle.dynamic([[\"969923021\", [Theme.colors.gunmetal, Theme.colors.royalblue]]]) + \" \" + 'cat',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 29\n        }\n      }, task.status.toUpperCase()), __jsx(\"div\", {\n        key: i,\n        className: _JSXStyle.dynamic([[\"969923021\", [Theme.colors.gunmetal, Theme.colors.royalblue]]]) + \" \" + 'task',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 29\n        }\n      }, __jsx(\"h2\", {\n        className: _JSXStyle.dynamic([[\"969923021\", [Theme.colors.gunmetal, Theme.colors.royalblue]]]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 33\n        }\n      }, \"Objective: \", task.objective), __jsx(\"h3\", {\n        className: _JSXStyle.dynamic([[\"969923021\", [Theme.colors.gunmetal, Theme.colors.royalblue]]]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 33\n        }\n      }, \"Status: \", task.status), __jsx(\"img\", {\n        src: \"/three_dots.png\",\n        className: _JSXStyle.dynamic([[\"969923021\", [Theme.colors.gunmetal, Theme.colors.royalblue]]]) + \" \" + 'threedots',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 33\n        }\n      }), __jsx(\"div\", {\n        className: _JSXStyle.dynamic([[\"969923021\", [Theme.colors.gunmetal, Theme.colors.royalblue]]]) + \" \" + 'floater',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 33\n        }\n      }, __jsx(\"div\", {\n        onClick: e => {\n          task.status = nextStatus;\n          updateThisTask(e, task.id, nextStatus);\n        },\n        className: _JSXStyle.dynamic([[\"969923021\", [Theme.colors.gunmetal, Theme.colors.royalblue]]]) + \" \" + 'update',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 37\n        }\n      }, \"Update Status\"), __jsx(\"div\", {\n        onClick: e => removeThisTask(e, task.id),\n        className: _JSXStyle.dynamic([[\"969923021\", [Theme.colors.gunmetal, Theme.colors.royalblue]]]) + \" \" + 'remove',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 37\n        }\n      }, \"Remove Task\")))];\n    }\n  }) : status == 'none' ? __jsx(\"h2\", {\n    className: _JSXStyle.dynamic([[\"969923021\", [Theme.colors.gunmetal, Theme.colors.royalblue]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 40\n    }\n  }, \"No Tasks yet\") : __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"969923021\", [Theme.colors.gunmetal, Theme.colors.royalblue]]]) + \" \" + 'loading',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 63\n    }\n  })), __jsx(\"img\", {\n    id: \"body_bg\",\n    src: \"/bg_login.png\",\n    className: _JSXStyle.dynamic([[\"969923021\", [Theme.colors.gunmetal, Theme.colors.royalblue]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"969923021\",\n    dynamic: [Theme.colors.gunmetal, Theme.colors.royalblue],\n    __self: this\n  }, `.cat.__jsx-style-dynamic-selector{float:left;width:90%;padding:10px 5%;color:white;font:12px 'Roboto';background:${Theme.colors.gunmetal};}.tasktoggle.__jsx-style-dynamic-selector{float:left;width:100px;height:100px;padding:10px;}.update.__jsx-style-dynamic-selector{float:left;width:100%;padding:8px 0;text-align:center;font:12px 'Open Sans';opacity:.9;-webkit-transition:opacity .4s ease;transition:opacity .4s ease;cursor:pointer;}.update.__jsx-style-dynamic-selector:hover{opacity:1;}.remove.__jsx-style-dynamic-selector{float:left;width:100%;padding:8px 0;text-align:center;font:12px 'Open Sans';margin-left:10px;opacity:.9;color:white;background:rgba(226,70,70,.8);cursor:pointer;}.remove.__jsx-style-dynamic-selector:hover{opacity:1;}.threedots.__jsx-style-dynamic-selector{position:absolute;top:-5px;right:-5px;width:20px;height:20px;padding:15px;cursor:pointer;}.threedots.__jsx-style-dynamic-selector:hover~.floater.__jsx-style-dynamic-selector,.floater.__jsx-style-dynamic-selector:hover{opacity:1;-webkit-transform:translateX(100%) scale(1,1);-ms-transform:translateX(100%) scale(1,1);transform:translateX(100%) scale(1,1);}.floater.__jsx-style-dynamic-selector{position:absolute;right:-10px;top:-10px;width:80px;-webkit-transform:translateX(0) scale(0,0);-ms-transform:translateX(0) scale(0,0);transform:translateX(0) scale(0,0);padding:0;opacity:0;overflow:hidden;-webkit-transition:opacity .2s ease,-webkit-transform .4s;-webkit-transition:opacity .2s ease,transform .4s;transition:opacity .2s ease,transform .4s;-webkit-backdrop-filter:blur(8px);backdrop-filter:blur(8px);background:rgba(255,255,255,.8);box-shadow:0 0 1px rgba(20,20,20,.6);z-index:9999;}.tasklist.__jsx-style-dynamic-selector{float:left;width:100%;-webkit-transition:all .2s ease;transition:all .2s ease;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;}.task.__jsx-style-dynamic-selector{float:left;width:200px;position:relative;padding:10px;}.task.__jsx-style-dynamic-selector h2.__jsx-style-dynamic-selector{float:left;width:90%;padding:5px 5%;margin:0;font:13px 'Open Sans';margin-top:10px;}.task.__jsx-style-dynamic-selector h3.__jsx-style-dynamic-selector{float:left;width:90%;padding:5px 5%;margin:0;font:12px 'Roboto';opacity:.8;}.maindiv.__jsx-style-dynamic-selector textarea.__jsx-style-dynamic-selector{float:left;margin:10px 2.5%;padding:10px 2.5%;width:90%;font:18px 'Roboto';border:none;resize:vertical;max-height:150px;min-height:30px;border-radius:6px;box-shadow:0 0 2px rgba(20,20,20,.8);}.maindiv.__jsx-style-dynamic-selector{float:left;width:100%;z-index:9999;margin:20px 0;margin-top:90px;-webkit-backdrop-filter:blur(8px);backdrop-filter:blur(8px);background:rgba(255,255,255,.9);}.maindiv.__jsx-style-dynamic-selector h1.__jsx-style-dynamic-selector{float:left;margin:10px 5%;width:90%;font:20px 'Montserrat';}.maindiv.__jsx-style-dynamic-selector form.__jsx-style-dynamic-selector{float:left;width:40%;-webkit-transition:all .2s ease;transition:all .2s ease;padding:10px 5%;}#body_bg.__jsx-style-dynamic-selector{width:100%;z-index:-20;position:fixed;top:50%;left:50%;-webkit-transform:translate(-50%,-50%) scale(1.1,1.1);-ms-transform:translate(-50%,-50%) scale(1.1,1.1);transform:translate(-50%,-50%) scale(1.1,1.1);}.maindiv.__jsx-style-dynamic-selector button.__jsx-style-dynamic-selector{float:left;width:90%;padding:10px 5%;background:${Theme.colors.royalblue};color:white;cursor:pointer;border:none;border-radius:8px;margin:10px 5%;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/williamforte/Canvas/burkedeveloping/pages/backend_host_controller/taskmanager.js */`));\n}\n\nTaskManager.getInitialProps = async ctx => {\n  const cookies = await nextCookie(ctx);\n  const getfirsttasks = await getTasks(50, cookies.accessToken);\n\n  if (getfirsttasks == 'Not Authorized') {\n    if (ctx.res) {\n      ctx.res.writeHead(301, {\n        Location: '/login'\n      });\n      ctx.res.end();\n    }\n  }\n\n  getfirsttasks.sort(compare('status'));\n  return {\n    getFirstLoad: getfirsttasks\n  };\n};\n\nexport default TaskManager;","map":{"version":3,"sources":["/Users/williamforte/Canvas/burkedeveloping/pages/backend_host_controller/taskmanager.js"],"names":["createTask","getTasks","removeTask","updateTaskStatus","useState","useEffect","Router","nextCookie","Theme","sortingOrder","compare","key","order","a","b","hasOwnProperty","first","toLowerCase","Number","MAX_SAFE_INTEGER","second","result","HamEx","onClick","color","width","height","active","TaskManager","getFirstLoad","inputs","setInputs","objective","status","allTasks","setAllTasks","setStatus","lastcat","createNewTask","e","preventDefault","newTask","console","log","updateTasks","getalltasks","sort","removeThisTask","task_id","removenewtask","updateThisTask","updatenewtask","isTyping","persist","target","name","value","colors","gunmetal","royalblue","map","task","i","nextStatus","id","toUpperCase","getInitialProps","ctx","cookies","getfirsttasks","accessToken","res","writeHead","Location","end"],"mappings":"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","sourcesContent":["import { createTask, getTasks, removeTask, updateTaskStatus } from '../../services/apiservice'\nimport { useState, useEffect } from 'react'\nimport Router from 'next/router'\nimport nextCookie from 'next-cookies'\nimport Theme from '../../styles/theme'\n\nconst sortingOrder = {\n    'inprogress': 1,\n    'created': 2,\n    'done': 3\n}\n\nexport function compare(key, order = 'asc') {\n    return function (a, b) {\n        if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) \n\t    return 0;\n\t\t\n\tconst first = (a[key].toLowerCase() in sortingOrder) ? sortingOrder[a[key]] : Number.MAX_SAFE_INTEGER;\n\tconst second = (b[key].toLowerCase() in sortingOrder) ? sortingOrder[b[key]] : Number.MAX_SAFE_INTEGER;\n\t\t\n\tlet result = 0;\n\tif (first < second) \n\t    result = -1;\n\telse if (first > second) \n\t    result = 1;\n\treturn (order === 'desc') ? ~result : result\n    };\n}\n\nconst HamEx = ({onClick, color, width, height, active}) => {\n    return (\n        <div onClick={onClick} className='hame'>\n            <div className={`slash ${active == true ? 'one': ''}`}></div>\n            <div className={`slash ${active == true ? 'two': ''}`}></div>\n            <div className={`slash ${active == true ? 'three': ''}`}></div>\n            <style jsx>{`\n                .hame {\n                    float: left;\n                    width: ${width}px;\n                    height: ${height}px;\n                    padding: 10px;\n                    position: relative;\n                    cursor: pointer;\n                }\n                .slash {\n                    float: left;\n                    width: 100%;\n                    height: 8px;\n                    border-radius: 8px;\n                    background: ${color};\n                    margin: 2px 0;\n                    transition: all .4s ease;\n                }\n                .one {\n                    transform: translateY(12px) rotate(45deg);\n                }\n                .two {\n                    opacity: 0;\n                }\n                .three {\n                    transform: translateY(-12px) rotate(-45deg);\n                }\n            `}</style>\n        </div>\n    )\n}\n\nfunction TaskManager({getFirstLoad}) {\n\n    const [inputs, setInputs] = useState({\n        objective: '',\n        status: 'created',\n    })\n    const [allTasks, setAllTasks] = useState(getFirstLoad != null ? getFirstLoad: null)\n    const [status, setStatus] = useState(getFirstLoad != null ? 'succeeded': 'none')\n    let lastcat = null\n\n    // Create a new Task DEFAULT: status: 'created'\n    const createNewTask = async(e) => {\n        e.preventDefault();\n        const newTask = await createTask(inputs.objective, inputs.status)\n        if(newTask) {\n            console.log(newTask)\n            setInputs({...inputs, objective: ''})\n            updateTasks(e)\n        }\n    }\n\n    // Updating Tasks with Backend\n    const updateTasks = async(e) => {\n        setStatus('loading')\n        const getalltasks = await getTasks(50, null)\n        if(getalltasks) {\n            console.log(getalltasks)\n            getalltasks.sort(compare('status'))\n            setAllTasks(getalltasks)\n            setStatus('succeeded')\n        }\n    }\n\n    const removeThisTask = async(e, task_id) => {\n        e.preventDefault()\n        const removenewtask = await removeTask(task_id);\n        if(removenewtask) {\n            console.log(removenewtask)\n            updateTasks(e)\n        }\n    }\n\n    const updateThisTask = async(e, task_id, status) => {\n        e.preventDefault()\n        const updatenewtask = await updateTaskStatus(task_id, status);\n        if(updatenewtask) {\n            console.log(updatenewtask)\n            updateTasks(e)\n        }\n    }\n\n    const isTyping = (e) => {\n        e.persist();\n        setInputs({\n            ...inputs,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    return (\n        <div className='maindiv'>\n            <form onSubmit={createNewTask}>\n                <h1>New Task</h1>\n                <textarea \n                    name='objective'\n                    onChange={isTyping}\n                    value={inputs.objective}\n                    placeholder='Objective'\n                    required\n                />\n                <button>Add Task</button>\n            </form>\n            <div className='tasklist'>\n                <h1>My Tasks</h1>\n                {allTasks ? allTasks.map((task, i) => {\n                    let nextStatus = task.status == 'created' ? 'inprogress': 'done';\n                    if(lastcat == task.status) {\n                        return (\n                            <div key={i} className='task'>\n                                <h2>Objective: {task.objective}</h2>\n                                <h3>Status: {task.status}</h3>\n                                <img className='threedots' src='/three_dots.png'/>\n                                <div className='floater'>\n                                    <div onClick={(e) => {\n                                        task.status = nextStatus;\n                                        updateThisTask(e, task.id, nextStatus)\n                                    }} className='update'>Update Status</div>\n                                    <div onClick={(e) => removeThisTask(e, task.id)} className='remove'>Remove Task</div>\n                                </div>\n                            </div>\n                        )\n                    } else {\n                        lastcat = task.status;\n                        return [\n                            <div key={task.status} className='cat'>{task.status.toUpperCase()}</div>,\n                            <div key={i} className='task'>\n                                <h2>Objective: {task.objective}</h2>\n                                <h3>Status: {task.status}</h3>\n                                <img className='threedots' src='/three_dots.png'/>\n                                <div className='floater'>\n                                    <div onClick={(e) => {\n                                        task.status = nextStatus;\n                                        updateThisTask(e, task.id, nextStatus)\n                                    }} className='update'>Update Status</div>\n                                    <div onClick={(e) => removeThisTask(e, task.id)} className='remove'>Remove Task</div>\n                                </div>\n                            </div>\n                        ]\n                    }\n                }): status == 'none' ? <h2>No Tasks yet</h2>: <div className='loading'></div>}\n            </div>\n            \n            <img id='body_bg' src='/bg_login.png'/>\n            <style jsx>{`\n                .cat {\n                    float: left;\n                    width: 90%;\n                    padding: 10px 5%;\n                    color: white;\n                    font: 12px 'Roboto';\n                    background: ${Theme.colors.gunmetal};\n                }\n                .tasktoggle {\n                    float: left;\n                    width: 100px;\n                    height: 100px;\n                    padding: 10px;\n                }\n                .update {\n                    float: left;\n                    width: 100%;\n                    padding: 8px 0;\n                    text-align: center;\n                    font: 12px 'Open Sans';\n                    opacity: .9;\n                    transition: opacity .4s ease;\n                    cursor: pointer;\n                }\n                .update:hover {\n                    opacity: 1;\n                }\n                .remove {\n                    float: left;\n                    width: 100%;\n                    padding: 8px 0;\n                    text-align: center;\n                    font: 12px 'Open Sans';\n                    margin-left: 10px;\n                    opacity: .9;\n                    color: white;\n                    background: rgba(226, 70, 70,.8);\n                    cursor: pointer;\n                }\n                .remove:hover {\n                    opacity: 1;\n                }\n                .threedots {\n                    position: absolute;\n                    top: -5px;\n                    right: -5px;\n                    width: 20px;\n                    height: 20px;\n                    padding: 15px;\n                    cursor: pointer;\n                }\n                .threedots:hover ~ .floater, .floater:hover {\n                    opacity: 1;\n                    transform: translateX(100%) scale(1,1);\n                }\n                .floater {\n                    position: absolute;\n                    right: -10px;\n                    top: -10px;\n                    width: 80px;\n                    transform: translateX(0) scale(0,0);\n                    padding: 0;\n                    opacity: 0;\n                    overflow: hidden;\n                    transition: opacity .2s ease, transform .4s;\n                    backdrop-filter: blur(8px);\n                    background: rgba(255, 255, 255,.8);\n                    box-shadow: 0 0 1px rgba(20,20,20,.6);\n                    z-index: 9999;\n                }\n                .tasklist {\n                    float: left;\n                    width: 100%;\n                    transition: all .2s ease;\n                    display: flex;\n                    justify-content: center;\n                    flex-wrap: wrap;\n                }\n                .task {\n                    float: left;\n                    width: 200px;\n                    position: relative;\n                    padding: 10px;\n                }\n                .task h2 {\n                    float: left;\n                    width: 90%;\n                    padding: 5px 5%;\n                    margin: 0;\n                    font: 13px 'Open Sans';\n                    margin-top: 10px;\n                }\n                .task h3 {\n                    float: left;\n                    width: 90%;\n                    padding: 5px 5%;\n                    margin: 0;\n                    font: 12px 'Roboto';\n                    opacity: .8;\n                }\n                .maindiv textarea {\n                    float: left;\n                    margin: 10px 2.5%;\n                    padding: 10px 2.5%;\n                    width: 90%;\n                    font: 18px 'Roboto';\n                    border: none;\n                    resize: vertical;\n                    max-height: 150px;\n                    min-height: 30px;\n                    border-radius: 6px;\n                    box-shadow: 0 0 2px rgba(20,20,20,.8);\n                }\n                .maindiv {\n                    float: left;\n                    width: 100%;\n                    z-index: 9999;\n                    margin: 20px 0;\n                    margin-top: 90px;\n                    backdrop-filter: blur(8px);\n                    background: rgba(255, 255, 255, .9);\n                }\n                .maindiv h1 {\n                    float: left;\n                    margin: 10px 5%;\n                    width: 90%;\n                    font: 20px 'Montserrat';\n                }\n                .maindiv form {\n                    float: left;\n                    width: 40%;\n                    transition: all .2s ease;\n                    padding: 10px 5%;\n                }\n                #body_bg {\n                    width: 100%;\n                    z-index: -20;\n                    position: fixed;\n                    top: 50%;\n                    left: 50%;\n                    transform: translate(-50%, -50%) scale(1.1,1.1);\n                }\n                .maindiv button {\n                    float: left;\n                    width: 90%;\n                    padding: 10px 5%;\n                    background: ${Theme.colors.royalblue};\n                    color: white;\n                    cursor: pointer;\n                    border: none;\n                    border-radius: 8px;\n                    margin: 10px 5%;\n                }\n            `}</style>\n        </div>\n    )\n}\n\nTaskManager.getInitialProps = async(ctx) => {\n    const cookies = await nextCookie(ctx)\n    const getfirsttasks = await getTasks(50, cookies.accessToken)\n    if(getfirsttasks == 'Not Authorized') {\n        if (ctx.res) {\n            ctx.res.writeHead(301, {\n              Location: '/login'\n            });\n            ctx.res.end();\n        } \n    }\n    getfirsttasks.sort(compare('status'))\n    return {getFirstLoad: getfirsttasks}\n}\n\nexport default TaskManager"]},"metadata":{},"sourceType":"module"}