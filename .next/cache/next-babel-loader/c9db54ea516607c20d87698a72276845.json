{"ast":null,"code":"import { AxiosError } from \"axios\";\nexport const ErrorResponse = {\n  error: \"All good\"\n};\nexport function catchAxiosError(err) {\n  // Setting the request didn't work -- most likely an axios problem\n  console.log(\"Error\", err.message);\n  let message = \"Something happened in setting up the request that triggered an Error\";\n\n  if (err.response) {\n    // This will execute if http.status range = 200 > [x] > 300\n    console.log(err.response.data.message);\n    console.log(err.response.status);\n    message = err.response.data.message;\n  } else if (err.request) {\n    // The request was made but no response was received\n    // `err.request` is an instance of XMLHttpRequest in the browser and an instance of\n    // http.ClientRequest in node.js\n    console.log(err.request);\n    message = \"No Response from the golang server...\";\n  }\n\n  return {\n    error: message\n  };\n}","map":null,"metadata":{},"sourceType":"module"}