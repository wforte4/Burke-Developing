{"ast":null,"code":"var _jsxFileName = \"/Users/williamforte/Canvas/burkedeveloping/pages/backend_host_controller/imageupload.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\n\nfunction UploadImage({\n  images\n}) {\n  const {\n    0: file,\n    1: setFile\n  } = useState(null);\n  const {\n    0: preview,\n    1: setPreview\n  } = useState(null);\n\n  const uploadImageSingle = async e => {\n    e.preventDefault();\n    if (file == null) return;\n    const formData = new FormData();\n    formData.append(\"myFile\", file);\n    const uploadImage = await fetch('http://localhost:3600/uploadfile', {\n      method: 'POST',\n      body: formData\n    }).then(response => {\n      return response.json();\n    });\n\n    if (uploadImage) {\n      setPreview(null);\n      setFile(null);\n      loadImages(e);\n    }\n  };\n\n  const uploadImageMultiple = async e => {\n    e.preventDefault();\n    console.log(file);\n    if (file == null) return;\n    const formData = new FormData();\n\n    for (let i = 0; i < file.length; i++) {\n      console.log(file[i].uri);\n      formData.append(`myImages[]`, {\n        uri: file[i].uri,\n        type: 'image/*',\n        name: file[i].name\n      });\n    }\n\n    console.log(formData);\n    const newupload = await fetch('http://localhost:3600/uploadmultiple', {\n      method: 'POST',\n      body: formData\n    }).then(response => {\n      return response.json();\n    });\n    console.log(newupload);\n\n    if (newupload) {\n      setPreview(null);\n      setFile(null);\n      console.log(newupload);\n      loadImages(e);\n    }\n  };\n\n  const handleFileChangeSingle = e => {\n    e.persist();\n    setPreview(URL.createObjectURL(e.target.files[0]));\n    setFile(e.target.file[0]);\n  };\n\n  const removeImage = async (e, image) => {\n    e.preventDefault();\n    const newremove = await fetch(baseConfig.baseURL + '/removeimage/' + image, {\n      method: 'DELETE'\n    }).then(response => {\n      return response.status;\n    });\n\n    if (newremove) {\n      console.log(newremove);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-2725031775\" + \" \" + 'body',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-2725031775\" + \" \" + 'imageupload',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, __jsx(\"form\", {\n    onSubmit: uploadImageSingle,\n    className: \"jsx-2725031775\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-2725031775\" + \" \" + 'frame',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: preview ? preview : '/imageplaceholder.png',\n    className: \"jsx-2725031775\" + \" \" + 'preview',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 44\n    }\n  })), __jsx(\"label\", {\n    htmlFor: \"fileid\",\n    className: \"jsx-2725031775\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, file ? file.name : 'Select image'), __jsx(\"input\", {\n    id: \"fileid\",\n    type: \"file\",\n    accept: \"image/*\",\n    onChange: handleFileChangeSingle,\n    required: true,\n    className: \"jsx-2725031775\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"jsx-2725031775\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"Upload Image\")), __jsx(\"div\", {\n    className: \"jsx-2725031775\" + \" \" + 'images',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, __jsx(\"h1\", {\n    className: \"jsx-2725031775\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"My Images\"), images != null ? images.map((image, i) => {\n    return __jsx(\"div\", {\n      key: i,\n      className: \"jsx-2725031775\" + \" \" + 'imgframe',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, __jsx(\"div\", {\n      onClick: e => removeImage(e, image),\n      className: \"jsx-2725031775\" + \" \" + 'x',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }, \"x\"), __jsx(\"img\", {\n      src: backendImages + image,\n      className: \"jsx-2725031775\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }\n    }));\n  }) : __jsx(\"h2\", {\n    onClick: loadImages,\n    className: \"jsx-2725031775\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, \"Load Images\"))), __jsx(_JSXStyle, {\n    id: \"2725031775\",\n    __self: this\n  }, \".body.jsx-2725031775{float:left;width:100%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy93aWxsaWFtZm9ydGUvQ2FudmFzL2J1cmtlZGV2ZWxvcGluZy9wYWdlcy9iYWNrZW5kX2hvc3RfY29udHJvbGxlci9pbWFnZXVwbG9hZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrR3dCLEFBR2dDLFdBQ0EsV0FDZiIsImZpbGUiOiIvVXNlcnMvd2lsbGlhbWZvcnRlL0NhbnZhcy9idXJrZWRldmVsb3BpbmcvcGFnZXMvYmFja2VuZF9ob3N0X2NvbnRyb2xsZXIvaW1hZ2V1cGxvYWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xuXG5mdW5jdGlvbiBVcGxvYWRJbWFnZSh7aW1hZ2VzfSkge1xuXG4gICAgY29uc3QgW2ZpbGUsIHNldEZpbGVdID0gdXNlU3RhdGUobnVsbClcbiAgICBjb25zdCBbcHJldmlldywgc2V0UHJldmlld10gPSB1c2VTdGF0ZShudWxsKVxuXG4gICAgY29uc3QgdXBsb2FkSW1hZ2VTaW5nbGUgPSBhc3luYyhlKSA9PiB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgICBpZihmaWxlID09IG51bGwpIHJldHVybiBcbiAgICAgICAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKVxuICAgICAgICBmb3JtRGF0YS5hcHBlbmQoXCJteUZpbGVcIiwgZmlsZSlcbiAgICAgICAgY29uc3QgdXBsb2FkSW1hZ2UgPSBhd2FpdCBmZXRjaCgnaHR0cDovL2xvY2FsaG9zdDozNjAwL3VwbG9hZGZpbGUnLCB7XG4gICAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgICAgIGJvZHk6IGZvcm1EYXRhXG4gICAgICAgIH0pXG4gICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHtcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKClcbiAgICAgICAgfSlcbiAgICAgICAgaWYodXBsb2FkSW1hZ2UpIHtcbiAgICAgICAgICAgIHNldFByZXZpZXcobnVsbClcbiAgICAgICAgICAgIHNldEZpbGUobnVsbClcbiAgICAgICAgICAgIGxvYWRJbWFnZXMoZSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IHVwbG9hZEltYWdlTXVsdGlwbGUgPSBhc3luYyhlKSA9PiB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgICBjb25zb2xlLmxvZyhmaWxlKVxuICAgICAgICBpZihmaWxlID09IG51bGwpIHJldHVybiBcbiAgICAgICAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKVxuXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZmlsZS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc29sZS5sb2coZmlsZVtpXS51cmkpXG4gICAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoYG15SW1hZ2VzW11gLCB7XG4gICAgICAgICAgICAgICAgdXJpOiBmaWxlW2ldLnVyaSxcbiAgICAgICAgICAgICAgICB0eXBlOiAnaW1hZ2UvKicsXG4gICAgICAgICAgICAgICAgbmFtZTogZmlsZVtpXS5uYW1lXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc29sZS5sb2coZm9ybURhdGEpXG4gICAgICAgIGNvbnN0IG5ld3VwbG9hZCA9IGF3YWl0IGZldGNoKCdodHRwOi8vbG9jYWxob3N0OjM2MDAvdXBsb2FkbXVsdGlwbGUnLCB7XG4gICAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgICAgIGJvZHk6IGZvcm1EYXRhXG4gICAgICAgIH0pXG4gICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHtcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKClcbiAgICAgICAgfSlcbiAgICAgICAgY29uc29sZS5sb2cobmV3dXBsb2FkKVxuICAgICAgICBpZihuZXd1cGxvYWQpIHtcbiAgICAgICAgICAgIHNldFByZXZpZXcobnVsbClcbiAgICAgICAgICAgIHNldEZpbGUobnVsbClcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKG5ld3VwbG9hZClcbiAgICAgICAgICAgIGxvYWRJbWFnZXMoZSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGhhbmRsZUZpbGVDaGFuZ2VTaW5nbGUgPSAoZSkgPT4ge1xuICAgICAgICBlLnBlcnNpc3QoKVxuICAgICAgICBzZXRQcmV2aWV3KFVSTC5jcmVhdGVPYmplY3RVUkwoZS50YXJnZXQuZmlsZXNbMF0pKVxuICAgICAgICBzZXRGaWxlKGUudGFyZ2V0LmZpbGVbMF0pXG4gICAgfVxuXG4gICAgY29uc3QgcmVtb3ZlSW1hZ2UgPSBhc3luYyhlLCBpbWFnZSkgPT4ge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgY29uc3QgbmV3cmVtb3ZlID0gYXdhaXQgZmV0Y2goYmFzZUNvbmZpZy5iYXNlVVJMICsgJy9yZW1vdmVpbWFnZS8nICsgaW1hZ2UsIHtcbiAgICAgICAgICAgIG1ldGhvZDogJ0RFTEVURScsXG4gICAgICAgIH0pLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLnN0YXR1c1xuICAgICAgICB9KVxuICAgICAgICBpZihuZXdyZW1vdmUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKG5ld3JlbW92ZSlcblxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9J2JvZHknPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2ltYWdldXBsb2FkJz5cbiAgICAgICAgICAgICAgICA8Zm9ybSBvblN1Ym1pdD17dXBsb2FkSW1hZ2VTaW5nbGV9PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZnJhbWUnPjxpbWcgY2xhc3NOYW1lPSdwcmV2aWV3JyBzcmM9e3ByZXZpZXcgPyBwcmV2aWV3OiAnL2ltYWdlcGxhY2Vob2xkZXIucG5nJ30gLz48L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9J2ZpbGVpZCc+e2ZpbGUgPyBmaWxlLm5hbWU6ICdTZWxlY3QgaW1hZ2UnfTwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD0nZmlsZWlkJyB0eXBlPSdmaWxlJyBhY2NlcHQ9J2ltYWdlLyonIG9uQ2hhbmdlPXtoYW5kbGVGaWxlQ2hhbmdlU2luZ2xlfSByZXF1aXJlZCAvPlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9J3N1Ym1pdCc+VXBsb2FkIEltYWdlPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPC9mb3JtPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdpbWFnZXMnPlxuICAgICAgICAgICAgICAgICAgICA8aDE+TXkgSW1hZ2VzPC9oMT5cbiAgICAgICAgICAgICAgICAgICAge2ltYWdlcyAhPSBudWxsID8gaW1hZ2VzLm1hcCgoaW1hZ2UsIGkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBrZXk9e2l9IGNsYXNzTmFtZT0naW1nZnJhbWUnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IG9uQ2xpY2s9eyhlKSA9PiByZW1vdmVJbWFnZShlLCBpbWFnZSl9IGNsYXNzTmFtZT0neCc+eDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz17YmFja2VuZEltYWdlcyArIGltYWdlfSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICB9KTogPGgyIG9uQ2xpY2s9e2xvYWRJbWFnZXN9PkxvYWQgSW1hZ2VzPC9oMj59XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAgICAgICAuYm9keSB7XG4gICAgICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgfTwvc3R5bGU+XG4gICAgICAgIDwvZGl2PlxuICAgIClcbn1cblxuVXBsb2FkSW1hZ2UuZ2V0SW5pdGlhbFByb3AgPSBhc3luYyhlKSA9PiB7XG4gICAgY29uc3QgZ2V0aW1nID0gYXdhaXQgZ2V0QWxsSW1hZ2VzXG4gICAgcmV0dXJuIHtpbWFnZXM6IGdldGltZ31cbn1cblxuZXhwb3J0IGRlZmF1bHQgVXBsb2FkSW1hZ2UiXX0= */\\n/*@ sourceURL=/Users/williamforte/Canvas/burkedeveloping/pages/backend_host_controller/imageupload.js */\"));\n}\n\nUploadImage.getInitialProp = async e => {\n  const getimg = await getAllImages;\n  return {\n    images: getimg\n  };\n};\n\nexport default UploadImage;","map":{"version":3,"sources":["/Users/williamforte/Canvas/burkedeveloping/pages/backend_host_controller/imageupload.js"],"names":["useState","UploadImage","images","file","setFile","preview","setPreview","uploadImageSingle","e","preventDefault","formData","FormData","append","uploadImage","fetch","method","body","then","response","json","loadImages","uploadImageMultiple","console","log","i","length","uri","type","name","newupload","handleFileChangeSingle","persist","URL","createObjectURL","target","files","removeImage","image","newremove","baseConfig","baseURL","status","map","backendImages","getInitialProp","getimg","getAllImages"],"mappings":"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","sourcesContent":["import { useState } from 'react'\n\nfunction UploadImage({images}) {\n\n    const [file, setFile] = useState(null)\n    const [preview, setPreview] = useState(null)\n\n    const uploadImageSingle = async(e) => {\n        e.preventDefault()\n        if(file == null) return \n        const formData = new FormData()\n        formData.append(\"myFile\", file)\n        const uploadImage = await fetch('http://localhost:3600/uploadfile', {\n            method: 'POST',\n            body: formData\n        })\n        .then(response => {\n            return response.json()\n        })\n        if(uploadImage) {\n            setPreview(null)\n            setFile(null)\n            loadImages(e)\n        }\n    }\n\n    const uploadImageMultiple = async(e) => {\n        e.preventDefault()\n        console.log(file)\n        if(file == null) return \n        const formData = new FormData()\n\n        for (let i = 0; i < file.length; i++) {\n            console.log(file[i].uri)\n            formData.append(`myImages[]`, {\n                uri: file[i].uri,\n                type: 'image/*',\n                name: file[i].name\n            })\n        }\n\n        console.log(formData)\n        const newupload = await fetch('http://localhost:3600/uploadmultiple', {\n            method: 'POST',\n            body: formData\n        })\n        .then(response => {\n            return response.json()\n        })\n        console.log(newupload)\n        if(newupload) {\n            setPreview(null)\n            setFile(null)\n            console.log(newupload)\n            loadImages(e)\n        }\n    }\n\n    const handleFileChangeSingle = (e) => {\n        e.persist()\n        setPreview(URL.createObjectURL(e.target.files[0]))\n        setFile(e.target.file[0])\n    }\n\n    const removeImage = async(e, image) => {\n        e.preventDefault()\n        const newremove = await fetch(baseConfig.baseURL + '/removeimage/' + image, {\n            method: 'DELETE',\n        }).then(response => {\n            return response.status\n        })\n        if(newremove) {\n            console.log(newremove)\n\n        }\n    }\n\n    return (\n        <div className='body'>\n            <div className='imageupload'>\n                <form onSubmit={uploadImageSingle}>\n                    <div className='frame'><img className='preview' src={preview ? preview: '/imageplaceholder.png'} /></div>\n                    <label htmlFor='fileid'>{file ? file.name: 'Select image'}</label>\n                    <input id='fileid' type='file' accept='image/*' onChange={handleFileChangeSingle} required />\n                    <button type='submit'>Upload Image</button>\n                </form>\n                <div className='images'>\n                    <h1>My Images</h1>\n                    {images != null ? images.map((image, i) => {\n                        return (\n                            <div key={i} className='imgframe'>\n                                <div onClick={(e) => removeImage(e, image)} className='x'>x</div>\n                                <img src={backendImages + image} />\n                            </div>\n                        )\n                    }): <h2 onClick={loadImages}>Load Images</h2>}\n                </div>\n            </div>\n            <style jsx>{`\n                .body {\n                    float: left;\n                    width: 100%;\n                }\n            `}</style>\n        </div>\n    )\n}\n\nUploadImage.getInitialProp = async(e) => {\n    const getimg = await getAllImages\n    return {images: getimg}\n}\n\nexport default UploadImage"]},"metadata":{},"sourceType":"module"}