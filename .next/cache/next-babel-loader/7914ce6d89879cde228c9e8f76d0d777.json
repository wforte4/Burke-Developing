{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Cookies } from 'react-cookie';\nimport { baseConfig } from './restservice';\nvar cookies = new Cookies();\nexport function createProject(_x, _x2, _x3, _x4) {\n  return _createProject.apply(this, arguments);\n}\n\nfunction _createProject() {\n  _createProject = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(title, body, tags, images) {\n    var getCookies, newProject;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            getCookies = cookies.getAll(); // New Login Data request\n\n            _context.next = 3;\n            return fetch(baseConfig.projectURL, {\n              method: 'POST',\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(getCookies.accessToken)\n              },\n              body: JSON.stringify({\n                \"title\": title,\n                \"body\": body,\n                \"tags\": tags,\n                \"images\": images\n              })\n            }).then(function (response) {\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 3:\n            newProject = _context.sent;\n\n            if (!newProject) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", newProject);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _createProject.apply(this, arguments);\n}\n\nexport function getProjects(_x5) {\n  return _getProjects.apply(this, arguments);\n}\n\nfunction _getProjects() {\n  _getProjects = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(limit) {\n    var newTask;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(baseConfig.projectURL, {\n              method: 'GET',\n              headers: {\n                \"Content-type\": \"application/json\"\n              },\n              query: JSON.stringify({\n                \"limit\": limit\n              })\n            }).then(function (response) {\n              if (response.status == 403) {\n                return 'Not Authorized';\n              }\n\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 2:\n            newTask = _context2.sent;\n\n            if (!newTask) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", newTask);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getProjects.apply(this, arguments);\n}\n\nexport function getProjectById(_x6) {\n  return _getProjectById.apply(this, arguments);\n}\n\nfunction _getProjectById() {\n  _getProjectById = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n    var newTask;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch(baseConfig.projectURL + id, {\n              method: 'GET',\n              headers: {\n                \"Content-type\": \"application/json\"\n              }\n            }).then(function (response) {\n              if (response.status == 403) {\n                return 'Not Authorized';\n              }\n\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 2:\n            newTask = _context3.sent;\n\n            if (!newTask) {\n              _context3.next = 5;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", newTask);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getProjectById.apply(this, arguments);\n}\n\nexport function removeProject(_x7) {\n  return _removeProject.apply(this, arguments);\n}\n\nfunction _removeProject() {\n  _removeProject = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(taskId) {\n    var getCookies, newTask;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            getCookies = cookies.getAll(); // New Login Data request\n\n            _context4.next = 3;\n            return fetch(baseConfig.projectURL + taskId, {\n              method: 'DELETE',\n              headers: {\n                \"Authorization\": \"Bearer \".concat(getCookies.accessToken ? getCookies.accessToken : token)\n              }\n            }).then(function (response) {\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 3:\n            newTask = _context4.sent;\n\n            if (!newTask) {\n              _context4.next = 6;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", newTask);\n\n          case 6:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _removeProject.apply(this, arguments);\n}\n\nexport function updateProject(_x8, _x9) {\n  return _updateProject.apply(this, arguments);\n}\n\nfunction _updateProject() {\n  _updateProject = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(taskId, edits) {\n    var getCookies, newTask;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            getCookies = cookies.getAll(); // New Login Data request\n\n            _context5.next = 3;\n            return fetch(baseConfig.projectURL + taskId, {\n              method: 'PATCH',\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(getCookies.accessToken ? getCookies.accessToken : token)\n              },\n              body: JSON.stringify({\n                edits: edits\n              })\n            }).then(function (response) {\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 3:\n            newTask = _context5.sent;\n\n            if (!newTask) {\n              _context5.next = 6;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", newTask);\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _updateProject.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/williamforte/Canvas/burkedeveloping/services/projectservice.js"],"names":["Cookies","baseConfig","cookies","createProject","title","body","tags","images","getCookies","getAll","fetch","projectURL","method","headers","accessToken","JSON","stringify","then","response","json","error","newProject","getProjects","limit","query","status","newTask","getProjectById","id","removeProject","taskId","token","updateProject","edits"],"mappings":"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","sourcesContent":["import { Cookies } from 'react-cookie';\nimport { baseConfig } from './restservice' \n\nconst cookies = new Cookies();\n\nexport async function createProject(title, body, tags, images) {\n    \n    const getCookies = cookies.getAll()\n    // New Login Data request\n    const newProject = await fetch(baseConfig.projectURL, {\n        method: 'POST',\n        headers: {\n            \"Content-type\": \"application/json\",\n            \"Authorization\": `Bearer ${getCookies.accessToken}`\n        },\n        body: JSON.stringify({\n            \"title\": title,\n            \"body\": body,\n            \"tags\": tags,\n            \"images\": images\n        })\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newProject) {\n        return newProject\n    }\n}\n\nexport async function getProjects(limit) {\n    // New Login Data request\n    const newTask = await fetch(baseConfig.projectURL , {\n        method: 'GET',\n        headers: {\n            \"Content-type\": \"application/json\"\n        },\n        query: JSON.stringify({\n            \"limit\": limit\n        })\n    })\n    .then(function(response) {\n        if(response.status == 403) {\n            return 'Not Authorized'\n        }\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newTask) {\n        return newTask\n    }\n}\n\nexport async function getProjectById(id) {\n    // New Login Data request\n    const newTask = await fetch(baseConfig.projectURL + id, {\n        method: 'GET',\n        headers: {\n            \"Content-type\": \"application/json\"\n        }\n    })\n    .then(function(response) {\n        if(response.status == 403) {\n            return 'Not Authorized'\n        }\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newTask) {\n        return newTask\n    }\n}\n\nexport async function removeProject(taskId) {\n    \n    const getCookies = cookies.getAll()\n    // New Login Data request\n    const newTask = await fetch(baseConfig.projectURL + taskId, {\n        method: 'DELETE',\n        headers: {\n            \"Authorization\": `Bearer ${getCookies.accessToken ? getCookies.accessToken: token}`\n        }\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newTask) {\n        return newTask\n    }\n}\n\nexport async function updateProject(taskId, edits) {\n    \n    const getCookies = cookies.getAll()\n    // New Login Data request\n    const newTask = await fetch(baseConfig.projectURL + taskId, {\n        method: 'PATCH',\n        headers: {\n            \"Content-type\": \"application/json\",\n            \"Authorization\": `Bearer ${getCookies.accessToken ? getCookies.accessToken: token}`\n        },\n        body: JSON.stringify({ edits })\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newTask) {\n        return newTask\n    }\n}"]},"metadata":{},"sourceType":"module"}