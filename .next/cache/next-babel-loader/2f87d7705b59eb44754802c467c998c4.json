{"ast":null,"code":"var _jsxFileName = \"/Users/williamforte/Canvas/burkedeveloping/pages/posts/[id].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { getProjectById } from \"../../services/projectservice\";\nimport BannerSlider from '../../components/banner';\nimport { baseConfig } from \"../../services/restservice\";\nimport Theme from '../../styles/theme';\n\nfunction Project({\n  project\n}) {\n  return __jsx(\"div\", {\n    id: \"body\",\n    className: _JSXStyle.dynamic([[\"1824094675\", [Theme.fonts.title]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, __jsx(BannerSlider, {\n    height: 600,\n    images: project.images,\n    backendImageRoute: baseConfig.backendImages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: _JSXStyle.dynamic([[\"1824094675\", [Theme.fonts.title]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }\n  }, project.title)), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1824094675\", [Theme.fonts.title]]]) + \" \" + 'tagholder',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, project.tags.map((tag, i) => {\n    return __jsx(\"h3\", {\n      key: i,\n      className: _JSXStyle.dynamic([[\"1824094675\", [Theme.fonts.title]]]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 28\n      }\n    }, tag.toUpperCase() + (i == project.tags.length - 1 ? '' : ','));\n  })), __jsx(\"p\", {\n    className: _JSXStyle.dynamic([[\"1824094675\", [Theme.fonts.title]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, project.body), __jsx(_JSXStyle, {\n    id: \"1824094675\",\n    dynamic: [Theme.fonts.title],\n    __self: this\n  }, `h1.__jsx-style-dynamic-selector{float:left;width:auto;margin:50px 20px;margin-top:100px;padding:10px;background:rgba(255,255,255,.7);-webkit-backdrop-filter:blur(8px);backdrop-filter:blur(8px);border-radius:8px;font:40px ${Theme.fonts.title};}.tagholder.__jsx-style-dynamic-selector{float:left;width:95%;margin:10px 2.5%;}h3.__jsx-style-dynamic-selector{float:left;margin:4px;font:14px 'Open Sans';font-style:italic;}p.__jsx-style-dynamic-selector{float:left;width:45%;padding:20px 2.5%;font:14px 'Open Sans';}#body.__jsx-style-dynamic-selector{float:left;width:100%;margin-top:80px;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy93aWxsaWFtZm9ydGUvQ2FudmFzL2J1cmtlZGV2ZWxvcGluZy9wYWdlcy9wb3N0cy9baWRdLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtCd0IsQUFHZ0MsQUFXQSxBQUtBLEFBTUEsQUFNQSxXQTNCQSxBQVdELEFBS0MsQUFNRCxBQU1DLFVBaEJNLEFBV0MsQ0F0QkQsQUFnQkssQUFZTixnQkFoQnBCLEFBaUJBLENBNUJxQixBQXNCSyxLQU5KLFlBZkwsS0FzQmpCLENBTkEsT0Fmb0MsZ0NBQ04sNERBQ1Isa0JBQ3FCLHVDQUMzQyIsImZpbGUiOiIvVXNlcnMvd2lsbGlhbWZvcnRlL0NhbnZhcy9idXJrZWRldmVsb3BpbmcvcGFnZXMvcG9zdHMvW2lkXS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldFByb2plY3RCeUlkIH0gZnJvbSBcIi4uLy4uL3NlcnZpY2VzL3Byb2plY3RzZXJ2aWNlXCJcbmltcG9ydCBCYW5uZXJTbGlkZXIgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9iYW5uZXInXG5pbXBvcnQgeyBiYXNlQ29uZmlnIH0gZnJvbSBcIi4uLy4uL3NlcnZpY2VzL3Jlc3RzZXJ2aWNlXCJcbmltcG9ydCBUaGVtZSBmcm9tICcuLi8uLi9zdHlsZXMvdGhlbWUnXG5cbmZ1bmN0aW9uIFByb2plY3Qoe3Byb2plY3R9KSB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBpZD0nYm9keSc+XG4gICAgICAgICAgICA8QmFubmVyU2xpZGVyIGhlaWdodD17NjAwfSBpbWFnZXM9e3Byb2plY3QuaW1hZ2VzfSBiYWNrZW5kSW1hZ2VSb3V0ZT17YmFzZUNvbmZpZy5iYWNrZW5kSW1hZ2VzfT5cbiAgICAgICAgICAgICAgICA8aDE+e3Byb2plY3QudGl0bGV9PC9oMT5cblxuICAgICAgICAgICAgPC9CYW5uZXJTbGlkZXI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ndGFnaG9sZGVyJz5cbiAgICAgICAgICAgICAgICB7cHJvamVjdC50YWdzLm1hcCgodGFnLCBpKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiA8aDMga2V5PXtpfT57dGFnLnRvVXBwZXJDYXNlKCkgKyAoaSA9PSBwcm9qZWN0LnRhZ3MubGVuZ3RoIC0gMSA/ICcnOiAnLCcpfTwvaDM+XG4gICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxwPntwcm9qZWN0LmJvZHl9PC9wPlxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgICAgIGgxIHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDUwcHggMjBweDtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMTAwcHg7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LDI1NSwyNTUsLjcpO1xuICAgICAgICAgICAgICAgICAgICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoOHB4KTtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgICAgICAgICAgICAgICAgICBmb250OiA0MHB4ICR7VGhlbWUuZm9udHMudGl0bGV9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAudGFnaG9sZGVyIHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiA5NSU7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMTBweCAyLjUlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBoMyB7XG4gICAgICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDRweDtcbiAgICAgICAgICAgICAgICAgICAgZm9udDogMTRweCAnT3BlbiBTYW5zJztcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBwIHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiA0NSU7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDIwcHggMi41JTtcbiAgICAgICAgICAgICAgICAgICAgZm9udDogMTRweCAnT3BlbiBTYW5zJztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgI2JvZHkge1xuICAgICAgICAgICAgICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDgwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYH08L3N0eWxlPlxuICAgICAgICA8L2Rpdj5cbiAgICApXG59XG5cblByb2plY3QuZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMoY3R4KSA9PiB7XG4gICAgY29uc3QgZ2V0TmV3UHJvamVjdCA9IGF3YWl0IGdldFByb2plY3RCeUlkKGN0eC5xdWVyeS5pZClcbiAgICByZXR1cm4ge3Byb2plY3Q6IGdldE5ld1Byb2plY3R9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFByb2plY3QiXX0= */\n/*@ sourceURL=/Users/williamforte/Canvas/burkedeveloping/pages/posts/[id].js */`));\n}\n\nProject.getInitialProps = async ctx => {\n  const getNewProject = await getProjectById(ctx.query.id);\n  return {\n    project: getNewProject\n  };\n};\n\nexport default Project;","map":{"version":3,"sources":["/Users/williamforte/Canvas/burkedeveloping/pages/posts/[id].js"],"names":["getProjectById","BannerSlider","baseConfig","Theme","Project","project","fonts","title","images","backendImages","tags","map","tag","i","toUpperCase","length","body","getInitialProps","ctx","getNewProject","query","id"],"mappings":";;;;AAAA,SAASA,cAAT,QAA+B,+BAA/B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,SAASC,OAAT,CAAiB;AAACC,EAAAA;AAAD,CAAjB,EAA4B;AACxB,SACI;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA,kDAqByBF,KAAK,CAACG,KAAN,CAAYC,KArBrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,YAAD;AAAc,IAAA,MAAM,EAAE,GAAtB;AAA2B,IAAA,MAAM,EAAEF,OAAO,CAACG,MAA3C;AAAmD,IAAA,iBAAiB,EAAEN,UAAU,CAACO,aAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,kDAmBiBN,KAAK,CAACG,KAAN,CAAYC,KAnB7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,OAAO,CAACE,KAAb,CADJ,CADJ,EAKI;AAAA,kDAgBqBJ,KAAK,CAACG,KAAN,CAAYC,KAhBjC,aAAe,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,OAAO,CAACK,IAAR,CAAaC,GAAb,CAAiB,CAACC,GAAD,EAAMC,CAAN,KAAY;AAC1B,WAAO;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAA,oDAcMV,KAAK,CAACG,KAAN,CAAYC,KAdlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaK,GAAG,CAACE,WAAJ,MAAqBD,CAAC,IAAIR,OAAO,CAACK,IAAR,CAAaK,MAAb,GAAsB,CAA3B,GAA+B,EAA/B,GAAmC,GAAxD,CAAb,CAAP;AACH,GAFA,CADL,CALJ,EAUI;AAAA,kDAWqBZ,KAAK,CAACG,KAAN,CAAYC,KAXjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,OAAO,CAACW,IAAZ,CAVJ;AAAA;AAAA,cAqByBb,KAAK,CAACG,KAAN,CAAYC,KArBrC;AAAA;AAAA,qOAqByBJ,KAAK,CAACG,KAAN,CAAYC,KArBrC;AACR;AACA,gFAFQ,EADJ;AAiDH;;AAEDH,OAAO,CAACa,eAAR,GAA0B,MAAMC,GAAN,IAAc;AACpC,QAAMC,aAAa,GAAG,MAAMnB,cAAc,CAACkB,GAAG,CAACE,KAAJ,CAAUC,EAAX,CAA1C;AACA,SAAO;AAAChB,IAAAA,OAAO,EAAEc;AAAV,GAAP;AACH,CAHD;;AAKA,eAAef,OAAf","sourcesContent":["import { getProjectById } from \"../../services/projectservice\"\nimport BannerSlider from '../../components/banner'\nimport { baseConfig } from \"../../services/restservice\"\nimport Theme from '../../styles/theme'\n\nfunction Project({project}) {\n    return (\n        <div id='body'>\n            <BannerSlider height={600} images={project.images} backendImageRoute={baseConfig.backendImages}>\n                <h1>{project.title}</h1>\n\n            </BannerSlider>\n            <div className='tagholder'>\n                {project.tags.map((tag, i) => {\n                    return <h3 key={i}>{tag.toUpperCase() + (i == project.tags.length - 1 ? '': ',')}</h3>\n                })}\n            </div>\n            <p>{project.body}</p>\n            <style jsx>{`\n                h1 {\n                    float: left;\n                    width: auto;\n                    margin: 50px 20px;\n                    margin-top: 100px;\n                    padding: 10px;\n                    background: rgba(255,255,255,.7);\n                    backdrop-filter: blur(8px);\n                    border-radius: 8px;\n                    font: 40px ${Theme.fonts.title};\n                }\n                .tagholder {\n                    float: left;\n                    width: 95%;\n                    margin: 10px 2.5%;\n                }\n                h3 {\n                    float: left;\n                    margin: 4px;\n                    font: 14px 'Open Sans';\n                    font-style: italic;\n                }\n                p {\n                    float: left;\n                    width: 45%;\n                    padding: 20px 2.5%;\n                    font: 14px 'Open Sans';\n                }\n                #body {\n                    float: left;\n                    width: 100%;\n                    margin-top: 80px;\n                }\n            `}</style>\n        </div>\n    )\n}\n\nProject.getInitialProps = async(ctx) => {\n    const getNewProject = await getProjectById(ctx.query.id)\n    return {project: getNewProject}\n}\n\nexport default Project"]},"metadata":{},"sourceType":"module"}