{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/williamforte/Canvas/burkedeveloping/pages/backend_host_controller/taskmanager.js\",\n    _s = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createTask, getTasks, removeTask, updateTaskStatus } from '../../services/apiservice';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport nextCookie from 'next-cookies';\nimport Theme from '../../styles/theme';\nvar sortingOrder = {\n  'inprogress': 1,\n  'created': 2,\n  'done': 3\n};\nexport function compare(key) {\n  var order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'asc';\n  return function (a, b) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) return 0;\n    var first = a[key].toLowerCase() in sortingOrder ? sortingOrder[a[key]] : Number.MAX_SAFE_INTEGER;\n    var second = b[key].toLowerCase() in sortingOrder ? sortingOrder[b[key]] : Number.MAX_SAFE_INTEGER;\n    var result = 0;\n    if (first < second) result = -1;else if (first > second) result = 1;\n    return order === 'desc' ? ~result : result;\n  };\n}\n\nvar HamEx = function HamEx(_ref) {\n  var onClick = _ref.onClick,\n      color = _ref.color,\n      width = _ref.width,\n      height = _ref.height,\n      active = _ref.active;\n  return __jsx(\"div\", {\n    onClick: onClick,\n    className: _JSXStyle.dynamic([[\"1318293250\", [width, height, color]]]) + \" \" + 'hame',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1318293250\", [width, height, color]]]) + \" \" + \"slash \".concat(active == true ? 'one' : ''),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1318293250\", [width, height, color]]]) + \" \" + \"slash \".concat(active == true ? 'two' : ''),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1318293250\", [width, height, color]]]) + \" \" + \"slash \".concat(active == true ? 'three' : ''),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"1318293250\",\n    dynamic: [width, height, color],\n    __self: _this\n  }, \".hame.__jsx-style-dynamic-selector{float:left;width:\".concat(width, \"px;height:\").concat(height, \"px;padding:10px;position:relative;cursor:pointer;}.slash.__jsx-style-dynamic-selector{float:left;width:100%;height:8px;border-radius:8px;background:\").concat(color, \";margin:2px 0;-webkit-transition:all .4s ease;transition:all .4s ease;}.one.__jsx-style-dynamic-selector{-webkit-transform:translateY(12px) rotate(45deg);-ms-transform:translateY(12px) rotate(45deg);transform:translateY(12px) rotate(45deg);}.two.__jsx-style-dynamic-selector{opacity:0;}.three.__jsx-style-dynamic-selector{-webkit-transform:translateY(-12px) rotate(-45deg);-ms-transform:translateY(-12px) rotate(-45deg);transform:translateY(-12px) rotate(-45deg);}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/williamforte/Canvas/burkedeveloping/pages/backend_host_controller/taskmanager.js */\")));\n};\n\n_c = HamEx;\n\nfunction TaskManager(_ref2) {\n  _s();\n\n  var _this2 = this;\n\n  var getFirstLoad = _ref2.getFirstLoad;\n\n  var _useState = useState({\n    objective: '',\n    status: 'created'\n  }),\n      inputs = _useState[0],\n      setInputs = _useState[1];\n\n  var _useState2 = useState({\n    inprogress: [],\n    created: [],\n    done: []\n  }),\n      sortedTasks = _useState2[0],\n      setSortedTasks = _useState2[1];\n\n  var _useState3 = useState(getFirstLoad != null ? getFirstLoad : null),\n      allTasks = _useState3[0],\n      setAllTasks = _useState3[1];\n\n  var _useState4 = useState(getFirstLoad != null ? 'succeeded' : 'none'),\n      status = _useState4[0],\n      setStatus = _useState4[1];\n\n  var _useState5 = useState(false),\n      loading = _useState5[0],\n      setLoading = _useState5[1];\n\n  var lastcat = null; // Create a new Task DEFAULT: status: 'created'\n\n  var createNewTask = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var newTask;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return createTask(inputs.objective, inputs.status);\n\n            case 3:\n              newTask = _context.sent;\n\n              if (newTask) {\n                console.log(newTask);\n                setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n                  objective: ''\n                }));\n                updateTasks(e);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function createNewTask(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var sortAllTasks = function sortAllTasks(tasks) {\n    var inp = [];\n    var cr = [];\n    var dn = [];\n    tasks.map(function (task) {\n      if (task.status === 'done') dn.push(task);\n      if (task.status === 'created') cr.push(task);\n      if (task.status === 'inprogress') inp.push(task);\n    });\n    setSortedTasks(_objectSpread(_objectSpread({}, sortedTasks), {}, {\n      inprogress: inp,\n      created: cr,\n      done: dn\n    }));\n  };\n\n  useEffect(function () {\n    sortAllTasks(getFirstLoad);\n    console.log(sortedTasks);\n  }, [sortedTasks.done.length == 0]); // Updating Tasks with Backend\n\n  var updateTasks = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var getalltasks;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setStatus('loading');\n              _context2.next = 3;\n              return getTasks(50, null);\n\n            case 3:\n              getalltasks = _context2.sent;\n\n              if (getalltasks) {\n                console.log(getalltasks);\n                getalltasks.sort(compare('status'));\n                setAllTasks(getalltasks);\n                setStatus('succeeded');\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function updateTasks(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var removeThisTask = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e, task_id) {\n      var removenewtask;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              e.preventDefault();\n              _context3.next = 3;\n              return removeTask(task_id);\n\n            case 3:\n              removenewtask = _context3.sent;\n\n              if (removenewtask) {\n                console.log(removenewtask);\n                updateTasks(e);\n              }\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function removeThisTask(_x3, _x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var updateThisTask = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(e, task_id, status) {\n      var updatenewtask;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              e.preventDefault();\n              _context4.next = 3;\n              return updateTaskStatus(task_id, status);\n\n            case 3:\n              updatenewtask = _context4.sent;\n\n              if (updatenewtask) {\n                console.log(updatenewtask);\n                updateTasks(e);\n              }\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function updateThisTask(_x5, _x6, _x7) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var isTyping = function isTyping(e) {\n    e.persist();\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  return __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]) + \" \" + 'maindiv',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, \"My Tasks\"), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]) + \" \" + 'tasklist',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]) + \" \" + 'column',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, __jsx(\"form\", {\n    onSubmit: createNewTask,\n    className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, __jsx(\"h1\", {\n    className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }, \"New Task\"), __jsx(\"textarea\", {\n    name: \"objective\",\n    onChange: isTyping,\n    value: inputs.objective,\n    placeholder: \"Objective\",\n    required: true,\n    className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }\n  }), __jsx(\"button\", {\n    className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 25\n    }\n  }, \"Add Task\"))), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]) + \" \" + 'column',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]) + \" \" + 'cat',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }, \"Newly Added Tasks\"), sortedTasks.created.length > 0 ? sortedTasks.created.map(function (task, i) {\n    var nextStatus = task.status == 'created' ? 'inprogress' : 'done';\n    return __jsx(\"div\", {\n      key: i,\n      className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]) + \" \" + 'task',\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 29\n      }\n    }, __jsx(\"h2\", {\n      className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 33\n      }\n    }, \"Objective: \", task.objective), __jsx(\"h3\", {\n      className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 33\n      }\n    }, \"Status: \", task.status), __jsx(\"img\", {\n      src: \"/three_dots.png\",\n      className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]) + \" \" + 'threedots',\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 33\n      }\n    }), __jsx(\"div\", {\n      className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]) + \" \" + 'floater',\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 33\n      }\n    }, __jsx(\"div\", {\n      onClick: function onClick(e) {\n        task.status = nextStatus;\n        updateThisTask(e, task.id, nextStatus);\n      },\n      className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]) + \" \" + 'update',\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 37\n      }\n    }, \"Update Status\"), __jsx(\"div\", {\n      onClick: function onClick(e) {\n        return removeThisTask(e, task.id);\n      },\n      className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]) + \" \" + 'remove',\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 37\n      }\n    }, \"Remove Task\")));\n  }) : __jsx(\"p\", {\n    className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]) + \" \" + 'info',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }, \"No In Progress Tasks\")), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]) + \" \" + 'column',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]) + \" \" + 'cat',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  }, \"Tasks in Progress\"), sortedTasks.inprogress.length > 0 ? sortedTasks.inprogress.map(function (task, i) {\n    var nextStatus = task.status == 'created' ? 'inprogress' : 'done';\n    return __jsx(\"div\", {\n      key: i,\n      className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]) + \" \" + 'task',\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 29\n      }\n    }, __jsx(\"h2\", {\n      className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 33\n      }\n    }, \"Objective: \", task.objective), __jsx(\"h3\", {\n      className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 33\n      }\n    }, \"Status: \", task.status), __jsx(\"img\", {\n      src: \"/three_dots.png\",\n      className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]) + \" \" + 'threedots',\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 33\n      }\n    }), __jsx(\"div\", {\n      className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]) + \" \" + 'floater',\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 33\n      }\n    }, __jsx(\"div\", {\n      onClick: function onClick(e) {\n        task.status = nextStatus;\n        updateThisTask(e, task.id, nextStatus);\n      },\n      className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]) + \" \" + 'update',\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 37\n      }\n    }, \"Update Status\"), __jsx(\"div\", {\n      onClick: function onClick(e) {\n        return removeThisTask(e, task.id);\n      },\n      className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]) + \" \" + 'remove',\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 37\n      }\n    }, \"Remove Task\")));\n  }) : __jsx(\"p\", {\n    className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]) + \" \" + 'info',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  }, \"No In Progress Tasks\")), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]) + \" \" + 'column',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]) + \" \" + 'cat',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, \"Done\"), sortedTasks.done.length > 0 ? sortedTasks.done.map(function (task, i) {\n    var nextStatus = task.status == 'created' ? 'inprogress' : 'done';\n    return __jsx(\"div\", {\n      key: i,\n      className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]) + \" \" + 'task',\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 29\n      }\n    }, __jsx(\"h2\", {\n      className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 33\n      }\n    }, \"Objective: \", task.objective), __jsx(\"h3\", {\n      className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 33\n      }\n    }, \"Status: \", task.status), __jsx(\"img\", {\n      src: \"/three_dots.png\",\n      className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]) + \" \" + 'threedots',\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 33\n      }\n    }), __jsx(\"div\", {\n      className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]) + \" \" + 'floater',\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 33\n      }\n    }, __jsx(\"div\", {\n      onClick: function onClick(e) {\n        task.status = nextStatus;\n        updateThisTask(e, task.id, nextStatus);\n      },\n      className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]) + \" \" + 'update',\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 37\n      }\n    }, \"Update Status\"), __jsx(\"div\", {\n      onClick: function onClick(e) {\n        return removeThisTask(e, task.id);\n      },\n      className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]) + \" \" + 'remove',\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 37\n      }\n    }, \"Remove Task\")));\n  }) : __jsx(\"p\", {\n    className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]) + \" \" + 'info',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 25\n    }\n  }, \"No In Progress Tasks\"))), __jsx(\"img\", {\n    id: \"body_bg\",\n    src: \"/bg_login.png\",\n    className: _JSXStyle.dynamic([[\"503370831\", [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"503370831\",\n    dynamic: [Theme.colors.shadowlight, Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.lightplatinum, Theme.colors.royalblue],\n    __self: this\n  }, \".info.__jsx-style-dynamic-selector{float:left;font:14px 'Open Sans';}.column.__jsx-style-dynamic-selector{float:left;width:23%;margin:10px 1%;padding:10px 1%;border-radius:10px;box-shadow:\".concat(Theme.colors.shadowlight, \";background:rgba(255,255,255,.7);-webkit-backdrop-filter:blur(8px);backdrop-filter:blur(8px);}.cat.__jsx-style-dynamic-selector{float:left;width:90%;padding:14px 5%;color:white;margin:20px 0;border-radius:10px;font:14px 'Roboto';background:\").concat(Theme.colors.gunmetal, \";}.tasktoggle.__jsx-style-dynamic-selector{float:left;width:100px;height:100px;padding:10px;}.update.__jsx-style-dynamic-selector{float:left;width:100%;padding:8px 0;text-align:center;font:12px 'Open Sans';opacity:.8;-webkit-transition:all .3s ease;transition:all .3s ease;background:\").concat(Theme.colors.platinum, \";cursor:pointer;}.update.__jsx-style-dynamic-selector:hover{opacity:1;background:white;}.remove.__jsx-style-dynamic-selector{float:left;width:100%;padding:8px 0;text-align:center;font:12px 'Open Sans';opacity:.8;color:white;-webkit-transition:all .3s ease;transition:all .3s ease;background:rgba(226,70,70,.8);cursor:pointer;}.remove.__jsx-style-dynamic-selector:hover{opacity:1;}.threedots.__jsx-style-dynamic-selector{position:absolute;top:-5px;right:3px;width:20px;height:20px;padding:15px;cursor:pointer;}.threedots.__jsx-style-dynamic-selector:hover~.floater.__jsx-style-dynamic-selector,.floater.__jsx-style-dynamic-selector:hover{opacity:1;-webkit-transform:translateX(100%) scale(1,1);-ms-transform:translateX(100%) scale(1,1);transform:translateX(100%) scale(1,1);}.floater.__jsx-style-dynamic-selector{position:absolute;right:125px;top:-10px;width:120px;-webkit-transform:translateX(0) scale(0,0);-ms-transform:translateX(0) scale(0,0);transform:translateX(0) scale(0,0);padding:0;opacity:0;border-radius:10px;overflow:hidden;-webkit-transition:opacity .2s ease,-webkit-transform .4s;-webkit-transition:opacity .2s ease,transform .4s;transition:opacity .2s ease,transform .4s;-webkit-backdrop-filter:blur(8px);backdrop-filter:blur(8px);background:rgba(255,255,255,.8);box-shadow:0 0 2px rgba(20,20,20,.6);z-index:9999;}.tasklist.__jsx-style-dynamic-selector{float:left;width:100%;-webkit-transition:all .2s ease;transition:all .2s ease;padding:30px 0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}.task.__jsx-style-dynamic-selector{float:left;width:90%;position:relative;padding:10px 5%;margin:10px 0;min-height:120px;border-radius:30px;background:\").concat(Theme.colors.lightplatinum, \";}.task.__jsx-style-dynamic-selector h2.__jsx-style-dynamic-selector{float:left;width:90%;padding:5px 5%;margin:0;font:13px 'Open Sans';margin-top:10px;}.task.__jsx-style-dynamic-selector h3.__jsx-style-dynamic-selector{float:left;width:90%;padding:5px 5%;margin:0;font:12px 'Roboto';opacity:.8;}.maindiv.__jsx-style-dynamic-selector textarea.__jsx-style-dynamic-selector{float:left;margin:10px 2.5%;padding:10px 2.5%;width:90%;font:18px 'Roboto';border:none;resize:vertical;max-height:150px;min-height:120px;border-radius:6px;box-shadow:0 0 2px rgba(20,20,20,.8);}.maindiv.__jsx-style-dynamic-selector{float:left;width:100%;z-index:9999;margin:20px 0;margin-top:90px;-webkit-backdrop-filter:blur(8px);backdrop-filter:blur(8px);background:rgba(255,255,255,.9);}.maindiv.__jsx-style-dynamic-selector h1.__jsx-style-dynamic-selector{float:left;margin:10px 5%;width:90%;font:20px 'Montserrat';}.maindiv.__jsx-style-dynamic-selector form.__jsx-style-dynamic-selector{float:left;width:90%;-webkit-transition:all .2s ease;transition:all .2s ease;padding:10px 5%;}#body_bg.__jsx-style-dynamic-selector{width:100%;z-index:-20;position:fixed;top:50%;left:50%;-webkit-transform:translate(-50%,-50%) scale(1.1,1.1);-ms-transform:translate(-50%,-50%) scale(1.1,1.1);transform:translate(-50%,-50%) scale(1.1,1.1);}.maindiv.__jsx-style-dynamic-selector button.__jsx-style-dynamic-selector{float:left;width:90%;padding:10px 5%;background:\").concat(Theme.colors.royalblue, \";color:white;cursor:pointer;border:none;border-radius:8px;margin:10px 5%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/williamforte/Canvas/burkedeveloping/pages/backend_host_controller/taskmanager.js */\")));\n}\n\n_s(TaskManager, \"fR7c3fLs3TAg7Wk9Nyxn8nMKDKs=\");\n\n_c2 = TaskManager;\n\nTaskManager.getInitialProps = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(ctx) {\n    var cookies, getfirsttasks;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return nextCookie(ctx);\n\n          case 2:\n            cookies = _context5.sent;\n            _context5.next = 5;\n            return getTasks(50, cookies.accessToken);\n\n          case 5:\n            getfirsttasks = _context5.sent;\n\n            if (getfirsttasks == 'Not Authorized') {\n              if (ctx.res) {\n                ctx.res.writeHead(301, {\n                  Location: '/login'\n                });\n                ctx.res.end();\n              }\n            }\n\n            getfirsttasks.sort(compare('status'));\n            return _context5.abrupt(\"return\", {\n              getFirstLoad: getfirsttasks\n            });\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x8) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nexport default TaskManager;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HamEx\");\n$RefreshReg$(_c2, \"TaskManager\");","map":{"version":3,"sources":["/Users/williamforte/Canvas/burkedeveloping/pages/backend_host_controller/taskmanager.js"],"names":["createTask","getTasks","removeTask","updateTaskStatus","useState","useEffect","Router","nextCookie","Theme","sortingOrder","compare","key","order","a","b","hasOwnProperty","first","toLowerCase","Number","MAX_SAFE_INTEGER","second","result","HamEx","onClick","color","width","height","active","TaskManager","getFirstLoad","objective","status","inputs","setInputs","inprogress","created","done","sortedTasks","setSortedTasks","allTasks","setAllTasks","setStatus","loading","setLoading","lastcat","createNewTask","e","preventDefault","newTask","console","log","updateTasks","sortAllTasks","tasks","inp","cr","dn","map","task","push","length","getalltasks","sort","removeThisTask","task_id","removenewtask","updateThisTask","updatenewtask","isTyping","persist","target","name","value","colors","shadowlight","gunmetal","platinum","lightplatinum","royalblue","i","nextStatus","id","getInitialProps","ctx","cookies","accessToken","getfirsttasks","res","writeHead","Location","end"],"mappings":"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","sourcesContent":["import { createTask, getTasks, removeTask, updateTaskStatus } from '../../services/apiservice'\nimport { useState, useEffect } from 'react'\nimport Router from 'next/router'\nimport nextCookie from 'next-cookies'\nimport Theme from '../../styles/theme'\n\nconst sortingOrder = {\n    'inprogress': 1,\n    'created': 2,\n    'done': 3\n}\n\nexport function compare(key, order = 'asc') {\n    return function (a, b) {\n        if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) \n\t    return 0;\n\t\t\n\tconst first = (a[key].toLowerCase() in sortingOrder) ? sortingOrder[a[key]] : Number.MAX_SAFE_INTEGER;\n\tconst second = (b[key].toLowerCase() in sortingOrder) ? sortingOrder[b[key]] : Number.MAX_SAFE_INTEGER;\n\t\t\n\tlet result = 0;\n\tif (first < second) \n\t    result = -1;\n\telse if (first > second) \n\t    result = 1;\n\treturn (order === 'desc') ? ~result : result\n    };\n}\n\nconst HamEx = ({onClick, color, width, height, active}) => {\n    return (\n        <div onClick={onClick} className='hame'>\n            <div className={`slash ${active == true ? 'one': ''}`}></div>\n            <div className={`slash ${active == true ? 'two': ''}`}></div>\n            <div className={`slash ${active == true ? 'three': ''}`}></div>\n            <style jsx>{`\n                .hame {\n                    float: left;\n                    width: ${width}px;\n                    height: ${height}px;\n                    padding: 10px;\n                    position: relative;\n                    cursor: pointer;\n                }\n                .slash {\n                    float: left;\n                    width: 100%;\n                    height: 8px;\n                    border-radius: 8px;\n                    background: ${color};\n                    margin: 2px 0;\n                    transition: all .4s ease;\n                }\n                .one {\n                    transform: translateY(12px) rotate(45deg);\n                }\n                .two {\n                    opacity: 0;\n                }\n                .three {\n                    transform: translateY(-12px) rotate(-45deg);\n                }\n            `}</style>\n        </div>\n    )\n}\n\nfunction TaskManager({getFirstLoad}) {\n\n    const [inputs, setInputs] = useState({\n        objective: '',\n        status: 'created',\n    })\n    const [sortedTasks, setSortedTasks] = useState({\n        inprogress: [],\n        created: [],\n        done: []\n    })\n    const [allTasks, setAllTasks] = useState(getFirstLoad != null ? getFirstLoad: null)\n    const [status, setStatus] = useState(getFirstLoad != null ? 'succeeded': 'none')\n    const [loading, setLoading] = useState(false)\n    let lastcat = null\n\n    // Create a new Task DEFAULT: status: 'created'\n    const createNewTask = async(e) => {\n        e.preventDefault();\n        const newTask = await createTask(inputs.objective, inputs.status)\n        if(newTask) {\n            console.log(newTask)\n            setInputs({...inputs, objective: ''})\n            updateTasks(e)\n        }\n    }\n\n    const sortAllTasks = (tasks) => {\n        const inp = []\n        const cr = []\n        const dn = []\n        tasks.map((task) => {\n            if(task.status === 'done') dn.push(task)\n            if(task.status === 'created') cr.push(task)\n            if(task.status === 'inprogress') inp.push(task)\n        })\n        setSortedTasks({\n            ...sortedTasks,\n            inprogress: inp,\n            created: cr,\n            done: dn\n        })\n    }\n    useEffect(() => {\n        sortAllTasks(getFirstLoad)\n        console.log(sortedTasks)\n    }, [sortedTasks.done.length == 0])\n\n    // Updating Tasks with Backend\n    const updateTasks = async(e) => {\n        setStatus('loading')\n        const getalltasks = await getTasks(50, null)\n        if(getalltasks) {\n            console.log(getalltasks)\n            getalltasks.sort(compare('status'))\n            setAllTasks(getalltasks)\n            setStatus('succeeded')\n        }\n    }\n\n    const removeThisTask = async(e, task_id) => {\n        e.preventDefault()\n        const removenewtask = await removeTask(task_id);\n        if(removenewtask) {\n            console.log(removenewtask)\n            updateTasks(e)\n        }\n    }\n\n    const updateThisTask = async(e, task_id, status) => {\n        e.preventDefault()\n        const updatenewtask = await updateTaskStatus(task_id, status);\n        if(updatenewtask) {\n            console.log(updatenewtask)\n            updateTasks(e)\n        }\n    }\n\n    const isTyping = (e) => {\n        e.persist();\n        setInputs({\n            ...inputs,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    return (\n        <div className='maindiv'>\n            <h1>My Tasks</h1>\n            <div className='tasklist'>\n                <div className='column'>\n                    <form onSubmit={createNewTask}>\n                        <h1>New Task</h1>\n                        <textarea \n                            name='objective'\n                            onChange={isTyping}\n                            value={inputs.objective}\n                            placeholder='Objective'\n                            required\n                        />\n                        <button>Add Task</button>\n                    </form>\n                </div>\n                <div className='column'>\n                    <div className='cat'>Newly Added Tasks</div>\n                    {sortedTasks.created.length > 0 ? sortedTasks.created.map((task, i) => {\n                        let nextStatus = task.status == 'created' ? 'inprogress': 'done';\n                        return (\n                            <div key={i} className='task'>\n                                <h2>Objective: {task.objective}</h2>\n                                <h3>Status: {task.status}</h3>\n                                <img className='threedots' src='/three_dots.png'/>\n                                <div className='floater'>\n                                    <div onClick={(e) => {\n                                        task.status = nextStatus;\n                                        updateThisTask(e, task.id, nextStatus)\n                                    }} className='update'>Update Status</div>\n                                    <div onClick={(e) => removeThisTask(e, task.id)} className='remove'>Remove Task</div>\n                                </div>\n                            </div>\n                        )\n                    }): <p className='info'>No In Progress Tasks</p>}\n                </div>\n                <div className='column'>\n                    <div className='cat'>Tasks in Progress</div>\n                    {sortedTasks.inprogress.length > 0 ? sortedTasks.inprogress.map((task, i) => {\n                        let nextStatus = task.status == 'created' ? 'inprogress': 'done';\n                        return (\n                            <div key={i} className='task'>\n                                <h2>Objective: {task.objective}</h2>\n                                <h3>Status: {task.status}</h3>\n                                <img className='threedots' src='/three_dots.png'/>\n                                <div className='floater'>\n                                    <div onClick={(e) => {\n                                        task.status = nextStatus;\n                                        updateThisTask(e, task.id, nextStatus)\n                                    }} className='update'>Update Status</div>\n                                    <div onClick={(e) => removeThisTask(e, task.id)} className='remove'>Remove Task</div>\n                                </div>\n                            </div>\n                        )\n                    }): <p className='info'>No In Progress Tasks</p>}\n                </div>\n                <div className='column'>\n                    <div className='cat'>Done</div>\n                    {sortedTasks.done.length > 0 ? sortedTasks.done.map((task, i) => {\n                        let nextStatus = task.status == 'created' ? 'inprogress': 'done';\n                        return (\n                            <div key={i} className='task'>\n                                <h2>Objective: {task.objective}</h2>\n                                <h3>Status: {task.status}</h3>\n                                <img className='threedots' src='/three_dots.png'/>\n                                <div className='floater'>\n                                    <div onClick={(e) => {\n                                        task.status = nextStatus;\n                                        updateThisTask(e, task.id, nextStatus)\n                                    }} className='update'>Update Status</div>\n                                    <div onClick={(e) => removeThisTask(e, task.id)} className='remove'>Remove Task</div>\n                                </div>\n                            </div>\n                        )\n                    }): <p className='info'>No In Progress Tasks</p>}\n                </div>\n            </div>\n            \n            <img id='body_bg' src='/bg_login.png'/>\n            <style jsx>{`\n                .info {\n                    float: left;\n                    font: 14px 'Open Sans';\n                    \n                }\n                .column {\n                    float: left;\n                    width: 23%;\n                    margin: 10px 1%;\n                    padding: 10px 1%;\n                    border-radius: 10px;\n                    box-shadow: ${Theme.colors.shadowlight};\n                    background: rgba(255,255,255,.7);\n                    backdrop-filter: blur(8px);\n                }\n                .cat {\n                    float: left;\n                    width: 90%;\n                    padding: 14px 5%;\n                    color: white;\n                    margin: 20px 0;\n                    border-radius: 10px;\n                    font: 14px 'Roboto';\n                    background: ${Theme.colors.gunmetal};\n                }\n                .tasktoggle {\n                    float: left;\n                    width: 100px;\n                    height: 100px;\n                    padding: 10px;\n                }\n                .update {\n                    float: left;\n                    width: 100%;\n                    padding: 8px 0;\n                    text-align: center;\n                    font: 12px 'Open Sans';\n                    opacity: .8;\n                    transition: all .3s ease;\n                    background: ${Theme.colors.platinum};\n                    cursor: pointer;\n                }\n                .update:hover {\n                    opacity: 1;\n                    background: white;\n                }\n                .remove {\n                    float: left;\n                    width: 100%;\n                    padding: 8px 0;\n                    text-align: center;\n                    font: 12px 'Open Sans';\n                    opacity: .8;\n                    color: white;\n                    transition: all .3s ease;\n                    background: rgba(226, 70, 70,.8);\n                    cursor: pointer;\n                }\n                .remove:hover {\n                    opacity: 1;\n                }\n                .threedots {\n                    position: absolute;\n                    top: -5px;\n                    right: 3px;\n                    width: 20px;\n                    height: 20px;\n                    padding: 15px;\n                    cursor: pointer;\n                }\n                .threedots:hover ~ .floater, .floater:hover {\n                    opacity: 1;\n                    transform: translateX(100%) scale(1,1);\n                }\n                .floater {\n                    position: absolute;\n                    right: 125px;\n                    top: -10px;\n                    width: 120px;\n                    transform: translateX(0) scale(0,0);\n                    padding: 0;\n                    opacity: 0;\n                    border-radius: 10px;\n                    overflow: hidden;\n                    transition: opacity .2s ease, transform .4s;\n                    backdrop-filter: blur(8px);\n                    background: rgba(255, 255, 255,.8);\n                    box-shadow: 0 0 2px rgba(20,20,20,.6);\n                    z-index: 9999;\n                }\n                .tasklist {\n                    float: left;\n                    width: 100%;\n                    transition: all .2s ease;\n                    padding: 30px 0;\n                    display: flex;\n                    justify-content: center;\n                }\n                .task {\n                    float: left;\n                    width: 90%;\n                    position: relative;\n                    padding: 10px 5%;\n                    margin: 10px 0;\n                    min-height: 120px;\n                    border-radius: 30px;\n                    background: ${Theme.colors.lightplatinum};\n                }\n                .task h2 {\n                    float: left;\n                    width: 90%;\n                    padding: 5px 5%;\n                    margin: 0;\n                    font: 13px 'Open Sans';\n                    margin-top: 10px;\n                }\n                .task h3 {\n                    float: left;\n                    width: 90%;\n                    padding: 5px 5%;\n                    margin: 0;\n                    font: 12px 'Roboto';\n                    opacity: .8;\n                }\n                .maindiv textarea {\n                    float: left;\n                    margin: 10px 2.5%;\n                    padding: 10px 2.5%;\n                    width: 90%;\n                    font: 18px 'Roboto';\n                    border: none;\n                    resize: vertical;\n                    max-height: 150px;\n                    min-height: 120px;\n                    border-radius: 6px;\n                    box-shadow: 0 0 2px rgba(20,20,20,.8);\n                }\n                .maindiv {\n                    float: left;\n                    width: 100%;\n                    z-index: 9999;\n                    margin: 20px 0;\n                    margin-top: 90px;\n                    backdrop-filter: blur(8px);\n                    background: rgba(255, 255, 255, .9);\n                }\n                .maindiv h1 {\n                    float: left;\n                    margin: 10px 5%;\n                    width: 90%;\n                    font: 20px 'Montserrat';\n                }\n                .maindiv form {\n                    float: left;\n                    width: 90%;\n                    transition: all .2s ease;\n                    padding: 10px 5%;\n                }\n                #body_bg {\n                    width: 100%;\n                    z-index: -20;\n                    position: fixed;\n                    top: 50%;\n                    left: 50%;\n                    transform: translate(-50%, -50%) scale(1.1,1.1);\n                }\n                .maindiv button {\n                    float: left;\n                    width: 90%;\n                    padding: 10px 5%;\n                    background: ${Theme.colors.royalblue};\n                    color: white;\n                    cursor: pointer;\n                    border: none;\n                    border-radius: 8px;\n                    margin: 10px 5%;\n                }\n            `}</style>\n        </div>\n    )\n}\n\nTaskManager.getInitialProps = async(ctx) => {\n    const cookies = await nextCookie(ctx)\n    const getfirsttasks = await getTasks(50, cookies.accessToken)\n    if(getfirsttasks == 'Not Authorized') {\n        if (ctx.res) {\n            ctx.res.writeHead(301, {\n              Location: '/login'\n            });\n            ctx.res.end();\n        } \n    }\n    getfirsttasks.sort(compare('status'))\n    return {getFirstLoad: getfirsttasks}\n}\n\nexport default TaskManager"]},"metadata":{},"sourceType":"module"}