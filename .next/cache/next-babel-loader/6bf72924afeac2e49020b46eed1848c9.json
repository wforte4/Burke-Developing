{"ast":null,"code":"import { catchAxiosError } from \"./error\";\nimport { post, get, postFile } from \"./restservice\";\nimport Router from 'next/router';\nimport { Cookies } from 'react-cookie';\nconst cookies = new Cookies();\nexport const backendImages = \"https://uplink.work/restapi/uploadimages/\";\nexport async function createProfile(firstname, lastname, email, password) {\n  // Request data to post to createprofile route on rest api\n  fetch('http://localhost:3600/users', {\n    method: 'POST',\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"firstName\": firstname,\n      \"lastName\": lastname,\n      \"email\": email,\n      \"password\": password\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    console.log('Request succeeded with JSON response', data);\n  }).catch(function (error) {\n    console.log('Request failed', error);\n  });\n}\nexport async function loginRequest(email, password) {\n  // New Login Data request\n  const data = new URLSearchParams({\n    email,\n    password\n  });\n  const res = await post(\"/auth\", data).catch(catchAxiosError);\n  if (res.error) return res.error;\n\n  if (res.data.error) {\n    return res.data.error;\n  }\n\n  const {\n    token\n  } = res.data.value;\n  localStorage.setItem('user', res.data.email);\n  localStorage.setItem('userFullName', res.data.fullname);\n  localStorage.setItem('authorization', res.data.value);\n  localStorage.setItem('expiration', res.data.exp);\n  localStorage.setItem('sub', res.data.sub);\n  cookies.set('token', res.data.value);\n  Router.push(\"/\");\n}\nexport async function forgotPass(email) {\n  const data = new URLSearchParams({\n    email\n  });\n  const res = await post(\"/forgotpass\", data).catch(catchAxiosError);\n  if (res.error) return res.error;\n  return res.data.message;\n}\nexport async function checkConfirm(email, confirmation) {\n  const data = new URLSearchParams({\n    email,\n    confirmation\n  });\n  const res = await post(\"/checkconfirm\", data).catch(catchAxiosError);\n  if (res.error) return res.error;\n  if (res.data) return res.data.status;\n}\nexport async function deleteProfile(user) {\n  const res = await get(`/removeuser/${user}`);\n  if (res.data) return res.data;\n  if (res.error) return res.error;\n  return res.data;\n}\nexport async function removeFile(filename) {\n  const res = await get(`/removefile/${filename}`).then(res => {\n    if (res.error) return res.error;\n    console.log(res.data.status);\n    return res.data.status;\n  });\n}\nexport async function removeUserFile(filepath, user) {\n  const data = new URLSearchParams({\n    filepath,\n    user\n  });\n  const res = await post(\"/removefile\", data).catch(catchAxiosError);\n  if (res.error) return res.error;\n  return res.data.status;\n}\nexport const COOKIES = {\n  logintoken: \"indexplus.token.secured\"\n};\nexport async function Logout() {\n  cookies.remove('token');\n  localStorage.removeItem('user');\n  localStorage.removeItem('userFullName');\n  localStorage.removeItem('authorization');\n  localStorage.removeItem('expiration');\n  localStorage.removeItem('sub');\n  console.log(\"User logged out\");\n  await Router.push(\"/login\");\n}\nexport async function getProfile(user) {\n  const res = await get(`/getprofile/${user}`);\n  if (res.error) return res.error;\n  return res.data;\n}\nexport async function getStaticImages() {\n  const res = await get(\"/uploadedimages\");\n  return res.data;\n}\nexport async function getUserImages(user) {\n  const res = await get(`/uploadedimages/${user}`);\n  return res.data;\n} // Store Item and Post Upload Endpoints //\n\nexport async function getStoreItems(store) {\n  const res = await get(`/getstoreitems/${store}`);\n  if (res.error) return res.error;\n  if (!res.data) return \"Did not load or no items yet...\";\n  return res.data;\n}\nexport async function getStoreItemsByUser(owner) {\n  const res = await get(`/getstoreitemsbyuser/${owner}`);\n  if (res.error) return res.error;\n  if (!res.data) return \"Did not load or no items yet...\";\n  return res.data;\n}\nexport async function getStorePosts(store) {\n  const res = await get(`/getstoreposts/${store}`);\n  if (res.error) return \"noresponse\";\n  if (!res.data) return \"Did not load or no posts yet...\";\n  console.log(\"called get posts\");\n  return res.data;\n}\nexport async function getStorePost(postid) {\n  const res = await get(`/getstorepost/${postid}`);\n  if (res.error) return res.error;\n  if (!res.data) return \"Did not load the post\";\n  return res.data;\n}\nexport async function getStoreItem(itemid) {\n  const res = await get(`/getstoreitem/${itemid}`);\n  if (res.error) return res.error;\n  if (!res.data) return \"Did not load the item\";\n  return res.data;\n}\nexport async function likeItem(itemid) {\n  const res = await get(`/likeitem/${itemid}`);\n  if (res.error) return res.error;\n  return res.data.status;\n}\nexport async function dislikeItem(itemid) {\n  const res = await get(`/dislikeitem/${itemid}`);\n  if (res.error) return res.error;\n  return res.data.status;\n}\nexport async function getItemComments(itemid) {\n  const res = await get(`/getcomments/${itemid}`);\n  if (res.error) return res.error;\n  return res.data;\n}\nexport async function makeComment(owner, commentstring, connectingitem, rating) {\n  const data = new URLSearchParams({\n    owner,\n    commentstring,\n    connectingitem,\n    rating\n  });\n  const res = await post(\"/makecomment\", data).catch(catchAxiosError);\n  if (res.error) return res.error;\n  if (res.data) return res.data.status;\n}\nexport async function getStoreAuth(user) {\n  const res = await get(`/getstoreauth/${user}`);\n  if (res.error) return res.error;\n  if (res.data.status) return \"No Store\";\n  return res.data;\n}\nexport async function makeNewAuth(storename, storeurl, username) {\n  const data = new URLSearchParams({\n    username,\n    storename,\n    storeurl\n  });\n  const res = await post(\"/makestoreauth\", data).catch(catchAxiosError);\n  if (res.error) return res.error;\n  if (!res.data.status) \"Did not work\";\n  return res.data.status;\n}\nexport async function addStoreItem(itemname, itemdescription, itemprice, itemimage, itemstore, itemowner) {\n  const data = new URLSearchParams({\n    itemname,\n    itemdescription,\n    itemprice,\n    itemimage,\n    itemstore,\n    itemowner\n  });\n  const res = await post(\"/createstoreitem\", data).catch(catchAxiosError);\n  if (res.error) return res.error;\n  if (!res.data.status) \"No Response\";\n  return res.data.itemid;\n}\nexport async function removeItem(id) {\n  const res = await get(`/deleteitem/${id}`);\n  if (res.error) return res.error;\n  return res.data.status;\n} // Shopping Card Session fetching and creating //\n// >> ADD TO CART\n// >> REMOVE FROM CART\n// >> GET SHOPPING SESSION (AUTO CREATES SESSION IF NOT EXISTS)\n// >> \n\nexport async function addToCart(email, item) {\n  const data = new URLSearchParams({\n    email,\n    item\n  });\n  const additem = await post('/addtocart', data).catch(catchAxiosError);\n  if (additem) return additem.data.status;\n}\nexport async function getShoppingSession(email) {\n  const res = await get(`/getshoppingsession/${email}`);\n  if (res) return res.data;\n}\nexport async function getCartItems(cartdata) {\n  const res = await get(`/getcartitems/${cartdata}`);\n  if (res) return res.data;\n}\nexport async function clearCart(email) {\n  localStorage.removeItem('cartsession');\n  const res = await get(`/clearcart/${email}`);\n  if (res) return res.data.status;\n}\nexport async function getpaymentintent(email, cartdata) {\n  const data = new URLSearchParams({\n    email,\n    cartdata\n  });\n  const res = await post(\"/paymentIntent\", data).catch(catchAxiosError);\n  if (res.error) return res.error;\n  if (!res.data) return \"Did not load or no items yet...\";\n  return res.data.client_secret;\n}","map":{"version":3,"sources":["/Users/williamforte/Canvas/burkedeveloping/services/apiservice.js"],"names":["catchAxiosError","post","get","postFile","Router","Cookies","cookies","backendImages","createProfile","firstname","lastname","email","password","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error","loginRequest","URLSearchParams","res","token","value","localStorage","setItem","fullname","exp","sub","set","push","forgotPass","message","checkConfirm","confirmation","status","deleteProfile","user","removeFile","filename","removeUserFile","filepath","COOKIES","logintoken","Logout","remove","removeItem","getProfile","getStaticImages","getUserImages","getStoreItems","store","getStoreItemsByUser","owner","getStorePosts","getStorePost","postid","getStoreItem","itemid","likeItem","dislikeItem","getItemComments","makeComment","commentstring","connectingitem","rating","getStoreAuth","makeNewAuth","storename","storeurl","username","addStoreItem","itemname","itemdescription","itemprice","itemimage","itemstore","itemowner","id","addToCart","item","additem","getShoppingSession","getCartItems","cartdata","clearCart","getpaymentintent","client_secret"],"mappings":"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","sourcesContent":["import { catchAxiosError } from \"./error\";\nimport { post, get , postFile} from \"./restservice\";\nimport Router from 'next/router';\nimport { Cookies } from 'react-cookie';\n\nconst cookies = new Cookies();\n\nexport const backendImages = \"https://uplink.work/restapi/uploadimages/\";\n\nexport async function createProfile(firstname, lastname, email, password) {\n    // Request data to post to createprofile route on rest api\n    fetch('http://localhost:3600/users', {\n        method: 'POST',\n        headers: {\n            \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            \"firstName\": firstname,\n            \"lastName\": lastname,\n            \"email\": email,\n            \"password\": password\n        })\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .then(function(data) {\n        console.log('Request succeeded with JSON response', data);\n    })\n    .catch(function(error) {\n        console.log('Request failed', error);\n    });\n}\n\nexport async function loginRequest(email, password) {\n    // New Login Data request\n    const data = new URLSearchParams({\n        email, \n        password,\n    });\n    const res = await post(\"/auth\", data).catch(catchAxiosError);\n    if(res.error) return res.error;\n    if(res.data.error) {\n        return res.data.error;\n    }\n    const { token } = res.data.value;\n    localStorage.setItem('user', res.data.email);\n    localStorage.setItem('userFullName', res.data.fullname);\n    localStorage.setItem('authorization', res.data.value);\n    localStorage.setItem('expiration', res.data.exp);\n    localStorage.setItem('sub', res.data.sub);\n    cookies.set('token', res.data.value);\n    Router.push(\"/\");\n}\n\n\n\nexport async function forgotPass(email) {\n    const data = new URLSearchParams({\n        email,\n    })\n    const res = await post(\"/forgotpass\", data).catch(catchAxiosError);\n    if(res.error) return res.error;\n    return res.data.message;\n}\n\nexport async function checkConfirm(email, confirmation) {\n    const data = new URLSearchParams({\n        email,\n        confirmation\n    })\n    const res = await post(\"/checkconfirm\", data).catch(catchAxiosError);\n    if(res.error) return res.error;\n    if(res.data) return res.data.status;\n}\n\nexport async function deleteProfile(user) {\n    const res = await get(`/removeuser/${user}`);\n    if(res.data) return res.data;\n    if(res.error) return res.error;\n    return res.data;\n}\n\nexport async function removeFile(filename) {\n    const res = await get(`/removefile/${filename}`).then(\n        res => {\n            if(res.error) return res.error;\n            console.log(res.data.status);\n            return res.data.status;\n        }\n    )\n}\n\nexport async function removeUserFile(filepath, user) {\n    const data = new URLSearchParams({\n        filepath, \n        user,\n    });\n    const res = await post(\"/removefile\", data).catch(catchAxiosError);\n    if(res.error) return res.error;\n    return res.data.status;\n}\n\nexport const COOKIES = {\n    logintoken: \"indexplus.token.secured\"\n};\n\nexport async function Logout() {\n    cookies.remove('token');\n    \n    localStorage.removeItem('user');\n    localStorage.removeItem('userFullName');\n    localStorage.removeItem('authorization');\n    localStorage.removeItem('expiration');\n    localStorage.removeItem('sub');\n    console.log(\"User logged out\")\n    await Router.push(\"/login\");\n}\n\n\n\nexport async function getProfile(user) {\n    const res = await get(`/getprofile/${user}`);\n    if(res.error) return res.error;\n    return res.data;\n}\n\nexport async function getStaticImages() {\n    const res = await get(\"/uploadedimages\");\n    return res.data;\n}\n\nexport async function getUserImages(user) {\n    const res = await get(`/uploadedimages/${user}`);\n    return res.data;\n}\n\n// Store Item and Post Upload Endpoints //\nexport async function getStoreItems(store) {\n    const res = await get(`/getstoreitems/${store}`);\n    if(res.error) return res.error;\n    if(!res.data) return \"Did not load or no items yet...\";\n    return res.data;\n}\n\nexport async function getStoreItemsByUser(owner) {\n    const res = await get(`/getstoreitemsbyuser/${owner}`);\n    if(res.error) return res.error;\n    if(!res.data) return \"Did not load or no items yet...\";\n    return res.data;\n}\n\nexport async function getStorePosts(store) {\n    const res = await get(`/getstoreposts/${store}`);\n    if(res.error) return \"noresponse\";\n    if(!res.data) return \"Did not load or no posts yet...\";\n    console.log(\"called get posts\");\n    return res.data;\n}\n\nexport async function getStorePost(postid) {\n    const res = await get(`/getstorepost/${postid}`);\n    if(res.error) return res.error;\n    if(!res.data) return \"Did not load the post\";\n    return res.data;\n}\n\nexport async function getStoreItem(itemid) {\n    const res = await get(`/getstoreitem/${itemid}`);\n    if(res.error) return res.error;\n    if(!res.data) return \"Did not load the item\";\n    return res.data;\n}\n\nexport async function likeItem(itemid) {\n    const res = await get(`/likeitem/${itemid}`);\n    if(res.error) return res.error;\n    return res.data.status;\n}\n\nexport async function dislikeItem(itemid) {\n    const res = await get(`/dislikeitem/${itemid}`);\n    if(res.error) return res.error;\n    return res.data.status;\n}\n\nexport async function getItemComments(itemid) {\n    const res = await get(`/getcomments/${itemid}`);\n    if(res.error) return res.error;\n    return res.data;\n}\n\nexport async function makeComment(owner, commentstring, connectingitem, rating) {\n    const data = new URLSearchParams({\n        owner,\n        commentstring,\n        connectingitem,\n        rating\n    })\n    const res = await post(\"/makecomment\", data).catch(catchAxiosError);\n    if(res.error) return res.error;\n    if(res.data) return res.data.status;\n}\n\nexport async function getStoreAuth(user) {\n    const res = await get(`/getstoreauth/${user}`);\n    if(res.error) return res.error;\n    if(res.data.status) return \"No Store\";\n    return res.data;\n}\n\nexport async function makeNewAuth(storename, storeurl, username) {\n    const data = new URLSearchParams({\n        username,\n        storename,\n        storeurl\n    });\n    const res = await post(\"/makestoreauth\", data).catch(catchAxiosError);\n    if(res.error) return res.error;\n    if(!res.data.status) \"Did not work\";\n    return res.data.status;\n}\n\nexport async function addStoreItem(itemname, itemdescription, itemprice, itemimage, itemstore, itemowner) {\n    const data = new URLSearchParams({\n        itemname, \n        itemdescription, \n        itemprice, \n        itemimage, \n        itemstore,\n        itemowner\n    });\n    const res = await post(\"/createstoreitem\", data).catch(catchAxiosError);\n    if(res.error) return res.error;\n    if(!res.data.status) \"No Response\";\n    return res.data.itemid;\n}\n\nexport async function removeItem(id) {\n    const res = await get(`/deleteitem/${id}`);\n    if(res.error) return res.error;\n    return res.data.status;\n}\n\n// Shopping Card Session fetching and creating //\n// >> ADD TO CART\n// >> REMOVE FROM CART\n// >> GET SHOPPING SESSION (AUTO CREATES SESSION IF NOT EXISTS)\n// >> \n\nexport async function addToCart(email, item) {\n    const data = new URLSearchParams({\n        email, item\n    })\n    const additem = await post('/addtocart', data).catch(catchAxiosError);\n    if(additem) return additem.data.status;\n}\n\nexport async function getShoppingSession(email) {\n    const res = await get(`/getshoppingsession/${email}`);\n    if(res) return res.data;\n}\n\nexport async function getCartItems(cartdata) {\n    const res = await get(`/getcartitems/${cartdata}`);\n    if(res) return res.data;\n}\n\nexport async function clearCart(email) {\n    localStorage.removeItem('cartsession');\n    const res = await get(`/clearcart/${email}`);\n    if(res) return res.data.status;\n}\n\nexport async function getpaymentintent(email, cartdata) {\n    const data = new URLSearchParams({\n        email,\n        cartdata,\n    });\n    const res = await post(\"/paymentIntent\", data).catch(catchAxiosError);\n    if(res.error) return res.error;\n    if(!res.data) return \"Did not load or no items yet...\";\n    return res.data.client_secret;\n}"]},"metadata":{},"sourceType":"module"}