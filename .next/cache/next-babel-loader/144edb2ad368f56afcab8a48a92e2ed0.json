{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nexport function useScroll() {\n  _s();\n\n  var _useState = useState(0),\n      lastScrollTop = _useState[0],\n      setLastScrollTop = _useState[1];\n\n  var _useState2 = useState(0),\n      bodyOffset = _useState2[0],\n      setBodyOffset = _useState2[1];\n\n  var _useState3 = useState(bodyOffset.top),\n      scrollY = _useState3[0],\n      setScrollY = _useState3[1];\n\n  var _useState4 = useState(bodyOffset.left),\n      scrollX = _useState4[0],\n      setScrollX = _useState4[1];\n\n  var _useState5 = useState(),\n      scrollDirection = _useState5[0],\n      setScrollDirection = _useState5[1];\n\n  var listener = function listener(e) {\n    setBodyOffset(document.body.getBoundingClientRect());\n    setScrollY(-bodyOffset.top);\n    setScrollX(bodyOffset.left);\n    setScrollDirection(lastScrollTop > -bodyOffset.top ? \"down\" : \"up\");\n    setLastScrollTop(-bodyOffset.top);\n  };\n\n  useEffect(function () {\n    window.addEventListener(\"scroll\", listener);\n    return function () {\n      window.removeEventListener(\"scroll\", listener);\n    };\n  });\n  return {\n    scrollY: scrollY,\n    scrollX: scrollX,\n    scrollDirection: scrollDirection\n  };\n}\n\n_s(useScroll, \"uoOzbshqsweBRGvJLk9VGm8ttGM=\");\n\nexport function useWindowSize() {\n  _s2();\n\n  var isClient = true;\n\n  function getSize() {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined\n    };\n  }\n\n  var _useState6 = useState(getSize),\n      windowSize = _useState6[0],\n      setWindowSize = _useState6[1];\n\n  useEffect(function () {\n    if (!isClient) {\n      return false;\n    }\n\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return function () {\n      return window.removeEventListener('resize', handleResize);\n    };\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize;\n}\n\n_s2(useWindowSize, \"BavKeL6E6tNTiGKbwq7Pn4eTing=\");","map":{"version":3,"sources":["/Users/williamforte/Canvas/burkedeveloping/components/hooks.js"],"names":["useState","useEffect","useScroll","lastScrollTop","setLastScrollTop","bodyOffset","setBodyOffset","top","scrollY","setScrollY","left","scrollX","setScrollX","scrollDirection","setScrollDirection","listener","e","document","body","getBoundingClientRect","window","addEventListener","removeEventListener","useWindowSize","isClient","getSize","width","innerWidth","undefined","height","innerHeight","windowSize","setWindowSize","handleResize"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AAAA,kBACgBF,QAAQ,CAAC,CAAD,CADxB;AAAA,MACnBG,aADmB;AAAA,MACJC,gBADI;;AAAA,mBAEUJ,QAAQ,CAAC,CAAD,CAFlB;AAAA,MAEnBK,UAFmB;AAAA,MAEPC,aAFO;;AAAA,mBAGIN,QAAQ,CAACK,UAAU,CAACE,GAAZ,CAHZ;AAAA,MAGnBC,OAHmB;AAAA,MAGVC,UAHU;;AAAA,mBAIIT,QAAQ,CAACK,UAAU,CAACK,IAAZ,CAJZ;AAAA,MAInBC,OAJmB;AAAA,MAIVC,UAJU;;AAAA,mBAKoBZ,QAAQ,EAL5B;AAAA,MAKnBa,eALmB;AAAA,MAKFC,kBALE;;AAO1B,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,CAAC,EAAI;AACpBV,IAAAA,aAAa,CAACW,QAAQ,CAACC,IAAT,CAAcC,qBAAd,EAAD,CAAb;AACAV,IAAAA,UAAU,CAAC,CAACJ,UAAU,CAACE,GAAb,CAAV;AACAK,IAAAA,UAAU,CAACP,UAAU,CAACK,IAAZ,CAAV;AACAI,IAAAA,kBAAkB,CAACX,aAAa,GAAG,CAACE,UAAU,CAACE,GAA5B,GAAkC,MAAlC,GAA2C,IAA5C,CAAlB;AACAH,IAAAA,gBAAgB,CAAC,CAACC,UAAU,CAACE,GAAb,CAAhB;AACD,GAND;;AAQAN,EAAAA,SAAS,CAAC,YAAM;AACdmB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCN,QAAlC;AACA,WAAO,YAAM;AACXK,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCP,QAArC;AACD,KAFD;AAGD,GALQ,CAAT;AAOA,SAAO;AACLP,IAAAA,OAAO,EAAPA,OADK;AAELG,IAAAA,OAAO,EAAPA,OAFK;AAGLE,IAAAA,eAAe,EAAfA;AAHK,GAAP;AAKD;;GA3BeX,S;;AA6BhB,OAAO,SAASqB,aAAT,GAAyB;AAAA;;AAC9B,MAAMC,QAAQ,OAAd;;AAEA,WAASC,OAAT,GAAmB;AACjB,WAAO;AACLC,MAAAA,KAAK,EAAEF,QAAQ,GAAGJ,MAAM,CAACO,UAAV,GAAuBC,SADjC;AAELC,MAAAA,MAAM,EAAEL,QAAQ,GAAGJ,MAAM,CAACU,WAAV,GAAwBF;AAFnC,KAAP;AAID;;AAR6B,mBAUM5B,QAAQ,CAACyB,OAAD,CAVd;AAAA,MAUvBM,UAVuB;AAAA,MAUXC,aAVW;;AAY9B/B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACuB,QAAL,EAAe;AACb,aAAO,KAAP;AACD;;AAED,aAASS,YAAT,GAAwB;AACtBD,MAAAA,aAAa,CAACP,OAAO,EAAR,CAAb;AACD;;AAEDL,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCY,YAAlC;AACA,WAAO;AAAA,aAAMb,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCW,YAArC,CAAN;AAAA,KAAP;AACD,GAXQ,EAWN,EAXM,CAAT,CAZ8B,CAuBtB;;AAER,SAAOF,UAAP;AACD;;IA1BeR,a","sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport function useScroll() {\n  const [lastScrollTop, setLastScrollTop] = useState(0);\n  const [bodyOffset, setBodyOffset] = useState(0);\n  const [scrollY, setScrollY] = useState(bodyOffset.top);\n  const [scrollX, setScrollX] = useState(bodyOffset.left);\n  const [scrollDirection, setScrollDirection] = useState();\n\n  const listener = e => {\n    setBodyOffset(document.body.getBoundingClientRect());\n    setScrollY(-bodyOffset.top);\n    setScrollX(bodyOffset.left);\n    setScrollDirection(lastScrollTop > -bodyOffset.top ? \"down\" : \"up\");\n    setLastScrollTop(-bodyOffset.top);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", listener);\n    return () => {\n      window.removeEventListener(\"scroll\", listener);\n    };\n  });\n\n  return {\n    scrollY,\n    scrollX,\n    scrollDirection\n  };\n}\n\nexport function useWindowSize() {\n  const isClient = typeof window === 'object';\n\n  function getSize() {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined\n    };\n  }\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n    \n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize;\n}"]},"metadata":{},"sourceType":"module"}