{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/williamforte/Canvas/burkedeveloping/pages/backend_host_controller/taskmanager.js\",\n    _s = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createTask, getTasks, removeTask, updateTaskStatus } from '../../services/apiservice';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport nextCookie from 'next-cookies';\nimport Theme from '../../styles/theme';\nvar sortingOrder = {\n  'inprogress': 1,\n  'created': 2,\n  'done': 3\n};\nexport function compare(key) {\n  var order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'asc';\n  return function (a, b) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) return 0;\n    var first = a[key].toLowerCase() in sortingOrder ? sortingOrder[a[key]] : Number.MAX_SAFE_INTEGER;\n    var second = b[key].toLowerCase() in sortingOrder ? sortingOrder[b[key]] : Number.MAX_SAFE_INTEGER;\n    var result = 0;\n    if (first < second) result = -1;else if (first > second) result = 1;\n    return order === 'desc' ? ~result : result;\n  };\n}\n\nvar HamEx = function HamEx(_ref) {\n  var onClick = _ref.onClick,\n      color = _ref.color,\n      width = _ref.width,\n      height = _ref.height,\n      active = _ref.active;\n  return __jsx(\"div\", {\n    onClick: onClick,\n    className: _JSXStyle.dynamic([[\"1318293250\", [width, height, color]]]) + \" \" + 'hame',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1318293250\", [width, height, color]]]) + \" \" + \"slash \".concat(active == true ? 'one' : ''),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1318293250\", [width, height, color]]]) + \" \" + \"slash \".concat(active == true ? 'two' : ''),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1318293250\", [width, height, color]]]) + \" \" + \"slash \".concat(active == true ? 'three' : ''),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"1318293250\",\n    dynamic: [width, height, color],\n    __self: _this\n  }, \".hame.__jsx-style-dynamic-selector{float:left;width:\".concat(width, \"px;height:\").concat(height, \"px;padding:10px;position:relative;cursor:pointer;}.slash.__jsx-style-dynamic-selector{float:left;width:100%;height:8px;border-radius:8px;background:\").concat(color, \";margin:2px 0;-webkit-transition:all .4s ease;transition:all .4s ease;}.one.__jsx-style-dynamic-selector{-webkit-transform:translateY(12px) rotate(45deg);-ms-transform:translateY(12px) rotate(45deg);transform:translateY(12px) rotate(45deg);}.two.__jsx-style-dynamic-selector{opacity:0;}.three.__jsx-style-dynamic-selector{-webkit-transform:translateY(-12px) rotate(-45deg);-ms-transform:translateY(-12px) rotate(-45deg);transform:translateY(-12px) rotate(-45deg);}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/williamforte/Canvas/burkedeveloping/pages/backend_host_controller/taskmanager.js */\")));\n};\n\n_c = HamEx;\n\nfunction TaskManager(_ref2) {\n  _s();\n\n  var _this2 = this;\n\n  var getFirstLoad = _ref2.getFirstLoad;\n\n  var _useState = useState({\n    objective: '',\n    status: 'created'\n  }),\n      inputs = _useState[0],\n      setInputs = _useState[1];\n\n  var _useState2 = useState({\n    inprogress: [],\n    created: [],\n    done: []\n  }),\n      sortedTasks = _useState2[0],\n      setSortedTasks = _useState2[1];\n\n  var _useState3 = useState(getFirstLoad != null ? getFirstLoad : null),\n      allTasks = _useState3[0],\n      setAllTasks = _useState3[1];\n\n  var _useState4 = useState(getFirstLoad != null ? 'succeeded' : 'none'),\n      status = _useState4[0],\n      setStatus = _useState4[1];\n\n  var _useState5 = useState(false),\n      loading = _useState5[0],\n      setLoading = _useState5[1];\n\n  var lastcat = null; // Create a new Task DEFAULT: status: 'created'\n\n  var createNewTask = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var newTask;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return createTask(inputs.objective, inputs.status);\n\n            case 3:\n              newTask = _context.sent;\n\n              if (newTask) {\n                console.log(newTask);\n                setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n                  objective: ''\n                }));\n                updateTasks(e);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function createNewTask(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var sortAllTasks = function sortAllTasks(tasks) {\n    var inp = [];\n    var cr = [];\n    var dn = [];\n    tasks.map(function (task) {\n      if (task.status == 'done') dn.push(task);\n      if (task.status == 'created') cr.push(task);\n      if (task.status == 'inprogress') inp.push(task);\n    });\n    setSortedTasks(_objectSpread(_objectSpread({}, sortedTasks), {}, {\n      inprogress: inp,\n      created: cr,\n      done: dn\n    }));\n  };\n\n  useEffect(function () {\n    sortAllTasks(allTasks);\n  }, [sortedTasks.inprogress.length == 0]); // Updating Tasks with Backend\n\n  var updateTasks = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var getalltasks;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setStatus('loading');\n              _context2.next = 3;\n              return getTasks(50, null);\n\n            case 3:\n              getalltasks = _context2.sent;\n\n              if (getalltasks) {\n                console.log(getalltasks);\n                getalltasks.sort(compare('status'));\n                setAllTasks(getalltasks);\n                setStatus('succeeded');\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function updateTasks(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var removeThisTask = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e, task_id) {\n      var removenewtask;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              e.preventDefault();\n              _context3.next = 3;\n              return removeTask(task_id);\n\n            case 3:\n              removenewtask = _context3.sent;\n\n              if (removenewtask) {\n                console.log(removenewtask);\n                updateTasks(e);\n              }\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function removeThisTask(_x3, _x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var updateThisTask = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(e, task_id, status) {\n      var updatenewtask;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              e.preventDefault();\n              _context4.next = 3;\n              return updateTaskStatus(task_id, status);\n\n            case 3:\n              updatenewtask = _context4.sent;\n\n              if (updatenewtask) {\n                console.log(updatenewtask);\n                updateTasks(e);\n              }\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function updateThisTask(_x5, _x6, _x7) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var isTyping = function isTyping(e) {\n    e.persist();\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  return __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'maindiv',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    onSubmit: createNewTask,\n    className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, \"New Task\"), __jsx(\"textarea\", {\n    name: \"objective\",\n    onChange: isTyping,\n    value: inputs.objective,\n    placeholder: \"Objective\",\n    required: true,\n    className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, \"Add Task\")), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'tasklist',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, \"My Tasks\"), allTasks ? allTasks.map(function (task, i) {\n    var nextStatus = task.status == 'created' ? 'inprogress' : 'done';\n\n    if (lastcat == task.status) {\n      return __jsx(\"div\", {\n        key: i,\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'task',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 29\n        }\n      }, __jsx(\"h2\", {\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]),\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 33\n        }\n      }, \"Objective: \", task.objective), __jsx(\"h3\", {\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]),\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 33\n        }\n      }, \"Status: \", task.status), __jsx(\"img\", {\n        src: \"/three_dots.png\",\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'threedots',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 33\n        }\n      }), __jsx(\"div\", {\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'floater',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 33\n        }\n      }, __jsx(\"div\", {\n        onClick: function onClick(e) {\n          task.status = nextStatus;\n          updateThisTask(e, task.id, nextStatus);\n        },\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'update',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 37\n        }\n      }, \"Update Status\"), __jsx(\"div\", {\n        onClick: function onClick(e) {\n          return removeThisTask(e, task.id);\n        },\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'remove',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 37\n        }\n      }, \"Remove Task\")));\n    } else {\n      lastcat = task.status;\n      return [__jsx(\"div\", {\n        key: task.status,\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'cat',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 29\n        }\n      }, task.status.toUpperCase()), __jsx(\"div\", {\n        key: i,\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'task',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 29\n        }\n      }, __jsx(\"h2\", {\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]),\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 33\n        }\n      }, \"Objective: \", task.objective), __jsx(\"h3\", {\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]),\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 33\n        }\n      }, \"Status: \", task.status), __jsx(\"img\", {\n        src: \"/three_dots.png\",\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'threedots',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 33\n        }\n      }), __jsx(\"div\", {\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'floater',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 33\n        }\n      }, __jsx(\"div\", {\n        onClick: function onClick(e) {\n          task.status = nextStatus;\n          updateThisTask(e, task.id, nextStatus);\n        },\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'update',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 37\n        }\n      }, \"Update Status\"), __jsx(\"div\", {\n        onClick: function onClick(e) {\n          return removeThisTask(e, task.id);\n        },\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'remove',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 37\n        }\n      }, \"Remove Task\")))];\n    }\n  }) : status == 'none' ? __jsx(\"h2\", {\n    className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 40\n    }\n  }, \"No Tasks yet\") : __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'loading',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 63\n    }\n  })), __jsx(\"img\", {\n    id: \"body_bg\",\n    src: \"/bg_login.png\",\n    className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"3893520589\",\n    dynamic: [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue],\n    __self: this\n  }, \".cat.__jsx-style-dynamic-selector{float:left;width:90%;padding:10px 5%;color:white;margin:20px 0;font:12px 'Roboto';background:\".concat(Theme.colors.gunmetal, \";}.tasktoggle.__jsx-style-dynamic-selector{float:left;width:100px;height:100px;padding:10px;}.update.__jsx-style-dynamic-selector{float:left;width:100%;padding:8px 0;text-align:center;font:12px 'Open Sans';opacity:.8;background:\").concat(Theme.colors.platinum, \";-webkit-transition:opacity .4s ease;transition:opacity .4s ease;cursor:pointer;}.update.__jsx-style-dynamic-selector:hover{opacity:1;background:white;}.remove.__jsx-style-dynamic-selector{float:left;width:100%;padding:8px 0;text-align:center;font:12px 'Open Sans';opacity:.8;color:white;background:rgba(226,70,70,.8);cursor:pointer;}.remove.__jsx-style-dynamic-selector:hover{opacity:1;}.threedots.__jsx-style-dynamic-selector{position:absolute;top:-5px;right:-5px;width:20px;height:20px;padding:15px;cursor:pointer;}.threedots.__jsx-style-dynamic-selector:hover~.floater.__jsx-style-dynamic-selector,.floater.__jsx-style-dynamic-selector:hover{opacity:1;-webkit-transform:translateX(100%) scale(1,1);-ms-transform:translateX(100%) scale(1,1);transform:translateX(100%) scale(1,1);}.floater.__jsx-style-dynamic-selector{position:absolute;right:-10px;top:-10px;width:120px;-webkit-transform:translateX(0) scale(0,0);-ms-transform:translateX(0) scale(0,0);transform:translateX(0) scale(0,0);padding:0;opacity:0;overflow:hidden;-webkit-transition:opacity .2s ease,-webkit-transform .4s;-webkit-transition:opacity .2s ease,transform .4s;transition:opacity .2s ease,transform .4s;-webkit-backdrop-filter:blur(8px);backdrop-filter:blur(8px);background:rgba(255,255,255,.8);box-shadow:0 0 2px rgba(20,20,20,.6);z-index:9999;}.tasklist.__jsx-style-dynamic-selector{float:left;width:100%;-webkit-transition:all .2s ease;transition:all .2s ease;padding:30px 0;-webkit-backdrop-filter:blur(8px);backdrop-filter:blur(8px);background:rgba(255,255,255,.8);display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;}.task.__jsx-style-dynamic-selector{float:left;width:200px;position:relative;padding:10px;}.task.__jsx-style-dynamic-selector h2.__jsx-style-dynamic-selector{float:left;width:90%;padding:5px 5%;margin:0;font:13px 'Open Sans';margin-top:10px;}.task.__jsx-style-dynamic-selector h3.__jsx-style-dynamic-selector{float:left;width:90%;padding:5px 5%;margin:0;font:12px 'Roboto';opacity:.8;}.maindiv.__jsx-style-dynamic-selector textarea.__jsx-style-dynamic-selector{float:left;margin:10px 2.5%;padding:10px 2.5%;width:90%;font:18px 'Roboto';border:none;resize:vertical;max-height:150px;min-height:30px;border-radius:6px;box-shadow:0 0 2px rgba(20,20,20,.8);}.maindiv.__jsx-style-dynamic-selector{float:left;width:100%;z-index:9999;margin:20px 0;margin-top:90px;-webkit-backdrop-filter:blur(8px);backdrop-filter:blur(8px);background:rgba(255,255,255,.9);}.maindiv.__jsx-style-dynamic-selector h1.__jsx-style-dynamic-selector{float:left;margin:10px 5%;width:90%;font:20px 'Montserrat';}.maindiv.__jsx-style-dynamic-selector form.__jsx-style-dynamic-selector{float:left;width:40%;-webkit-transition:all .2s ease;transition:all .2s ease;padding:10px 5%;}#body_bg.__jsx-style-dynamic-selector{width:100%;z-index:-20;position:fixed;top:50%;left:50%;-webkit-transform:translate(-50%,-50%) scale(1.1,1.1);-ms-transform:translate(-50%,-50%) scale(1.1,1.1);transform:translate(-50%,-50%) scale(1.1,1.1);}.maindiv.__jsx-style-dynamic-selector button.__jsx-style-dynamic-selector{float:left;width:90%;padding:10px 5%;background:\").concat(Theme.colors.royalblue, \";color:white;cursor:pointer;border:none;border-radius:8px;margin:10px 5%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy93aWxsaWFtZm9ydGUvQ2FudmFzL2J1cmtlZGV2ZWxvcGluZy9wYWdlcy9iYWNrZW5kX2hvc3RfY29udHJvbGxlci90YXNrbWFuYWdlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4TXdCLEFBR2dDLEFBU0EsQUFNQSxBQVdELEFBSUMsQUFXRCxBQUdRLEFBU1IsQUFJUSxBQWVQLEFBV0EsQUFNQSxBQVFBLEFBUUEsQUFhQSxBQVNBLEFBTUEsQUFNQSxBQVFBLFVBeEhNLEFBZXJCLEFBWTBDLENBckQ1QixBQVNFLEFBTUQsQUFlQSxBQTBDQSxBQVdDLEFBTUYsQUFRQSxBQVFPLEFBYU4sQUFTSSxBQU1MLEFBTUUsQUFRRixPQXZHRCxBQWFHLEdBeERJLEFBeUZELEFBUUEsQUFvQ1MsQUFjUixDQXBJRixBQWVBLEFBMENVLEFBOENYLENBN0dBLEFBMEVLLEFBd0RILEdBWkwsQ0FyR2QsQUFrQmUsQ0E2RE8sRUFoRFIsS0E4REksQ0E3R0QsQUFNSyxBQWVBLEFBMkRULEFBUUEsQUE4QmMsQ0EvSFgsQUFtSjRCLENBdkc3QixBQStGSCxFQWxGSSxDQTBCQyxJQU9TLEFBUUgsQ0FPVCxBQW1DRCxHQTNJSyxBQVNsQixBQW1DZ0IsQUEwRUksR0E3RG1CLEVBMUNiLEFBZUEsQUFxRDFCLENBeURtRCxDQW5DNUIsR0FzQnZCLEVBbEZpQixFQTVDTSxDQWlHUixDQXFCZSxFQTdCVixPQTVDRCxDQXFEbkIsQUFPZ0IsQ0ExRkQsQUFlQSxDQXFHSyxBQWVKLENBNUVHLElBckV5QixDQXlGNUMsSUExRTRDLEFBZTVCLEFBMkVJLEVBNURwQixBQXFHbUIsSUE1RVcsQUE2RDlCLE1BcEdvQyxJQTJFZixDQXlDTCxZQUNNLElBekNGLEVBMUdwQixHQXFIdUMsRUF0R1AsRUFnQmIsS0FxSEEsRUFwR25CLEFBMkRzQixRQTNFdEIsS0FxSEEsSUEvRXNDLENBc0NHLEdBVXpDLFlBL0RjLFVBQ0EsTUFlRyxJQWRHLEVBekNELEFBNkZuQixjQW5EK0MsQUFnRi9DLENBekhBLHFEQXVEMkIsZ0dBYkcsR0FjWCx5REFibUIsQUFjdEMsZ0NBYnlDLHFDQUN4QixhQUNqQiIsImZpbGUiOiIvVXNlcnMvd2lsbGlhbWZvcnRlL0NhbnZhcy9idXJrZWRldmVsb3BpbmcvcGFnZXMvYmFja2VuZF9ob3N0X2NvbnRyb2xsZXIvdGFza21hbmFnZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVUYXNrLCBnZXRUYXNrcywgcmVtb3ZlVGFzaywgdXBkYXRlVGFza1N0YXR1cyB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2FwaXNlcnZpY2UnXG5pbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUm91dGVyIGZyb20gJ25leHQvcm91dGVyJ1xuaW1wb3J0IG5leHRDb29raWUgZnJvbSAnbmV4dC1jb29raWVzJ1xuaW1wb3J0IFRoZW1lIGZyb20gJy4uLy4uL3N0eWxlcy90aGVtZSdcblxuY29uc3Qgc29ydGluZ09yZGVyID0ge1xuICAgICdpbnByb2dyZXNzJzogMSxcbiAgICAnY3JlYXRlZCc6IDIsXG4gICAgJ2RvbmUnOiAzXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjb21wYXJlKGtleSwgb3JkZXIgPSAnYXNjJykge1xuICAgIHJldHVybiBmdW5jdGlvbiAoYSwgYikge1xuICAgICAgICBpZiAoIWEuaGFzT3duUHJvcGVydHkoa2V5KSB8fCAhYi5oYXNPd25Qcm9wZXJ0eShrZXkpKSBcblx0ICAgIHJldHVybiAwO1xuXHRcdFxuXHRjb25zdCBmaXJzdCA9IChhW2tleV0udG9Mb3dlckNhc2UoKSBpbiBzb3J0aW5nT3JkZXIpID8gc29ydGluZ09yZGVyW2Fba2V5XV0gOiBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUjtcblx0Y29uc3Qgc2Vjb25kID0gKGJba2V5XS50b0xvd2VyQ2FzZSgpIGluIHNvcnRpbmdPcmRlcikgPyBzb3J0aW5nT3JkZXJbYltrZXldXSA6IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSO1xuXHRcdFxuXHRsZXQgcmVzdWx0ID0gMDtcblx0aWYgKGZpcnN0IDwgc2Vjb25kKSBcblx0ICAgIHJlc3VsdCA9IC0xO1xuXHRlbHNlIGlmIChmaXJzdCA+IHNlY29uZCkgXG5cdCAgICByZXN1bHQgPSAxO1xuXHRyZXR1cm4gKG9yZGVyID09PSAnZGVzYycpID8gfnJlc3VsdCA6IHJlc3VsdFxuICAgIH07XG59XG5cbmNvbnN0IEhhbUV4ID0gKHtvbkNsaWNrLCBjb2xvciwgd2lkdGgsIGhlaWdodCwgYWN0aXZlfSkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgb25DbGljaz17b25DbGlja30gY2xhc3NOYW1lPSdoYW1lJz5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgc2xhc2ggJHthY3RpdmUgPT0gdHJ1ZSA/ICdvbmUnOiAnJ31gfT48L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgc2xhc2ggJHthY3RpdmUgPT0gdHJ1ZSA/ICd0d28nOiAnJ31gfT48L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgc2xhc2ggJHthY3RpdmUgPT0gdHJ1ZSA/ICd0aHJlZSc6ICcnfWB9PjwvZGl2PlxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgICAgIC5oYW1lIHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAke3dpZHRofXB4O1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICR7aGVpZ2h0fXB4O1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnNsYXNoIHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDhweDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAke2NvbG9yfTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAycHggMDtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIC40cyBlYXNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAub25lIHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEycHgpIHJvdGF0ZSg0NWRlZyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC50d28ge1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAudGhyZWUge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEycHgpIHJvdGF0ZSgtNDVkZWcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC9kaXY+XG4gICAgKVxufVxuXG5mdW5jdGlvbiBUYXNrTWFuYWdlcih7Z2V0Rmlyc3RMb2FkfSkge1xuXG4gICAgY29uc3QgW2lucHV0cywgc2V0SW5wdXRzXSA9IHVzZVN0YXRlKHtcbiAgICAgICAgb2JqZWN0aXZlOiAnJyxcbiAgICAgICAgc3RhdHVzOiAnY3JlYXRlZCcsXG4gICAgfSlcbiAgICBjb25zdCBbc29ydGVkVGFza3MsIHNldFNvcnRlZFRhc2tzXSA9IHVzZVN0YXRlKHtcbiAgICAgICAgaW5wcm9ncmVzczogW10sXG4gICAgICAgIGNyZWF0ZWQ6IFtdLFxuICAgICAgICBkb25lOiBbXVxuICAgIH0pXG4gICAgY29uc3QgW2FsbFRhc2tzLCBzZXRBbGxUYXNrc10gPSB1c2VTdGF0ZShnZXRGaXJzdExvYWQgIT0gbnVsbCA/IGdldEZpcnN0TG9hZDogbnVsbClcbiAgICBjb25zdCBbc3RhdHVzLCBzZXRTdGF0dXNdID0gdXNlU3RhdGUoZ2V0Rmlyc3RMb2FkICE9IG51bGwgPyAnc3VjY2VlZGVkJzogJ25vbmUnKVxuICAgIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKGZhbHNlKVxuICAgIGxldCBsYXN0Y2F0ID0gbnVsbFxuXG4gICAgLy8gQ3JlYXRlIGEgbmV3IFRhc2sgREVGQVVMVDogc3RhdHVzOiAnY3JlYXRlZCdcbiAgICBjb25zdCBjcmVhdGVOZXdUYXNrID0gYXN5bmMoZSkgPT4ge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGNvbnN0IG5ld1Rhc2sgPSBhd2FpdCBjcmVhdGVUYXNrKGlucHV0cy5vYmplY3RpdmUsIGlucHV0cy5zdGF0dXMpXG4gICAgICAgIGlmKG5ld1Rhc2spIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKG5ld1Rhc2spXG4gICAgICAgICAgICBzZXRJbnB1dHMoey4uLmlucHV0cywgb2JqZWN0aXZlOiAnJ30pXG4gICAgICAgICAgICB1cGRhdGVUYXNrcyhlKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29uc3Qgc29ydEFsbFRhc2tzID0gKHRhc2tzKSA9PiB7XG4gICAgICAgIGNvbnN0IGlucCA9IFtdXG4gICAgICAgIGNvbnN0IGNyID0gW11cbiAgICAgICAgY29uc3QgZG4gPSBbXVxuICAgICAgICB0YXNrcy5tYXAoKHRhc2spID0+IHtcbiAgICAgICAgICAgIGlmKHRhc2suc3RhdHVzID09ICdkb25lJykgZG4ucHVzaCh0YXNrKVxuICAgICAgICAgICAgaWYodGFzay5zdGF0dXMgPT0gJ2NyZWF0ZWQnKSBjci5wdXNoKHRhc2spXG4gICAgICAgICAgICBpZih0YXNrLnN0YXR1cyA9PSAnaW5wcm9ncmVzcycpIGlucC5wdXNoKHRhc2spXG4gICAgICAgIH0pXG4gICAgICAgIHNldFNvcnRlZFRhc2tzKHtcbiAgICAgICAgICAgIC4uLnNvcnRlZFRhc2tzLFxuICAgICAgICAgICAgaW5wcm9ncmVzczogaW5wLFxuICAgICAgICAgICAgY3JlYXRlZDogY3IsXG4gICAgICAgICAgICBkb25lOiBkblxuICAgICAgICB9KVxuICAgIH1cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBzb3J0QWxsVGFza3MoYWxsVGFza3MpXG4gICAgfSwgW3NvcnRlZFRhc2tzLmlucHJvZ3Jlc3MubGVuZ3RoID09IDBdKVxuXG4gICAgLy8gVXBkYXRpbmcgVGFza3Mgd2l0aCBCYWNrZW5kXG4gICAgY29uc3QgdXBkYXRlVGFza3MgPSBhc3luYyhlKSA9PiB7XG4gICAgICAgIHNldFN0YXR1cygnbG9hZGluZycpXG4gICAgICAgIGNvbnN0IGdldGFsbHRhc2tzID0gYXdhaXQgZ2V0VGFza3MoNTAsIG51bGwpXG4gICAgICAgIGlmKGdldGFsbHRhc2tzKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhnZXRhbGx0YXNrcylcbiAgICAgICAgICAgIGdldGFsbHRhc2tzLnNvcnQoY29tcGFyZSgnc3RhdHVzJykpXG4gICAgICAgICAgICBzZXRBbGxUYXNrcyhnZXRhbGx0YXNrcylcbiAgICAgICAgICAgIHNldFN0YXR1cygnc3VjY2VlZGVkJylcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IHJlbW92ZVRoaXNUYXNrID0gYXN5bmMoZSwgdGFza19pZCkgPT4ge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgY29uc3QgcmVtb3ZlbmV3dGFzayA9IGF3YWl0IHJlbW92ZVRhc2sodGFza19pZCk7XG4gICAgICAgIGlmKHJlbW92ZW5ld3Rhc2spIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlbW92ZW5ld3Rhc2spXG4gICAgICAgICAgICB1cGRhdGVUYXNrcyhlKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgdXBkYXRlVGhpc1Rhc2sgPSBhc3luYyhlLCB0YXNrX2lkLCBzdGF0dXMpID0+IHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICAgIGNvbnN0IHVwZGF0ZW5ld3Rhc2sgPSBhd2FpdCB1cGRhdGVUYXNrU3RhdHVzKHRhc2tfaWQsIHN0YXR1cyk7XG4gICAgICAgIGlmKHVwZGF0ZW5ld3Rhc2spIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHVwZGF0ZW5ld3Rhc2spXG4gICAgICAgICAgICB1cGRhdGVUYXNrcyhlKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgaXNUeXBpbmcgPSAoZSkgPT4ge1xuICAgICAgICBlLnBlcnNpc3QoKTtcbiAgICAgICAgc2V0SW5wdXRzKHtcbiAgICAgICAgICAgIC4uLmlucHV0cyxcbiAgICAgICAgICAgIFtlLnRhcmdldC5uYW1lXTogZS50YXJnZXQudmFsdWVcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nbWFpbmRpdic+XG4gICAgICAgICAgICA8Zm9ybSBvblN1Ym1pdD17Y3JlYXRlTmV3VGFza30+XG4gICAgICAgICAgICAgICAgPGgxPk5ldyBUYXNrPC9oMT5cbiAgICAgICAgICAgICAgICA8dGV4dGFyZWEgXG4gICAgICAgICAgICAgICAgICAgIG5hbWU9J29iamVjdGl2ZSdcbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e2lzVHlwaW5nfVxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17aW5wdXRzLm9iamVjdGl2ZX1cbiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9J09iamVjdGl2ZSdcbiAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWRcbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDxidXR0b24+QWRkIFRhc2s8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZm9ybT5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSd0YXNrbGlzdCc+XG4gICAgICAgICAgICAgICAgPGgxPk15IFRhc2tzPC9oMT5cbiAgICAgICAgICAgICAgICB7YWxsVGFza3MgPyBhbGxUYXNrcy5tYXAoKHRhc2ssIGkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IG5leHRTdGF0dXMgPSB0YXNrLnN0YXR1cyA9PSAnY3JlYXRlZCcgPyAnaW5wcm9ncmVzcyc6ICdkb25lJztcbiAgICAgICAgICAgICAgICAgICAgaWYobGFzdGNhdCA9PSB0YXNrLnN0YXR1cykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGtleT17aX0gY2xhc3NOYW1lPSd0YXNrJz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgyPk9iamVjdGl2ZToge3Rhc2sub2JqZWN0aXZlfTwvaDI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMz5TdGF0dXM6IHt0YXNrLnN0YXR1c308L2gzPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzTmFtZT0ndGhyZWVkb3RzJyBzcmM9Jy90aHJlZV9kb3RzLnBuZycvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZmxvYXRlcic+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IG9uQ2xpY2s9eyhlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFzay5zdGF0dXMgPSBuZXh0U3RhdHVzO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZVRoaXNUYXNrKGUsIHRhc2suaWQsIG5leHRTdGF0dXMpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fSBjbGFzc05hbWU9J3VwZGF0ZSc+VXBkYXRlIFN0YXR1czwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBvbkNsaWNrPXsoZSkgPT4gcmVtb3ZlVGhpc1Rhc2soZSwgdGFzay5pZCl9IGNsYXNzTmFtZT0ncmVtb3ZlJz5SZW1vdmUgVGFzazwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhc3RjYXQgPSB0YXNrLnN0YXR1cztcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBrZXk9e3Rhc2suc3RhdHVzfSBjbGFzc05hbWU9J2NhdCc+e3Rhc2suc3RhdHVzLnRvVXBwZXJDYXNlKCl9PC9kaXY+LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYga2V5PXtpfSBjbGFzc05hbWU9J3Rhc2snPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDI+T2JqZWN0aXZlOiB7dGFzay5vYmplY3RpdmV9PC9oMj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzPlN0YXR1czoge3Rhc2suc3RhdHVzfTwvaDM+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3NOYW1lPSd0aHJlZWRvdHMnIHNyYz0nL3RocmVlX2RvdHMucG5nJy8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdmbG9hdGVyJz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgb25DbGljaz17KGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXNrLnN0YXR1cyA9IG5leHRTdGF0dXM7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlVGhpc1Rhc2soZSwgdGFzay5pZCwgbmV4dFN0YXR1cylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19IGNsYXNzTmFtZT0ndXBkYXRlJz5VcGRhdGUgU3RhdHVzPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IG9uQ2xpY2s9eyhlKSA9PiByZW1vdmVUaGlzVGFzayhlLCB0YXNrLmlkKX0gY2xhc3NOYW1lPSdyZW1vdmUnPlJlbW92ZSBUYXNrPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk6IHN0YXR1cyA9PSAnbm9uZScgPyA8aDI+Tm8gVGFza3MgeWV0PC9oMj46IDxkaXYgY2xhc3NOYW1lPSdsb2FkaW5nJz48L2Rpdj59XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgPGltZyBpZD0nYm9keV9iZycgc3JjPScvYmdfbG9naW4ucG5nJy8+XG4gICAgICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgICAgICAgLmNhdCB7XG4gICAgICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4IDUlO1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMjBweCAwO1xuICAgICAgICAgICAgICAgICAgICBmb250OiAxMnB4ICdSb2JvdG8nO1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAke1RoZW1lLmNvbG9ycy5ndW5tZXRhbH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC50YXNrdG9nZ2xlIHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDBweDtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDBweDtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnVwZGF0ZSB7XG4gICAgICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogOHB4IDA7XG4gICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgICAgICAgICAgZm9udDogMTJweCAnT3BlbiBTYW5zJztcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogLjg7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICR7VGhlbWUuY29sb3JzLnBsYXRpbnVtfTtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAuNHMgZWFzZTtcbiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAudXBkYXRlOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC5yZW1vdmUge1xuICAgICAgICAgICAgICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDhweCAwO1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQ6IDEycHggJ09wZW4gU2Fucyc7XG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IC44O1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjI2LCA3MCwgNzAsLjgpO1xuICAgICAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC5yZW1vdmU6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAudGhyZWVkb3RzIHtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgICAgICB0b3A6IC01cHg7XG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAtNXB4O1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMjBweDtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAyMHB4O1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xuICAgICAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC50aHJlZWRvdHM6aG92ZXIgfiAuZmxvYXRlciwgLmZsb2F0ZXI6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSkgc2NhbGUoMSwxKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLmZsb2F0ZXIge1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAtMTBweDtcbiAgICAgICAgICAgICAgICAgICAgdG9wOiAtMTBweDtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEyMHB4O1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCkgc2NhbGUoMCwwKTtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAuMnMgZWFzZSwgdHJhbnNmb3JtIC40cztcbiAgICAgICAgICAgICAgICAgICAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDhweCk7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwuOCk7XG4gICAgICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6IDAgMCAycHggcmdiYSgyMCwyMCwyMCwuNik7XG4gICAgICAgICAgICAgICAgICAgIHotaW5kZXg6IDk5OTk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC50YXNrbGlzdCB7XG4gICAgICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIC4ycyBlYXNlO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAzMHB4IDA7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tkcm9wLWZpbHRlcjogYmx1cig4cHgpO1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsLjgpO1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAudGFzayB7XG4gICAgICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMjAwcHg7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnRhc2sgaDIge1xuICAgICAgICAgICAgICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDkwJTtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogNXB4IDUlO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQ6IDEzcHggJ09wZW4gU2Fucyc7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC50YXNrIGgzIHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiA5MCU7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDVweCA1JTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgICAgICAgICBmb250OiAxMnB4ICdSb2JvdG8nO1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAuODtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLm1haW5kaXYgdGV4dGFyZWEge1xuICAgICAgICAgICAgICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAxMHB4IDIuNSU7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHggMi41JTtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDkwJTtcbiAgICAgICAgICAgICAgICAgICAgZm9udDogMThweCAnUm9ib3RvJztcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAgICAgICAgICAgICByZXNpemU6IHZlcnRpY2FsO1xuICAgICAgICAgICAgICAgICAgICBtYXgtaGVpZ2h0OiAxNTBweDtcbiAgICAgICAgICAgICAgICAgICAgbWluLWhlaWdodDogMzBweDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNnB4O1xuICAgICAgICAgICAgICAgICAgICBib3gtc2hhZG93OiAwIDAgMnB4IHJnYmEoMjAsMjAsMjAsLjgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAubWFpbmRpdiB7XG4gICAgICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICAgICAgei1pbmRleDogOTk5OTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAyMHB4IDA7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDkwcHg7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tkcm9wLWZpbHRlcjogYmx1cig4cHgpO1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIC45KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLm1haW5kaXYgaDEge1xuICAgICAgICAgICAgICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAxMHB4IDUlO1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICAgICAgICAgICAgICBmb250OiAyMHB4ICdNb250c2VycmF0JztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLm1haW5kaXYgZm9ybSB7XG4gICAgICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogNDAlO1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgLjJzIGVhc2U7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHggNSU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICNib2R5X2JnIHtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgICAgIHotaW5kZXg6IC0yMDtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgICAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSBzY2FsZSgxLjEsMS4xKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLm1haW5kaXYgYnV0dG9uIHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiA5MCU7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHggNSU7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICR7VGhlbWUuY29sb3JzLnJveWFsYmx1ZX07XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAxMHB4IDUlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC9kaXY+XG4gICAgKVxufVxuXG5UYXNrTWFuYWdlci5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyhjdHgpID0+IHtcbiAgICBjb25zdCBjb29raWVzID0gYXdhaXQgbmV4dENvb2tpZShjdHgpXG4gICAgY29uc3QgZ2V0Zmlyc3R0YXNrcyA9IGF3YWl0IGdldFRhc2tzKDUwLCBjb29raWVzLmFjY2Vzc1Rva2VuKVxuICAgIGlmKGdldGZpcnN0dGFza3MgPT0gJ05vdCBBdXRob3JpemVkJykge1xuICAgICAgICBpZiAoY3R4LnJlcykge1xuICAgICAgICAgICAgY3R4LnJlcy53cml0ZUhlYWQoMzAxLCB7XG4gICAgICAgICAgICAgIExvY2F0aW9uOiAnL2xvZ2luJ1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBjdHgucmVzLmVuZCgpO1xuICAgICAgICB9IFxuICAgIH1cbiAgICBnZXRmaXJzdHRhc2tzLnNvcnQoY29tcGFyZSgnc3RhdHVzJykpXG4gICAgcmV0dXJuIHtnZXRGaXJzdExvYWQ6IGdldGZpcnN0dGFza3N9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRhc2tNYW5hZ2VyIl19 */\\n/*@ sourceURL=/Users/williamforte/Canvas/burkedeveloping/pages/backend_host_controller/taskmanager.js */\")));\n}\n\n_s(TaskManager, \"fR7c3fLs3TAg7Wk9Nyxn8nMKDKs=\");\n\n_c2 = TaskManager;\n\nTaskManager.getInitialProps = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(ctx) {\n    var cookies, getfirsttasks;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return nextCookie(ctx);\n\n          case 2:\n            cookies = _context5.sent;\n            _context5.next = 5;\n            return getTasks(50, cookies.accessToken);\n\n          case 5:\n            getfirsttasks = _context5.sent;\n\n            if (getfirsttasks == 'Not Authorized') {\n              if (ctx.res) {\n                ctx.res.writeHead(301, {\n                  Location: '/login'\n                });\n                ctx.res.end();\n              }\n            }\n\n            getfirsttasks.sort(compare('status'));\n            return _context5.abrupt(\"return\", {\n              getFirstLoad: getfirsttasks\n            });\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x8) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nexport default TaskManager;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HamEx\");\n$RefreshReg$(_c2, \"TaskManager\");","map":{"version":3,"sources":["/Users/williamforte/Canvas/burkedeveloping/pages/backend_host_controller/taskmanager.js"],"names":["createTask","getTasks","removeTask","updateTaskStatus","useState","useEffect","Router","nextCookie","Theme","sortingOrder","compare","key","order","a","b","hasOwnProperty","first","toLowerCase","Number","MAX_SAFE_INTEGER","second","result","HamEx","onClick","color","width","height","active","TaskManager","getFirstLoad","objective","status","inputs","setInputs","inprogress","created","done","sortedTasks","setSortedTasks","allTasks","setAllTasks","setStatus","loading","setLoading","lastcat","createNewTask","e","preventDefault","newTask","console","log","updateTasks","sortAllTasks","tasks","inp","cr","dn","map","task","push","length","getalltasks","sort","removeThisTask","task_id","removenewtask","updateThisTask","updatenewtask","isTyping","persist","target","name","value","colors","gunmetal","platinum","royalblue","i","nextStatus","id","toUpperCase","getInitialProps","ctx","cookies","accessToken","getfirsttasks","res","writeHead","Location","end"],"mappings":"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","sourcesContent":["import { createTask, getTasks, removeTask, updateTaskStatus } from '../../services/apiservice'\nimport { useState, useEffect } from 'react'\nimport Router from 'next/router'\nimport nextCookie from 'next-cookies'\nimport Theme from '../../styles/theme'\n\nconst sortingOrder = {\n    'inprogress': 1,\n    'created': 2,\n    'done': 3\n}\n\nexport function compare(key, order = 'asc') {\n    return function (a, b) {\n        if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) \n\t    return 0;\n\t\t\n\tconst first = (a[key].toLowerCase() in sortingOrder) ? sortingOrder[a[key]] : Number.MAX_SAFE_INTEGER;\n\tconst second = (b[key].toLowerCase() in sortingOrder) ? sortingOrder[b[key]] : Number.MAX_SAFE_INTEGER;\n\t\t\n\tlet result = 0;\n\tif (first < second) \n\t    result = -1;\n\telse if (first > second) \n\t    result = 1;\n\treturn (order === 'desc') ? ~result : result\n    };\n}\n\nconst HamEx = ({onClick, color, width, height, active}) => {\n    return (\n        <div onClick={onClick} className='hame'>\n            <div className={`slash ${active == true ? 'one': ''}`}></div>\n            <div className={`slash ${active == true ? 'two': ''}`}></div>\n            <div className={`slash ${active == true ? 'three': ''}`}></div>\n            <style jsx>{`\n                .hame {\n                    float: left;\n                    width: ${width}px;\n                    height: ${height}px;\n                    padding: 10px;\n                    position: relative;\n                    cursor: pointer;\n                }\n                .slash {\n                    float: left;\n                    width: 100%;\n                    height: 8px;\n                    border-radius: 8px;\n                    background: ${color};\n                    margin: 2px 0;\n                    transition: all .4s ease;\n                }\n                .one {\n                    transform: translateY(12px) rotate(45deg);\n                }\n                .two {\n                    opacity: 0;\n                }\n                .three {\n                    transform: translateY(-12px) rotate(-45deg);\n                }\n            `}</style>\n        </div>\n    )\n}\n\nfunction TaskManager({getFirstLoad}) {\n\n    const [inputs, setInputs] = useState({\n        objective: '',\n        status: 'created',\n    })\n    const [sortedTasks, setSortedTasks] = useState({\n        inprogress: [],\n        created: [],\n        done: []\n    })\n    const [allTasks, setAllTasks] = useState(getFirstLoad != null ? getFirstLoad: null)\n    const [status, setStatus] = useState(getFirstLoad != null ? 'succeeded': 'none')\n    const [loading, setLoading] = useState(false)\n    let lastcat = null\n\n    // Create a new Task DEFAULT: status: 'created'\n    const createNewTask = async(e) => {\n        e.preventDefault();\n        const newTask = await createTask(inputs.objective, inputs.status)\n        if(newTask) {\n            console.log(newTask)\n            setInputs({...inputs, objective: ''})\n            updateTasks(e)\n        }\n    }\n\n    const sortAllTasks = (tasks) => {\n        const inp = []\n        const cr = []\n        const dn = []\n        tasks.map((task) => {\n            if(task.status == 'done') dn.push(task)\n            if(task.status == 'created') cr.push(task)\n            if(task.status == 'inprogress') inp.push(task)\n        })\n        setSortedTasks({\n            ...sortedTasks,\n            inprogress: inp,\n            created: cr,\n            done: dn\n        })\n    }\n    useEffect(() => {\n        sortAllTasks(allTasks)\n    }, [sortedTasks.inprogress.length == 0])\n\n    // Updating Tasks with Backend\n    const updateTasks = async(e) => {\n        setStatus('loading')\n        const getalltasks = await getTasks(50, null)\n        if(getalltasks) {\n            console.log(getalltasks)\n            getalltasks.sort(compare('status'))\n            setAllTasks(getalltasks)\n            setStatus('succeeded')\n        }\n    }\n\n    const removeThisTask = async(e, task_id) => {\n        e.preventDefault()\n        const removenewtask = await removeTask(task_id);\n        if(removenewtask) {\n            console.log(removenewtask)\n            updateTasks(e)\n        }\n    }\n\n    const updateThisTask = async(e, task_id, status) => {\n        e.preventDefault()\n        const updatenewtask = await updateTaskStatus(task_id, status);\n        if(updatenewtask) {\n            console.log(updatenewtask)\n            updateTasks(e)\n        }\n    }\n\n    const isTyping = (e) => {\n        e.persist();\n        setInputs({\n            ...inputs,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    return (\n        <div className='maindiv'>\n            <form onSubmit={createNewTask}>\n                <h1>New Task</h1>\n                <textarea \n                    name='objective'\n                    onChange={isTyping}\n                    value={inputs.objective}\n                    placeholder='Objective'\n                    required\n                />\n                <button>Add Task</button>\n            </form>\n            <div className='tasklist'>\n                <h1>My Tasks</h1>\n                {allTasks ? allTasks.map((task, i) => {\n                    let nextStatus = task.status == 'created' ? 'inprogress': 'done';\n                    if(lastcat == task.status) {\n                        return (\n                            <div key={i} className='task'>\n                                <h2>Objective: {task.objective}</h2>\n                                <h3>Status: {task.status}</h3>\n                                <img className='threedots' src='/three_dots.png'/>\n                                <div className='floater'>\n                                    <div onClick={(e) => {\n                                        task.status = nextStatus;\n                                        updateThisTask(e, task.id, nextStatus)\n                                    }} className='update'>Update Status</div>\n                                    <div onClick={(e) => removeThisTask(e, task.id)} className='remove'>Remove Task</div>\n                                </div>\n                            </div>\n                        )\n                    } else {\n                        lastcat = task.status;\n                        return [\n                            <div key={task.status} className='cat'>{task.status.toUpperCase()}</div>,\n                            <div key={i} className='task'>\n                                <h2>Objective: {task.objective}</h2>\n                                <h3>Status: {task.status}</h3>\n                                <img className='threedots' src='/three_dots.png'/>\n                                <div className='floater'>\n                                    <div onClick={(e) => {\n                                        task.status = nextStatus;\n                                        updateThisTask(e, task.id, nextStatus)\n                                    }} className='update'>Update Status</div>\n                                    <div onClick={(e) => removeThisTask(e, task.id)} className='remove'>Remove Task</div>\n                                </div>\n                            </div>\n                        ]\n                    }\n                }): status == 'none' ? <h2>No Tasks yet</h2>: <div className='loading'></div>}\n            </div>\n            \n            <img id='body_bg' src='/bg_login.png'/>\n            <style jsx>{`\n                .cat {\n                    float: left;\n                    width: 90%;\n                    padding: 10px 5%;\n                    color: white;\n                    margin: 20px 0;\n                    font: 12px 'Roboto';\n                    background: ${Theme.colors.gunmetal};\n                }\n                .tasktoggle {\n                    float: left;\n                    width: 100px;\n                    height: 100px;\n                    padding: 10px;\n                }\n                .update {\n                    float: left;\n                    width: 100%;\n                    padding: 8px 0;\n                    text-align: center;\n                    font: 12px 'Open Sans';\n                    opacity: .8;\n                    background: ${Theme.colors.platinum};\n                    transition: opacity .4s ease;\n                    cursor: pointer;\n                }\n                .update:hover {\n                    opacity: 1;\n                    background: white;\n                }\n                .remove {\n                    float: left;\n                    width: 100%;\n                    padding: 8px 0;\n                    text-align: center;\n                    font: 12px 'Open Sans';\n                    opacity: .8;\n                    color: white;\n                    background: rgba(226, 70, 70,.8);\n                    cursor: pointer;\n                }\n                .remove:hover {\n                    opacity: 1;\n                }\n                .threedots {\n                    position: absolute;\n                    top: -5px;\n                    right: -5px;\n                    width: 20px;\n                    height: 20px;\n                    padding: 15px;\n                    cursor: pointer;\n                }\n                .threedots:hover ~ .floater, .floater:hover {\n                    opacity: 1;\n                    transform: translateX(100%) scale(1,1);\n                }\n                .floater {\n                    position: absolute;\n                    right: -10px;\n                    top: -10px;\n                    width: 120px;\n                    transform: translateX(0) scale(0,0);\n                    padding: 0;\n                    opacity: 0;\n                    overflow: hidden;\n                    transition: opacity .2s ease, transform .4s;\n                    backdrop-filter: blur(8px);\n                    background: rgba(255, 255, 255,.8);\n                    box-shadow: 0 0 2px rgba(20,20,20,.6);\n                    z-index: 9999;\n                }\n                .tasklist {\n                    float: left;\n                    width: 100%;\n                    transition: all .2s ease;\n                    padding: 30px 0;\n                    backdrop-filter: blur(8px);\n                    background: rgba(255, 255, 255,.8);\n                    display: flex;\n                    justify-content: center;\n                    flex-wrap: wrap;\n                }\n                .task {\n                    float: left;\n                    width: 200px;\n                    position: relative;\n                    padding: 10px;\n                }\n                .task h2 {\n                    float: left;\n                    width: 90%;\n                    padding: 5px 5%;\n                    margin: 0;\n                    font: 13px 'Open Sans';\n                    margin-top: 10px;\n                }\n                .task h3 {\n                    float: left;\n                    width: 90%;\n                    padding: 5px 5%;\n                    margin: 0;\n                    font: 12px 'Roboto';\n                    opacity: .8;\n                }\n                .maindiv textarea {\n                    float: left;\n                    margin: 10px 2.5%;\n                    padding: 10px 2.5%;\n                    width: 90%;\n                    font: 18px 'Roboto';\n                    border: none;\n                    resize: vertical;\n                    max-height: 150px;\n                    min-height: 30px;\n                    border-radius: 6px;\n                    box-shadow: 0 0 2px rgba(20,20,20,.8);\n                }\n                .maindiv {\n                    float: left;\n                    width: 100%;\n                    z-index: 9999;\n                    margin: 20px 0;\n                    margin-top: 90px;\n                    backdrop-filter: blur(8px);\n                    background: rgba(255, 255, 255, .9);\n                }\n                .maindiv h1 {\n                    float: left;\n                    margin: 10px 5%;\n                    width: 90%;\n                    font: 20px 'Montserrat';\n                }\n                .maindiv form {\n                    float: left;\n                    width: 40%;\n                    transition: all .2s ease;\n                    padding: 10px 5%;\n                }\n                #body_bg {\n                    width: 100%;\n                    z-index: -20;\n                    position: fixed;\n                    top: 50%;\n                    left: 50%;\n                    transform: translate(-50%, -50%) scale(1.1,1.1);\n                }\n                .maindiv button {\n                    float: left;\n                    width: 90%;\n                    padding: 10px 5%;\n                    background: ${Theme.colors.royalblue};\n                    color: white;\n                    cursor: pointer;\n                    border: none;\n                    border-radius: 8px;\n                    margin: 10px 5%;\n                }\n            `}</style>\n        </div>\n    )\n}\n\nTaskManager.getInitialProps = async(ctx) => {\n    const cookies = await nextCookie(ctx)\n    const getfirsttasks = await getTasks(50, cookies.accessToken)\n    if(getfirsttasks == 'Not Authorized') {\n        if (ctx.res) {\n            ctx.res.writeHead(301, {\n              Location: '/login'\n            });\n            ctx.res.end();\n        } \n    }\n    getfirsttasks.sort(compare('status'))\n    return {getFirstLoad: getfirsttasks}\n}\n\nexport default TaskManager"]},"metadata":{},"sourceType":"module"}