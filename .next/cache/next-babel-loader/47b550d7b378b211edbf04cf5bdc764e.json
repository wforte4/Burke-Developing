{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Theme from '../styles/theme';\nimport React, { useState } from 'react';\nimport { isMobile } from 'react-device-detect';\nexport var Span = function Span(_ref) {\n  var padding = _ref.padding,\n      children = _ref.children,\n      background = _ref.background,\n      boxShadow = _ref.boxShadow;\n  return __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"2234106735\", [padding, background, boxShadow]]]) + \" \" + 'span'\n  }, children, __jsx(_JSXStyle, {\n    id: \"2234106735\",\n    dynamic: [padding, background, boxShadow]\n  }, [\".span.__jsx-style-dynamic-selector{float:left;width:100%;padding:\".concat(padding, \"px 0px;background:\").concat(background, \";box-shadow:\").concat(boxShadow, \";}\")]));\n};\nexport var Row = /*#__PURE__*/function (_React$Component) {\n  _inherits(Row, _React$Component);\n\n  var _super = _createSuper(Row);\n\n  function Row() {\n    _classCallCheck(this, Row);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Row, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var colcount = React.Children.count(this.props.children);\n      var newchildren = React.Children.map(this.props.children, function (child) {\n        return /*#__PURE__*/React.cloneElement(child, {\n          width: 100 / colcount,\n          height: _this.props.height\n        });\n      });\n      return __jsx(\"div\", {\n        className: _JSXStyle.dynamic([[\"3248300679\", [this.props.padding ? 100 - this.props.padding * 2 : 100, this.props.padding, this.props.margin, this.props.background, this.props.overflow, this.props.height]]]) + \" \" + 'row'\n      }, newchildren, __jsx(_JSXStyle, {\n        id: \"3248300679\",\n        dynamic: [this.props.padding ? 100 - this.props.padding * 2 : 100, this.props.padding, this.props.margin, this.props.background, this.props.overflow, this.props.height]\n      }, [\".row.__jsx-style-dynamic-selector{float:left;width:\".concat(this.props.padding ? 100 - this.props.padding * 2 : 100, \"%;padding:0 \").concat(this.props.padding, \"%;margin:\").concat(this.props.margin, \";background:\").concat(this.props.background, \";min-height:200px;overflow:\").concat(this.props.overflow, \";height:\").concat(this.props.height, \";}\"), \"@media only screen and (max-width:600px){.row.__jsx-style-dynamic-selector{height:auto;}}\"]));\n    }\n  }]);\n\n  return Row;\n}(React.Component);\nexport var Col = function Col(_ref2) {\n  var padding = _ref2.padding,\n      children = _ref2.children,\n      background = _ref2.background,\n      margin = _ref2.margin,\n      width = _ref2.width,\n      height = _ref2.height;\n  return __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1218997834\", [width, padding, margin, background, height]]]) + \" \" + 'col'\n  }, children, __jsx(_JSXStyle, {\n    id: \"1218997834\",\n    dynamic: [width, padding, margin, background, height]\n  }, [\".col.__jsx-style-dynamic-selector{float:left;position:relative;width:\".concat(width, \"%;padding:\").concat(padding, \";margin:\").concat(margin, \";background:\").concat(background, \";min-height:200px;height:\").concat(height, \";}\"), \"@media only screen and (max-width:600px){.col.__jsx-style-dynamic-selector{width:100%;}}\"]));\n};","map":null,"metadata":{},"sourceType":"module"}