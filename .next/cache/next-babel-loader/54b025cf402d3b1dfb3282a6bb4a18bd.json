{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Cookies } from 'react-cookie';\nvar cookies = new Cookies();\nexport function createProject(_x, _x2, _x3, _x4) {\n  return _createProject.apply(this, arguments);\n}\n\nfunction _createProject() {\n  _createProject = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(title, body, tags, images) {\n    var getCookies, newProject;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            getCookies = cookies.getAll(); // New Login Data request\n\n            _context.next = 3;\n            return fetch('http://localhost:3600/projects', {\n              method: 'POST',\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(getCookies.accessToken)\n              },\n              body: JSON.stringify({\n                \"title\": title,\n                \"body\": body,\n                \"tags\": tags,\n                \"images\": images\n              })\n            }).then(function (response) {\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 3:\n            newProject = _context.sent;\n\n            if (!newProject) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", newProject);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _createProject.apply(this, arguments);\n}\n\nexport function getProjects(_x5, _x6) {\n  return _getProjects.apply(this, arguments);\n}\n\nfunction _getProjects() {\n  _getProjects = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(limit, token) {\n    var getCookies, newTask;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            getCookies = cookies.getAll(); // New Login Data request\n\n            _context2.next = 3;\n            return fetch('http://localhost:3600/tasks', {\n              method: 'GET',\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(getCookies.accessToken ? getCookies.accessToken : token)\n              },\n              query: JSON.stringify({\n                \"limit\": limit\n              })\n            }).then(function (response) {\n              if (response.status == 403) {\n                return 'Not Authorized';\n              }\n\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 3:\n            newTask = _context2.sent;\n\n            if (!newTask) {\n              _context2.next = 6;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", newTask);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getProjects.apply(this, arguments);\n}\n\nexport function removeTask(_x7) {\n  return _removeTask.apply(this, arguments);\n}\n\nfunction _removeTask() {\n  _removeTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(taskId) {\n    var getCookies, newTask;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            getCookies = cookies.getAll(); // New Login Data request\n\n            _context3.next = 3;\n            return fetch(\"http://localhost:3600/tasks/\".concat(taskId), {\n              method: 'DELETE',\n              headers: {\n                \"Authorization\": \"Bearer \".concat(getCookies.accessToken ? getCookies.accessToken : token)\n              }\n            }).then(function (response) {\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 3:\n            newTask = _context3.sent;\n\n            if (!newTask) {\n              _context3.next = 6;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", newTask);\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _removeTask.apply(this, arguments);\n}\n\nexport function updateTaskStatus(_x8, _x9) {\n  return _updateTaskStatus.apply(this, arguments);\n}\n\nfunction _updateTaskStatus() {\n  _updateTaskStatus = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(taskId, newstatus) {\n    var getCookies, newTask;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            getCookies = cookies.getAll(); // New Login Data request\n\n            _context4.next = 3;\n            return fetch(\"http://localhost:3600/tasks/\".concat(taskId), {\n              method: 'PATCH',\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(getCookies.accessToken ? getCookies.accessToken : token)\n              },\n              body: JSON.stringify({\n                \"status\": newstatus\n              })\n            }).then(function (response) {\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 3:\n            newTask = _context4.sent;\n\n            if (!newTask) {\n              _context4.next = 6;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", newTask);\n\n          case 6:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _updateTaskStatus.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/williamforte/Canvas/burkedeveloping/services/projectservice.js"],"names":["Cookies","cookies","createProject","title","body","tags","images","getCookies","getAll","fetch","method","headers","accessToken","JSON","stringify","then","response","json","error","newProject","getProjects","limit","token","query","status","newTask","removeTask","taskId","updateTaskStatus","newstatus"],"mappings":"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","sourcesContent":["import { Cookies } from 'react-cookie';\n\n\nconst cookies = new Cookies();\n\nexport async function createProject(title, body, tags, images) {\n    \n    const getCookies = cookies.getAll()\n    // New Login Data request\n    const newProject = await fetch('http://localhost:3600/projects', {\n        method: 'POST',\n        headers: {\n            \"Content-type\": \"application/json\",\n            \"Authorization\": `Bearer ${getCookies.accessToken}`\n        },\n        body: JSON.stringify({\n            \"title\": title,\n            \"body\": body,\n            \"tags\": tags,\n            \"images\": images\n        })\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newProject) {\n        return newProject\n    }\n}\n\nexport async function getProjects(limit, token) {\n    \n    const getCookies = cookies.getAll()\n    // New Login Data request\n    const newTask = await fetch('http://localhost:3600/tasks', {\n        method: 'GET',\n        headers: {\n            \"Content-type\": \"application/json\",\n            \"Authorization\": `Bearer ${getCookies.accessToken ? getCookies.accessToken: token}`\n        },\n        query: JSON.stringify({\n            \"limit\": limit\n        })\n    })\n    .then(function(response) {\n        if(response.status == 403) {\n            return 'Not Authorized'\n        }\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newTask) {\n        return newTask\n    }\n}\n\nexport async function removeTask(taskId) {\n    \n    const getCookies = cookies.getAll()\n    // New Login Data request\n    const newTask = await fetch(`http://localhost:3600/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n            \"Authorization\": `Bearer ${getCookies.accessToken ? getCookies.accessToken: token}`\n        }\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newTask) {\n        return newTask\n    }\n}\n\nexport async function updateTaskStatus(taskId, newstatus) {\n    \n    const getCookies = cookies.getAll()\n    // New Login Data request\n    const newTask = await fetch(`http://localhost:3600/tasks/${taskId}`, {\n        method: 'PATCH',\n        headers: {\n            \"Content-type\": \"application/json\",\n            \"Authorization\": `Bearer ${getCookies.accessToken ? getCookies.accessToken: token}`\n        },\n        body: JSON.stringify({\n            \"status\": newstatus\n        })\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newTask) {\n        return newTask\n    }\n}"]},"metadata":{},"sourceType":"module"}