{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/williamforte/Canvas/burkedeveloping/pages/backend_host_controller/taskmanager.js\",\n    _s = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createTask, getTasks, removeTask, updateTaskStatus } from '../../services/apiservice';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport nextCookie from 'next-cookies';\nimport Theme from '../../styles/theme';\nvar sortingOrder = {\n  'inprogress': 1,\n  'created': 2,\n  'done': 3\n};\nexport function compare(key) {\n  var order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'asc';\n  return function (a, b) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) return 0;\n    var first = a[key].toLowerCase() in sortingOrder ? sortingOrder[a[key]] : Number.MAX_SAFE_INTEGER;\n    var second = b[key].toLowerCase() in sortingOrder ? sortingOrder[b[key]] : Number.MAX_SAFE_INTEGER;\n    var result = 0;\n    if (first < second) result = -1;else if (first > second) result = 1;\n    return order === 'desc' ? ~result : result;\n  };\n}\n\nvar HamEx = function HamEx(_ref) {\n  var onClick = _ref.onClick,\n      color = _ref.color,\n      width = _ref.width,\n      height = _ref.height,\n      active = _ref.active;\n  return __jsx(\"div\", {\n    onClick: onClick,\n    className: _JSXStyle.dynamic([[\"1318293250\", [width, height, color]]]) + \" \" + 'hame',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1318293250\", [width, height, color]]]) + \" \" + \"slash \".concat(active == true ? 'one' : ''),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1318293250\", [width, height, color]]]) + \" \" + \"slash \".concat(active == true ? 'two' : ''),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1318293250\", [width, height, color]]]) + \" \" + \"slash \".concat(active == true ? 'three' : ''),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"1318293250\",\n    dynamic: [width, height, color],\n    __self: _this\n  }, \".hame.__jsx-style-dynamic-selector{float:left;width:\".concat(width, \"px;height:\").concat(height, \"px;padding:10px;position:relative;cursor:pointer;}.slash.__jsx-style-dynamic-selector{float:left;width:100%;height:8px;border-radius:8px;background:\").concat(color, \";margin:2px 0;-webkit-transition:all .4s ease;transition:all .4s ease;}.one.__jsx-style-dynamic-selector{-webkit-transform:translateY(12px) rotate(45deg);-ms-transform:translateY(12px) rotate(45deg);transform:translateY(12px) rotate(45deg);}.two.__jsx-style-dynamic-selector{opacity:0;}.three.__jsx-style-dynamic-selector{-webkit-transform:translateY(-12px) rotate(-45deg);-ms-transform:translateY(-12px) rotate(-45deg);transform:translateY(-12px) rotate(-45deg);}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy93aWxsaWFtZm9ydGUvQ2FudmFzL2J1cmtlZGV2ZWxvcGluZy9wYWdlcy9iYWNrZW5kX2hvc3RfY29udHJvbGxlci90YXNrbWFuYWdlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtQ3dCLEFBR2dDLEFBUUEsQUFTOEIsQUFHL0IsQUFHaUMsVUFGL0MsQ0FwQnlDLEFBUTFCLFdBQ0EsV0FDTyxlQVRvQixHQVVFLG1DQVQzQixLQVVBLFFBVEssS0FVTSxhQVRULGVBQ25CLEdBWUEsTUFNQSxtQkFUQSIsImZpbGUiOiIvVXNlcnMvd2lsbGlhbWZvcnRlL0NhbnZhcy9idXJrZWRldmVsb3BpbmcvcGFnZXMvYmFja2VuZF9ob3N0X2NvbnRyb2xsZXIvdGFza21hbmFnZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVUYXNrLCBnZXRUYXNrcywgcmVtb3ZlVGFzaywgdXBkYXRlVGFza1N0YXR1cyB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2FwaXNlcnZpY2UnXG5pbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUm91dGVyIGZyb20gJ25leHQvcm91dGVyJ1xuaW1wb3J0IG5leHRDb29raWUgZnJvbSAnbmV4dC1jb29raWVzJ1xuaW1wb3J0IFRoZW1lIGZyb20gJy4uLy4uL3N0eWxlcy90aGVtZSdcblxuY29uc3Qgc29ydGluZ09yZGVyID0ge1xuICAgICdpbnByb2dyZXNzJzogMSxcbiAgICAnY3JlYXRlZCc6IDIsXG4gICAgJ2RvbmUnOiAzXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjb21wYXJlKGtleSwgb3JkZXIgPSAnYXNjJykge1xuICAgIHJldHVybiBmdW5jdGlvbiAoYSwgYikge1xuICAgICAgICBpZiAoIWEuaGFzT3duUHJvcGVydHkoa2V5KSB8fCAhYi5oYXNPd25Qcm9wZXJ0eShrZXkpKSBcblx0ICAgIHJldHVybiAwO1xuXHRcdFxuXHRjb25zdCBmaXJzdCA9IChhW2tleV0udG9Mb3dlckNhc2UoKSBpbiBzb3J0aW5nT3JkZXIpID8gc29ydGluZ09yZGVyW2Fba2V5XV0gOiBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUjtcblx0Y29uc3Qgc2Vjb25kID0gKGJba2V5XS50b0xvd2VyQ2FzZSgpIGluIHNvcnRpbmdPcmRlcikgPyBzb3J0aW5nT3JkZXJbYltrZXldXSA6IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSO1xuXHRcdFxuXHRsZXQgcmVzdWx0ID0gMDtcblx0aWYgKGZpcnN0IDwgc2Vjb25kKSBcblx0ICAgIHJlc3VsdCA9IC0xO1xuXHRlbHNlIGlmIChmaXJzdCA+IHNlY29uZCkgXG5cdCAgICByZXN1bHQgPSAxO1xuXHRyZXR1cm4gKG9yZGVyID09PSAnZGVzYycpID8gfnJlc3VsdCA6IHJlc3VsdFxuICAgIH07XG59XG5cbmNvbnN0IEhhbUV4ID0gKHtvbkNsaWNrLCBjb2xvciwgd2lkdGgsIGhlaWdodCwgYWN0aXZlfSkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgb25DbGljaz17b25DbGlja30gY2xhc3NOYW1lPSdoYW1lJz5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgc2xhc2ggJHthY3RpdmUgPT0gdHJ1ZSA/ICdvbmUnOiAnJ31gfT48L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgc2xhc2ggJHthY3RpdmUgPT0gdHJ1ZSA/ICd0d28nOiAnJ31gfT48L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgc2xhc2ggJHthY3RpdmUgPT0gdHJ1ZSA/ICd0aHJlZSc6ICcnfWB9PjwvZGl2PlxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgICAgIC5oYW1lIHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAke3dpZHRofXB4O1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICR7aGVpZ2h0fXB4O1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnNsYXNoIHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDhweDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAke2NvbG9yfTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAycHggMDtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIC40cyBlYXNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAub25lIHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEycHgpIHJvdGF0ZSg0NWRlZyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC50d28ge1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAudGhyZWUge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEycHgpIHJvdGF0ZSgtNDVkZWcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC9kaXY+XG4gICAgKVxufVxuXG5mdW5jdGlvbiBUYXNrTWFuYWdlcih7Z2V0Rmlyc3RMb2FkfSkge1xuXG4gICAgY29uc3QgW2lucHV0cywgc2V0SW5wdXRzXSA9IHVzZVN0YXRlKHtcbiAgICAgICAgb2JqZWN0aXZlOiAnJyxcbiAgICAgICAgc3RhdHVzOiAnY3JlYXRlZCcsXG4gICAgfSlcbiAgICBjb25zdCBbYWxsVGFza3MsIHNldEFsbFRhc2tzXSA9IHVzZVN0YXRlKGdldEZpcnN0TG9hZCAhPSBudWxsID8gZ2V0Rmlyc3RMb2FkOiBudWxsKVxuICAgIGNvbnN0IFtzdGF0dXMsIHNldFN0YXR1c10gPSB1c2VTdGF0ZShnZXRGaXJzdExvYWQgIT0gbnVsbCA/ICdzdWNjZWVkZWQnOiAnbm9uZScpXG4gICAgbGV0IGxhc3RjYXQgPSBudWxsXG5cbiAgICAvLyBDcmVhdGUgYSBuZXcgVGFzayBERUZBVUxUOiBzdGF0dXM6ICdjcmVhdGVkJ1xuICAgIGNvbnN0IGNyZWF0ZU5ld1Rhc2sgPSBhc3luYyhlKSA9PiB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgY29uc3QgbmV3VGFzayA9IGF3YWl0IGNyZWF0ZVRhc2soaW5wdXRzLm9iamVjdGl2ZSwgaW5wdXRzLnN0YXR1cylcbiAgICAgICAgaWYobmV3VGFzaykge1xuICAgICAgICAgICAgY29uc29sZS5sb2cobmV3VGFzaylcbiAgICAgICAgICAgIHNldElucHV0cyh7Li4uaW5wdXRzLCBvYmplY3RpdmU6ICcnfSlcbiAgICAgICAgICAgIHVwZGF0ZVRhc2tzKGUpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBVcGRhdGluZyBUYXNrcyB3aXRoIEJhY2tlbmRcbiAgICBjb25zdCB1cGRhdGVUYXNrcyA9IGFzeW5jKGUpID0+IHtcbiAgICAgICAgc2V0U3RhdHVzKCdsb2FkaW5nJylcbiAgICAgICAgY29uc3QgZ2V0YWxsdGFza3MgPSBhd2FpdCBnZXRUYXNrcyg1MCwgbnVsbClcbiAgICAgICAgaWYoZ2V0YWxsdGFza3MpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGdldGFsbHRhc2tzKVxuICAgICAgICAgICAgZ2V0YWxsdGFza3Muc29ydChjb21wYXJlKCdzdGF0dXMnKSlcbiAgICAgICAgICAgIHNldEFsbFRhc2tzKGdldGFsbHRhc2tzKVxuICAgICAgICAgICAgc2V0U3RhdHVzKCdzdWNjZWVkZWQnKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgcmVtb3ZlVGhpc1Rhc2sgPSBhc3luYyhlLCB0YXNrX2lkKSA9PiB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgICBjb25zdCByZW1vdmVuZXd0YXNrID0gYXdhaXQgcmVtb3ZlVGFzayh0YXNrX2lkKTtcbiAgICAgICAgaWYocmVtb3ZlbmV3dGFzaykge1xuICAgICAgICAgICAgY29uc29sZS5sb2cocmVtb3ZlbmV3dGFzaylcbiAgICAgICAgICAgIHVwZGF0ZVRhc2tzKGUpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCB1cGRhdGVUaGlzVGFzayA9IGFzeW5jKGUsIHRhc2tfaWQsIHN0YXR1cykgPT4ge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgY29uc3QgdXBkYXRlbmV3dGFzayA9IGF3YWl0IHVwZGF0ZVRhc2tTdGF0dXModGFza19pZCwgc3RhdHVzKTtcbiAgICAgICAgaWYodXBkYXRlbmV3dGFzaykge1xuICAgICAgICAgICAgY29uc29sZS5sb2codXBkYXRlbmV3dGFzaylcbiAgICAgICAgICAgIHVwZGF0ZVRhc2tzKGUpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBpc1R5cGluZyA9IChlKSA9PiB7XG4gICAgICAgIGUucGVyc2lzdCgpO1xuICAgICAgICBzZXRJbnB1dHMoe1xuICAgICAgICAgICAgLi4uaW5wdXRzLFxuICAgICAgICAgICAgW2UudGFyZ2V0Lm5hbWVdOiBlLnRhcmdldC52YWx1ZVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdtYWluZGl2Jz5cbiAgICAgICAgICAgIDxmb3JtIG9uU3VibWl0PXtjcmVhdGVOZXdUYXNrfT5cbiAgICAgICAgICAgICAgICA8aDE+TmV3IFRhc2s8L2gxPlxuICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBcbiAgICAgICAgICAgICAgICAgICAgbmFtZT0nb2JqZWN0aXZlJ1xuICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17aXNUeXBpbmd9XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlPXtpbnB1dHMub2JqZWN0aXZlfVxuICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0nT2JqZWN0aXZlJ1xuICAgICAgICAgICAgICAgICAgICByZXF1aXJlZFxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPGJ1dHRvbj5BZGQgVGFzazwvYnV0dG9uPlxuICAgICAgICAgICAgPC9mb3JtPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3Rhc2tsaXN0Jz5cbiAgICAgICAgICAgICAgICA8aDE+TXkgVGFza3M8L2gxPlxuICAgICAgICAgICAgICAgIHthbGxUYXNrcyA/IGFsbFRhc2tzLm1hcCgodGFzaywgaSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBsZXQgbmV4dFN0YXR1cyA9IHRhc2suc3RhdHVzID09ICdjcmVhdGVkJyA/ICdpbnByb2dyZXNzJzogJ2RvbmUnO1xuICAgICAgICAgICAgICAgICAgICBpZihsYXN0Y2F0ID09IHRhc2suc3RhdHVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYga2V5PXtpfSBjbGFzc05hbWU9J3Rhc2snPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDI+T2JqZWN0aXZlOiB7dGFzay5vYmplY3RpdmV9PC9oMj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzPlN0YXR1czoge3Rhc2suc3RhdHVzfTwvaDM+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3NOYW1lPSd0aHJlZWRvdHMnIHNyYz0nL3RocmVlX2RvdHMucG5nJy8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdmbG9hdGVyJz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgb25DbGljaz17KGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXNrLnN0YXR1cyA9IG5leHRTdGF0dXM7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlVGhpc1Rhc2soZSwgdGFzay5pZCwgbmV4dFN0YXR1cylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19IGNsYXNzTmFtZT0ndXBkYXRlJz5VcGRhdGUgU3RhdHVzPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IG9uQ2xpY2s9eyhlKSA9PiByZW1vdmVUaGlzVGFzayhlLCB0YXNrLmlkKX0gY2xhc3NOYW1lPSdyZW1vdmUnPlJlbW92ZSBUYXNrPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGFzdGNhdCA9IHRhc2suc3RhdHVzO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGtleT17dGFzay5zdGF0dXN9IGNsYXNzTmFtZT0nY2F0Jz57dGFzay5zdGF0dXMudG9VcHBlckNhc2UoKX08L2Rpdj4sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBrZXk9e2l9IGNsYXNzTmFtZT0ndGFzayc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMj5PYmplY3RpdmU6IHt0YXNrLm9iamVjdGl2ZX08L2gyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDM+U3RhdHVzOiB7dGFzay5zdGF0dXN9PC9oMz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzc05hbWU9J3RocmVlZG90cycgc3JjPScvdGhyZWVfZG90cy5wbmcnLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2Zsb2F0ZXInPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBvbkNsaWNrPXsoZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhc2suc3RhdHVzID0gbmV4dFN0YXR1cztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVUaGlzVGFzayhlLCB0YXNrLmlkLCBuZXh0U3RhdHVzKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0gY2xhc3NOYW1lPSd1cGRhdGUnPlVwZGF0ZSBTdGF0dXM8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgb25DbGljaz17KGUpID0+IHJlbW92ZVRoaXNUYXNrKGUsIHRhc2suaWQpfSBjbGFzc05hbWU9J3JlbW92ZSc+UmVtb3ZlIFRhc2s8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTogc3RhdHVzID09ICdub25lJyA/IDxoMj5ObyBUYXNrcyB5ZXQ8L2gyPjogPGRpdiBjbGFzc05hbWU9J2xvYWRpbmcnPjwvZGl2Pn1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgXG4gICAgICAgICAgICA8aW1nIGlkPSdib2R5X2JnJyBzcmM9Jy9iZ19sb2dpbi5wbmcnLz5cbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAgICAgICAuY2F0IHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiA5MCU7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHggNSU7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAyMHB4IDA7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQ6IDEycHggJ1JvYm90byc7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICR7VGhlbWUuY29sb3JzLmd1bm1ldGFsfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnRhc2t0b2dnbGUge1xuICAgICAgICAgICAgICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMHB4O1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHB4O1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAudXBkYXRlIHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiA4cHggMDtcbiAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgICAgICAgICBmb250OiAxMnB4ICdPcGVuIFNhbnMnO1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAuODtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJHtUaGVtZS5jb2xvcnMucGxhdGludW19O1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC40cyBlYXNlO1xuICAgICAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC51cGRhdGU6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnJlbW92ZSB7XG4gICAgICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogOHB4IDA7XG4gICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgICAgICAgICAgZm9udDogMTJweCAnT3BlbiBTYW5zJztcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogLjg7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyMjYsIDcwLCA3MCwuOCk7XG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnJlbW92ZTpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC50aHJlZWRvdHMge1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgICAgIHRvcDogLTVweDtcbiAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IC01cHg7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAyMHB4O1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDIwcHg7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnRocmVlZG90czpob3ZlciB+IC5mbG9hdGVyLCAuZmxvYXRlcjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKSBzY2FsZSgxLDEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAuZmxvYXRlciB7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IC0xMHB4O1xuICAgICAgICAgICAgICAgICAgICB0b3A6IC0xMHB4O1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTIwcHg7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKSBzY2FsZSgwLDApO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4ycyBlYXNlLCB0cmFuc2Zvcm0gLjRzO1xuICAgICAgICAgICAgICAgICAgICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoOHB4KTtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LC44KTtcbiAgICAgICAgICAgICAgICAgICAgYm94LXNoYWRvdzogMCAwIDJweCByZ2JhKDIwLDIwLDIwLC42KTtcbiAgICAgICAgICAgICAgICAgICAgei1pbmRleDogOTk5OTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnRhc2tsaXN0IHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgLjJzIGVhc2U7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDMwcHggMDtcbiAgICAgICAgICAgICAgICAgICAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDhweCk7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwuOCk7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgICAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC50YXNrIHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAyMDBweDtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAudGFzayBoMiB7XG4gICAgICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiA1cHggNSU7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgICAgICAgICAgZm9udDogMTNweCAnT3BlbiBTYW5zJztcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnRhc2sgaDMge1xuICAgICAgICAgICAgICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDkwJTtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogNXB4IDUlO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQ6IDEycHggJ1JvYm90byc7XG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IC44O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAubWFpbmRpdiB0ZXh0YXJlYSB7XG4gICAgICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDEwcHggMi41JTtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTBweCAyLjUlO1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICAgICAgICAgICAgICBmb250OiAxOHB4ICdSb2JvdG8nO1xuICAgICAgICAgICAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgICAgICAgICAgIHJlc2l6ZTogdmVydGljYWw7XG4gICAgICAgICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDE1MHB4O1xuICAgICAgICAgICAgICAgICAgICBtaW4taGVpZ2h0OiAzMHB4O1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA2cHg7XG4gICAgICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6IDAgMCAycHggcmdiYSgyMCwyMCwyMCwuOCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC5tYWluZGl2IHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICB6LWluZGV4OiA5OTk5O1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDIwcHggMDtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogOTBweDtcbiAgICAgICAgICAgICAgICAgICAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDhweCk7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgLjkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAubWFpbmRpdiBoMSB7XG4gICAgICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDEwcHggNSU7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiA5MCU7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQ6IDIwcHggJ01vbnRzZXJyYXQnO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAubWFpbmRpdiBmb3JtIHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiA0MCU7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAuMnMgZWFzZTtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTBweCA1JTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgI2JvZHlfYmcge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICAgICAgei1pbmRleDogLTIwO1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgICAgICAgIHRvcDogNTAlO1xuICAgICAgICAgICAgICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHNjYWxlKDEuMSwxLjEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAubWFpbmRpdiBidXR0b24ge1xuICAgICAgICAgICAgICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDkwJTtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTBweCA1JTtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJHtUaGVtZS5jb2xvcnMucm95YWxibHVlfTtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDEwcHggNSU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYH08L3N0eWxlPlxuICAgICAgICA8L2Rpdj5cbiAgICApXG59XG5cblRhc2tNYW5hZ2VyLmdldEluaXRpYWxQcm9wcyA9IGFzeW5jKGN0eCkgPT4ge1xuICAgIGNvbnN0IGNvb2tpZXMgPSBhd2FpdCBuZXh0Q29va2llKGN0eClcbiAgICBjb25zdCBnZXRmaXJzdHRhc2tzID0gYXdhaXQgZ2V0VGFza3MoNTAsIGNvb2tpZXMuYWNjZXNzVG9rZW4pXG4gICAgaWYoZ2V0Zmlyc3R0YXNrcyA9PSAnTm90IEF1dGhvcml6ZWQnKSB7XG4gICAgICAgIGlmIChjdHgucmVzKSB7XG4gICAgICAgICAgICBjdHgucmVzLndyaXRlSGVhZCgzMDEsIHtcbiAgICAgICAgICAgICAgTG9jYXRpb246ICcvbG9naW4nXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGN0eC5yZXMuZW5kKCk7XG4gICAgICAgIH0gXG4gICAgfVxuICAgIGdldGZpcnN0dGFza3Muc29ydChjb21wYXJlKCdzdGF0dXMnKSlcbiAgICByZXR1cm4ge2dldEZpcnN0TG9hZDogZ2V0Zmlyc3R0YXNrc31cbn1cblxuZXhwb3J0IGRlZmF1bHQgVGFza01hbmFnZXIiXX0= */\\n/*@ sourceURL=/Users/williamforte/Canvas/burkedeveloping/pages/backend_host_controller/taskmanager.js */\")));\n};\n\n_c = HamEx;\n\nfunction TaskManager(_ref2) {\n  _s();\n\n  var _this2 = this;\n\n  var getFirstLoad = _ref2.getFirstLoad;\n\n  var _useState = useState({\n    objective: '',\n    status: 'created'\n  }),\n      inputs = _useState[0],\n      setInputs = _useState[1];\n\n  var _useState2 = useState(getFirstLoad != null ? getFirstLoad : null),\n      allTasks = _useState2[0],\n      setAllTasks = _useState2[1];\n\n  var _useState3 = useState(getFirstLoad != null ? 'succeeded' : 'none'),\n      status = _useState3[0],\n      setStatus = _useState3[1];\n\n  var lastcat = null; // Create a new Task DEFAULT: status: 'created'\n\n  var createNewTask = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var newTask;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return createTask(inputs.objective, inputs.status);\n\n            case 3:\n              newTask = _context.sent;\n\n              if (newTask) {\n                console.log(newTask);\n                setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n                  objective: ''\n                }));\n                updateTasks(e);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function createNewTask(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // Updating Tasks with Backend\n\n\n  var updateTasks = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var getalltasks;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setStatus('loading');\n              _context2.next = 3;\n              return getTasks(50, null);\n\n            case 3:\n              getalltasks = _context2.sent;\n\n              if (getalltasks) {\n                console.log(getalltasks);\n                getalltasks.sort(compare('status'));\n                setAllTasks(getalltasks);\n                setStatus('succeeded');\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function updateTasks(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var removeThisTask = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e, task_id) {\n      var removenewtask;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              e.preventDefault();\n              _context3.next = 3;\n              return removeTask(task_id);\n\n            case 3:\n              removenewtask = _context3.sent;\n\n              if (removenewtask) {\n                console.log(removenewtask);\n                updateTasks(e);\n              }\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function removeThisTask(_x3, _x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var updateThisTask = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(e, task_id, status) {\n      var updatenewtask;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              e.preventDefault();\n              _context4.next = 3;\n              return updateTaskStatus(task_id, status);\n\n            case 3:\n              updatenewtask = _context4.sent;\n\n              if (updatenewtask) {\n                console.log(updatenewtask);\n                updateTasks(e);\n              }\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function updateThisTask(_x5, _x6, _x7) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var isTyping = function isTyping(e) {\n    e.persist();\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  return __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'maindiv',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    onSubmit: createNewTask,\n    className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, \"New Task\"), __jsx(\"textarea\", {\n    name: \"objective\",\n    onChange: isTyping,\n    value: inputs.objective,\n    placeholder: \"Objective\",\n    required: true,\n    className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"Add Task\")), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'tasklist',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, \"My Tasks\"), allTasks ? allTasks.map(function (task, i) {\n    var nextStatus = task.status == 'created' ? 'inprogress' : 'done';\n\n    if (lastcat == task.status) {\n      return __jsx(\"div\", {\n        key: i,\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'task',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 29\n        }\n      }, __jsx(\"h2\", {\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]),\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 33\n        }\n      }, \"Objective: \", task.objective), __jsx(\"h3\", {\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]),\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 33\n        }\n      }, \"Status: \", task.status), __jsx(\"img\", {\n        src: \"/three_dots.png\",\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'threedots',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 33\n        }\n      }), __jsx(\"div\", {\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'floater',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 33\n        }\n      }, __jsx(\"div\", {\n        onClick: function onClick(e) {\n          task.status = nextStatus;\n          updateThisTask(e, task.id, nextStatus);\n        },\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'update',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 37\n        }\n      }, \"Update Status\"), __jsx(\"div\", {\n        onClick: function onClick(e) {\n          return removeThisTask(e, task.id);\n        },\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'remove',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 37\n        }\n      }, \"Remove Task\")));\n    } else {\n      lastcat = task.status;\n      return [__jsx(\"div\", {\n        key: task.status,\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'cat',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 29\n        }\n      }, task.status.toUpperCase()), __jsx(\"div\", {\n        key: i,\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'task',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 29\n        }\n      }, __jsx(\"h2\", {\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]),\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 33\n        }\n      }, \"Objective: \", task.objective), __jsx(\"h3\", {\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]),\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 33\n        }\n      }, \"Status: \", task.status), __jsx(\"img\", {\n        src: \"/three_dots.png\",\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'threedots',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 33\n        }\n      }), __jsx(\"div\", {\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'floater',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 33\n        }\n      }, __jsx(\"div\", {\n        onClick: function onClick(e) {\n          task.status = nextStatus;\n          updateThisTask(e, task.id, nextStatus);\n        },\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'update',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 37\n        }\n      }, \"Update Status\"), __jsx(\"div\", {\n        onClick: function onClick(e) {\n          return removeThisTask(e, task.id);\n        },\n        className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'remove',\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 37\n        }\n      }, \"Remove Task\")))];\n    }\n  }) : status == 'none' ? __jsx(\"h2\", {\n    className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 40\n    }\n  }, \"No Tasks yet\") : __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]) + \" \" + 'loading',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 63\n    }\n  })), __jsx(\"img\", {\n    id: \"body_bg\",\n    src: \"/bg_login.png\",\n    className: _JSXStyle.dynamic([[\"3893520589\", [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue]]]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"3893520589\",\n    dynamic: [Theme.colors.gunmetal, Theme.colors.platinum, Theme.colors.royalblue],\n    __self: this\n  }, \".cat.__jsx-style-dynamic-selector{float:left;width:90%;padding:10px 5%;color:white;margin:20px 0;font:12px 'Roboto';background:\".concat(Theme.colors.gunmetal, \";}.tasktoggle.__jsx-style-dynamic-selector{float:left;width:100px;height:100px;padding:10px;}.update.__jsx-style-dynamic-selector{float:left;width:100%;padding:8px 0;text-align:center;font:12px 'Open Sans';opacity:.8;background:\").concat(Theme.colors.platinum, \";-webkit-transition:opacity .4s ease;transition:opacity .4s ease;cursor:pointer;}.update.__jsx-style-dynamic-selector:hover{opacity:1;background:white;}.remove.__jsx-style-dynamic-selector{float:left;width:100%;padding:8px 0;text-align:center;font:12px 'Open Sans';opacity:.8;color:white;background:rgba(226,70,70,.8);cursor:pointer;}.remove.__jsx-style-dynamic-selector:hover{opacity:1;}.threedots.__jsx-style-dynamic-selector{position:absolute;top:-5px;right:-5px;width:20px;height:20px;padding:15px;cursor:pointer;}.threedots.__jsx-style-dynamic-selector:hover~.floater.__jsx-style-dynamic-selector,.floater.__jsx-style-dynamic-selector:hover{opacity:1;-webkit-transform:translateX(100%) scale(1,1);-ms-transform:translateX(100%) scale(1,1);transform:translateX(100%) scale(1,1);}.floater.__jsx-style-dynamic-selector{position:absolute;right:-10px;top:-10px;width:120px;-webkit-transform:translateX(0) scale(0,0);-ms-transform:translateX(0) scale(0,0);transform:translateX(0) scale(0,0);padding:0;opacity:0;overflow:hidden;-webkit-transition:opacity .2s ease,-webkit-transform .4s;-webkit-transition:opacity .2s ease,transform .4s;transition:opacity .2s ease,transform .4s;-webkit-backdrop-filter:blur(8px);backdrop-filter:blur(8px);background:rgba(255,255,255,.8);box-shadow:0 0 2px rgba(20,20,20,.6);z-index:9999;}.tasklist.__jsx-style-dynamic-selector{float:left;width:100%;-webkit-transition:all .2s ease;transition:all .2s ease;padding:30px 0;-webkit-backdrop-filter:blur(8px);backdrop-filter:blur(8px);background:rgba(255,255,255,.8);display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;}.task.__jsx-style-dynamic-selector{float:left;width:200px;position:relative;padding:10px;}.task.__jsx-style-dynamic-selector h2.__jsx-style-dynamic-selector{float:left;width:90%;padding:5px 5%;margin:0;font:13px 'Open Sans';margin-top:10px;}.task.__jsx-style-dynamic-selector h3.__jsx-style-dynamic-selector{float:left;width:90%;padding:5px 5%;margin:0;font:12px 'Roboto';opacity:.8;}.maindiv.__jsx-style-dynamic-selector textarea.__jsx-style-dynamic-selector{float:left;margin:10px 2.5%;padding:10px 2.5%;width:90%;font:18px 'Roboto';border:none;resize:vertical;max-height:150px;min-height:30px;border-radius:6px;box-shadow:0 0 2px rgba(20,20,20,.8);}.maindiv.__jsx-style-dynamic-selector{float:left;width:100%;z-index:9999;margin:20px 0;margin-top:90px;-webkit-backdrop-filter:blur(8px);backdrop-filter:blur(8px);background:rgba(255,255,255,.9);}.maindiv.__jsx-style-dynamic-selector h1.__jsx-style-dynamic-selector{float:left;margin:10px 5%;width:90%;font:20px 'Montserrat';}.maindiv.__jsx-style-dynamic-selector form.__jsx-style-dynamic-selector{float:left;width:40%;-webkit-transition:all .2s ease;transition:all .2s ease;padding:10px 5%;}#body_bg.__jsx-style-dynamic-selector{width:100%;z-index:-20;position:fixed;top:50%;left:50%;-webkit-transform:translate(-50%,-50%) scale(1.1,1.1);-ms-transform:translate(-50%,-50%) scale(1.1,1.1);transform:translate(-50%,-50%) scale(1.1,1.1);}.maindiv.__jsx-style-dynamic-selector button.__jsx-style-dynamic-selector{float:left;width:90%;padding:10px 5%;background:\").concat(Theme.colors.royalblue, \";color:white;cursor:pointer;border:none;border-radius:8px;margin:10px 5%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/williamforte/Canvas/burkedeveloping/pages/backend_host_controller/taskmanager.js */\")));\n}\n\n_s(TaskManager, \"2ziEF0kWb7T45djIxBUARwQoZ2c=\");\n\n_c2 = TaskManager;\n\nTaskManager.getInitialProps = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(ctx) {\n    var cookies, getfirsttasks;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return nextCookie(ctx);\n\n          case 2:\n            cookies = _context5.sent;\n            _context5.next = 5;\n            return getTasks(50, cookies.accessToken);\n\n          case 5:\n            getfirsttasks = _context5.sent;\n\n            if (getfirsttasks == 'Not Authorized') {\n              if (ctx.res) {\n                ctx.res.writeHead(301, {\n                  Location: '/login'\n                });\n                ctx.res.end();\n              }\n            }\n\n            getfirsttasks.sort(compare('status'));\n            return _context5.abrupt(\"return\", {\n              getFirstLoad: getfirsttasks\n            });\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x8) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nexport default TaskManager;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HamEx\");\n$RefreshReg$(_c2, \"TaskManager\");","map":{"version":3,"sources":["/Users/williamforte/Canvas/burkedeveloping/pages/backend_host_controller/taskmanager.js"],"names":["createTask","getTasks","removeTask","updateTaskStatus","useState","useEffect","Router","nextCookie","Theme","sortingOrder","compare","key","order","a","b","hasOwnProperty","first","toLowerCase","Number","MAX_SAFE_INTEGER","second","result","HamEx","onClick","color","width","height","active","TaskManager","getFirstLoad","objective","status","inputs","setInputs","allTasks","setAllTasks","setStatus","lastcat","createNewTask","e","preventDefault","newTask","console","log","updateTasks","getalltasks","sort","removeThisTask","task_id","removenewtask","updateThisTask","updatenewtask","isTyping","persist","target","name","value","colors","gunmetal","platinum","royalblue","map","task","i","nextStatus","id","toUpperCase","getInitialProps","ctx","cookies","accessToken","getfirsttasks","res","writeHead","Location","end"],"mappings":"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","sourcesContent":["import { createTask, getTasks, removeTask, updateTaskStatus } from '../../services/apiservice'\nimport { useState, useEffect } from 'react'\nimport Router from 'next/router'\nimport nextCookie from 'next-cookies'\nimport Theme from '../../styles/theme'\n\nconst sortingOrder = {\n    'inprogress': 1,\n    'created': 2,\n    'done': 3\n}\n\nexport function compare(key, order = 'asc') {\n    return function (a, b) {\n        if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) \n\t    return 0;\n\t\t\n\tconst first = (a[key].toLowerCase() in sortingOrder) ? sortingOrder[a[key]] : Number.MAX_SAFE_INTEGER;\n\tconst second = (b[key].toLowerCase() in sortingOrder) ? sortingOrder[b[key]] : Number.MAX_SAFE_INTEGER;\n\t\t\n\tlet result = 0;\n\tif (first < second) \n\t    result = -1;\n\telse if (first > second) \n\t    result = 1;\n\treturn (order === 'desc') ? ~result : result\n    };\n}\n\nconst HamEx = ({onClick, color, width, height, active}) => {\n    return (\n        <div onClick={onClick} className='hame'>\n            <div className={`slash ${active == true ? 'one': ''}`}></div>\n            <div className={`slash ${active == true ? 'two': ''}`}></div>\n            <div className={`slash ${active == true ? 'three': ''}`}></div>\n            <style jsx>{`\n                .hame {\n                    float: left;\n                    width: ${width}px;\n                    height: ${height}px;\n                    padding: 10px;\n                    position: relative;\n                    cursor: pointer;\n                }\n                .slash {\n                    float: left;\n                    width: 100%;\n                    height: 8px;\n                    border-radius: 8px;\n                    background: ${color};\n                    margin: 2px 0;\n                    transition: all .4s ease;\n                }\n                .one {\n                    transform: translateY(12px) rotate(45deg);\n                }\n                .two {\n                    opacity: 0;\n                }\n                .three {\n                    transform: translateY(-12px) rotate(-45deg);\n                }\n            `}</style>\n        </div>\n    )\n}\n\nfunction TaskManager({getFirstLoad}) {\n\n    const [inputs, setInputs] = useState({\n        objective: '',\n        status: 'created',\n    })\n    const [allTasks, setAllTasks] = useState(getFirstLoad != null ? getFirstLoad: null)\n    const [status, setStatus] = useState(getFirstLoad != null ? 'succeeded': 'none')\n    let lastcat = null\n\n    // Create a new Task DEFAULT: status: 'created'\n    const createNewTask = async(e) => {\n        e.preventDefault();\n        const newTask = await createTask(inputs.objective, inputs.status)\n        if(newTask) {\n            console.log(newTask)\n            setInputs({...inputs, objective: ''})\n            updateTasks(e)\n        }\n    }\n\n    // Updating Tasks with Backend\n    const updateTasks = async(e) => {\n        setStatus('loading')\n        const getalltasks = await getTasks(50, null)\n        if(getalltasks) {\n            console.log(getalltasks)\n            getalltasks.sort(compare('status'))\n            setAllTasks(getalltasks)\n            setStatus('succeeded')\n        }\n    }\n\n    const removeThisTask = async(e, task_id) => {\n        e.preventDefault()\n        const removenewtask = await removeTask(task_id);\n        if(removenewtask) {\n            console.log(removenewtask)\n            updateTasks(e)\n        }\n    }\n\n    const updateThisTask = async(e, task_id, status) => {\n        e.preventDefault()\n        const updatenewtask = await updateTaskStatus(task_id, status);\n        if(updatenewtask) {\n            console.log(updatenewtask)\n            updateTasks(e)\n        }\n    }\n\n    const isTyping = (e) => {\n        e.persist();\n        setInputs({\n            ...inputs,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    return (\n        <div className='maindiv'>\n            <form onSubmit={createNewTask}>\n                <h1>New Task</h1>\n                <textarea \n                    name='objective'\n                    onChange={isTyping}\n                    value={inputs.objective}\n                    placeholder='Objective'\n                    required\n                />\n                <button>Add Task</button>\n            </form>\n            <div className='tasklist'>\n                <h1>My Tasks</h1>\n                {allTasks ? allTasks.map((task, i) => {\n                    let nextStatus = task.status == 'created' ? 'inprogress': 'done';\n                    if(lastcat == task.status) {\n                        return (\n                            <div key={i} className='task'>\n                                <h2>Objective: {task.objective}</h2>\n                                <h3>Status: {task.status}</h3>\n                                <img className='threedots' src='/three_dots.png'/>\n                                <div className='floater'>\n                                    <div onClick={(e) => {\n                                        task.status = nextStatus;\n                                        updateThisTask(e, task.id, nextStatus)\n                                    }} className='update'>Update Status</div>\n                                    <div onClick={(e) => removeThisTask(e, task.id)} className='remove'>Remove Task</div>\n                                </div>\n                            </div>\n                        )\n                    } else {\n                        lastcat = task.status;\n                        return [\n                            <div key={task.status} className='cat'>{task.status.toUpperCase()}</div>,\n                            <div key={i} className='task'>\n                                <h2>Objective: {task.objective}</h2>\n                                <h3>Status: {task.status}</h3>\n                                <img className='threedots' src='/three_dots.png'/>\n                                <div className='floater'>\n                                    <div onClick={(e) => {\n                                        task.status = nextStatus;\n                                        updateThisTask(e, task.id, nextStatus)\n                                    }} className='update'>Update Status</div>\n                                    <div onClick={(e) => removeThisTask(e, task.id)} className='remove'>Remove Task</div>\n                                </div>\n                            </div>\n                        ]\n                    }\n                }): status == 'none' ? <h2>No Tasks yet</h2>: <div className='loading'></div>}\n            </div>\n            \n            <img id='body_bg' src='/bg_login.png'/>\n            <style jsx>{`\n                .cat {\n                    float: left;\n                    width: 90%;\n                    padding: 10px 5%;\n                    color: white;\n                    margin: 20px 0;\n                    font: 12px 'Roboto';\n                    background: ${Theme.colors.gunmetal};\n                }\n                .tasktoggle {\n                    float: left;\n                    width: 100px;\n                    height: 100px;\n                    padding: 10px;\n                }\n                .update {\n                    float: left;\n                    width: 100%;\n                    padding: 8px 0;\n                    text-align: center;\n                    font: 12px 'Open Sans';\n                    opacity: .8;\n                    background: ${Theme.colors.platinum};\n                    transition: opacity .4s ease;\n                    cursor: pointer;\n                }\n                .update:hover {\n                    opacity: 1;\n                    background: white;\n                }\n                .remove {\n                    float: left;\n                    width: 100%;\n                    padding: 8px 0;\n                    text-align: center;\n                    font: 12px 'Open Sans';\n                    opacity: .8;\n                    color: white;\n                    background: rgba(226, 70, 70,.8);\n                    cursor: pointer;\n                }\n                .remove:hover {\n                    opacity: 1;\n                }\n                .threedots {\n                    position: absolute;\n                    top: -5px;\n                    right: -5px;\n                    width: 20px;\n                    height: 20px;\n                    padding: 15px;\n                    cursor: pointer;\n                }\n                .threedots:hover ~ .floater, .floater:hover {\n                    opacity: 1;\n                    transform: translateX(100%) scale(1,1);\n                }\n                .floater {\n                    position: absolute;\n                    right: -10px;\n                    top: -10px;\n                    width: 120px;\n                    transform: translateX(0) scale(0,0);\n                    padding: 0;\n                    opacity: 0;\n                    overflow: hidden;\n                    transition: opacity .2s ease, transform .4s;\n                    backdrop-filter: blur(8px);\n                    background: rgba(255, 255, 255,.8);\n                    box-shadow: 0 0 2px rgba(20,20,20,.6);\n                    z-index: 9999;\n                }\n                .tasklist {\n                    float: left;\n                    width: 100%;\n                    transition: all .2s ease;\n                    padding: 30px 0;\n                    backdrop-filter: blur(8px);\n                    background: rgba(255, 255, 255,.8);\n                    display: flex;\n                    justify-content: center;\n                    flex-wrap: wrap;\n                }\n                .task {\n                    float: left;\n                    width: 200px;\n                    position: relative;\n                    padding: 10px;\n                }\n                .task h2 {\n                    float: left;\n                    width: 90%;\n                    padding: 5px 5%;\n                    margin: 0;\n                    font: 13px 'Open Sans';\n                    margin-top: 10px;\n                }\n                .task h3 {\n                    float: left;\n                    width: 90%;\n                    padding: 5px 5%;\n                    margin: 0;\n                    font: 12px 'Roboto';\n                    opacity: .8;\n                }\n                .maindiv textarea {\n                    float: left;\n                    margin: 10px 2.5%;\n                    padding: 10px 2.5%;\n                    width: 90%;\n                    font: 18px 'Roboto';\n                    border: none;\n                    resize: vertical;\n                    max-height: 150px;\n                    min-height: 30px;\n                    border-radius: 6px;\n                    box-shadow: 0 0 2px rgba(20,20,20,.8);\n                }\n                .maindiv {\n                    float: left;\n                    width: 100%;\n                    z-index: 9999;\n                    margin: 20px 0;\n                    margin-top: 90px;\n                    backdrop-filter: blur(8px);\n                    background: rgba(255, 255, 255, .9);\n                }\n                .maindiv h1 {\n                    float: left;\n                    margin: 10px 5%;\n                    width: 90%;\n                    font: 20px 'Montserrat';\n                }\n                .maindiv form {\n                    float: left;\n                    width: 40%;\n                    transition: all .2s ease;\n                    padding: 10px 5%;\n                }\n                #body_bg {\n                    width: 100%;\n                    z-index: -20;\n                    position: fixed;\n                    top: 50%;\n                    left: 50%;\n                    transform: translate(-50%, -50%) scale(1.1,1.1);\n                }\n                .maindiv button {\n                    float: left;\n                    width: 90%;\n                    padding: 10px 5%;\n                    background: ${Theme.colors.royalblue};\n                    color: white;\n                    cursor: pointer;\n                    border: none;\n                    border-radius: 8px;\n                    margin: 10px 5%;\n                }\n            `}</style>\n        </div>\n    )\n}\n\nTaskManager.getInitialProps = async(ctx) => {\n    const cookies = await nextCookie(ctx)\n    const getfirsttasks = await getTasks(50, cookies.accessToken)\n    if(getfirsttasks == 'Not Authorized') {\n        if (ctx.res) {\n            ctx.res.writeHead(301, {\n              Location: '/login'\n            });\n            ctx.res.end();\n        } \n    }\n    getfirsttasks.sort(compare('status'))\n    return {getFirstLoad: getfirsttasks}\n}\n\nexport default TaskManager"]},"metadata":{},"sourceType":"module"}