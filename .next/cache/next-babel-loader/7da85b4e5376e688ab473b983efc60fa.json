{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { getProjectById } from \"../../services/projectservice\";\nimport BannerSlider from '../../components/banner';\nimport { baseConfig } from \"../../services/restservice\";\nimport Theme from '../../styles/theme';\n\nfunction Project(_ref) {\n  var project = _ref.project;\n  return __jsx(\"div\", {\n    id: \"body\",\n    className: _JSXStyle.dynamic([[\"1873424356\", [Theme.fonts.bigtitle]]])\n  }, __jsx(BannerSlider, {\n    height: 600,\n    images: project.images,\n    backendImageRoute: baseConfig.backendImages\n  }), __jsx(\"h1\", {\n    className: _JSXStyle.dynamic([[\"1873424356\", [Theme.fonts.bigtitle]]])\n  }, project.title), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"1873424356\", [Theme.fonts.bigtitle]]]) + \" \" + 'tagholder'\n  }, project.tags.map(function (tag, i) {\n    return __jsx(\"h3\", {\n      key: i,\n      className: _JSXStyle.dynamic([[\"1873424356\", [Theme.fonts.bigtitle]]])\n    }, tag.toUpperCase() + (i == project.tags.length - 1 ? '' : ','));\n  })), __jsx(\"p\", {\n    className: _JSXStyle.dynamic([[\"1873424356\", [Theme.fonts.bigtitle]]])\n  }, project.body), __jsx(_JSXStyle, {\n    id: \"1873424356\",\n    dynamic: [Theme.fonts.bigtitle]\n  }, [\"h1.__jsx-style-dynamic-selector{float:left;width:90%;margin:30px 5%;font:40px \".concat(Theme.fonts.bigtitle, \";}\"), \".tagholder.__jsx-style-dynamic-selector{float:left;width:95%;margin:10px 2.5%;}\", \"h3.__jsx-style-dynamic-selector{float:left;margin:4px;font:14px 'Open Sans';font-style:italic;}\", \"p.__jsx-style-dynamic-selector{float:left;width:45%;padding:20px 2.5%;font:14px 'Open Sans';}\", \"#body.__jsx-style-dynamic-selector{float:left;width:100%;margin-top:80px;}\"]));\n}\n\nProject.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var getNewProject;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getProjectById(ctx.query.id);\n\n          case 2:\n            getNewProject = _context.sent;\n            return _context.abrupt(\"return\", {\n              project: getNewProject\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Project;","map":null,"metadata":{},"sourceType":"module"}