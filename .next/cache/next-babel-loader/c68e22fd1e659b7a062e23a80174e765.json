{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { catchAxiosError } from \"./error\";\nimport { post, get, postFile } from \"./restservice\";\nimport Router from 'next/router';\nimport { Cookies } from 'react-cookie';\nimport nextCookies from 'next-cookies';\nimport jwt_decode from 'jwt-decode';\nvar cookies = new Cookies();\nexport var backendImages = \"https://uplink.work/restapi/uploadimages/\";\nexport function createProfile(_x, _x2, _x3, _x4) {\n  return _createProfile.apply(this, arguments);\n}\n\nfunction _createProfile() {\n  _createProfile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(firstname, lastname, email, password) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // Request data to post to createprofile route on rest api\n            fetch('http://localhost:3600/users', {\n              method: 'POST',\n              headers: {\n                \"Content-type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                \"firstName\": firstname,\n                \"lastName\": lastname,\n                \"email\": email,\n                \"password\": password\n              })\n            }).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              console.log('Request succeeded with JSON response', data);\n            })[\"catch\"](function (error) {\n              console.log('Request failed', error);\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _createProfile.apply(this, arguments);\n}\n\nexport function loginRequest(_x5, _x6) {\n  return _loginRequest.apply(this, arguments);\n}\n\nfunction _loginRequest() {\n  _loginRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email, password) {\n    var newLogin;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch('http://localhost:3600/auth', {\n              method: 'POST',\n              headers: {\n                \"Content-type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                \"email\": email,\n                \"password\": password\n              })\n            }).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              cookies.set('accessToken', data.accessToken);\n              cookies.set('refreshToken', data.refreshToken);\n              var decoded = jwt_decode(data.accessToken);\n              cookies.set('name', decoded.name);\n              cookies.set('email', decoded.email);\n              cookies.set('refreshKey', decoded.refreshKey);\n              cookies.set('permission_level', decoded.permissionLevel);\n              cookies.set('userId', decoded.userId);\n              Router.push(\"/\");\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 2:\n            newLogin = _context2.sent;\n\n            if (!newLogin) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", \"Username/Password does not match our records!\");\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _loginRequest.apply(this, arguments);\n}\n\nexport function Logout() {\n  return _Logout.apply(this, arguments);\n}\n_c2 = Logout;\n\nfunction _Logout() {\n  _Logout = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            cookies.remove('accessToken');\n            cookies.remove('refreshToken');\n            cookies.remove('name');\n            cookies.remove('email');\n            cookies.remove('refreshKey');\n            cookies.remove('userId');\n            _context3.next = 8;\n            return Router.push(\"/login\");\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _Logout.apply(this, arguments);\n}\n\n_c = Logout;\nexport function createTask(_x7, _x8) {\n  return _createTask.apply(this, arguments);\n}\n\nfunction _createTask() {\n  _createTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(objective, status) {\n    var getCookies, newTask;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            getCookies = cookies.getAll(); // New Login Data request\n\n            _context4.next = 3;\n            return fetch('http://localhost:3600/tasks', {\n              method: 'POST',\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(getCookies.accessToken)\n              },\n              body: JSON.stringify({\n                \"objective\": objective,\n                \"status\": status\n              })\n            }).then(function (response) {\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 3:\n            newTask = _context4.sent;\n\n            if (!newTask) {\n              _context4.next = 6;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", newTask);\n\n          case 6:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _createTask.apply(this, arguments);\n}\n\nexport function getTasks(_x9, _x10) {\n  return _getTasks.apply(this, arguments);\n}\n\nfunction _getTasks() {\n  _getTasks = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(limit, token) {\n    var getCookies, newTask;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            getCookies = cookies.getAll(); // New Login Data request\n\n            _context5.next = 3;\n            return fetch('http://localhost:3600/tasks', {\n              method: 'GET',\n              headers: {\n                \"Content-type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(getCookies.accessToken ? getCookies.accessToken : token)\n              },\n              query: JSON.stringify({\n                \"limit\": limit\n              })\n            }).then(function (response) {\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 3:\n            newTask = _context5.sent;\n\n            if (!newTask) {\n              _context5.next = 6;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", newTask);\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _getTasks.apply(this, arguments);\n}\n\nexport function removeTask(_x11) {\n  return _removeTask.apply(this, arguments);\n}\n\nfunction _removeTask() {\n  _removeTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(taskId) {\n    var getCookies, newTask;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            getCookies = cookies.getAll(); // New Login Data request\n\n            _context6.next = 3;\n            return fetch(\"http://localhost:3600/tasks/\".concat(taskId), {\n              method: 'DELETE',\n              headers: {\n                \"Authorization\": \"Bearer \".concat(getCookies.accessToken ? getCookies.accessToken : token)\n              }\n            }).then(function (response) {\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 3:\n            newTask = _context6.sent;\n\n            if (!newTask) {\n              _context6.next = 6;\n              break;\n            }\n\n            return _context6.abrupt(\"return\", newTask);\n\n          case 6:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _removeTask.apply(this, arguments);\n}\n\nexport function updateTaskStatus(_x12, _x13) {\n  return _updateTaskStatus.apply(this, arguments);\n}\n\nfunction _updateTaskStatus() {\n  _updateTaskStatus = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(taskId, newstatus) {\n    var getCookies, newTask;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            getCookies = cookies.getAll(); // New Login Data request\n\n            _context7.next = 3;\n            return fetch(\"http://localhost:3600/tasks/\".concat(taskId), {\n              method: 'PATCH',\n              headers: {\n                \"Authorization\": \"Bearer \".concat(getCookies.accessToken ? getCookies.accessToken : token)\n              },\n              body: JSON.stringify({\n                \"status\": newstatus\n              })\n            }).then(function (response) {\n              return response.json();\n            })[\"catch\"](function (error) {\n              return error;\n            });\n\n          case 3:\n            newTask = _context7.sent;\n\n            if (!newTask) {\n              _context7.next = 6;\n              break;\n            }\n\n            return _context7.abrupt(\"return\", newTask);\n\n          case 6:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _updateTaskStatus.apply(this, arguments);\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Logout\");\n$RefreshReg$(_c2, \"Logout\");","map":{"version":3,"sources":["/Users/williamforte/Canvas/burkedeveloping/services/apiservice.js"],"names":["catchAxiosError","post","get","postFile","Router","Cookies","nextCookies","jwt_decode","cookies","backendImages","createProfile","firstname","lastname","email","password","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","error","loginRequest","set","accessToken","refreshToken","decoded","name","refreshKey","permissionLevel","userId","push","newLogin","Logout","remove","createTask","objective","status","getCookies","getAll","newTask","getTasks","limit","token","query","removeTask","taskId","updateTaskStatus","newstatus"],"mappings":"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","sourcesContent":["import { catchAxiosError } from \"./error\";\nimport { post, get , postFile} from \"./restservice\";\nimport Router from 'next/router';\nimport { Cookies } from 'react-cookie';\nimport nextCookies from 'next-cookies'\nimport jwt_decode from 'jwt-decode';\n\nconst cookies = new Cookies();\n\nexport const backendImages = \"https://uplink.work/restapi/uploadimages/\";\n\nexport async function createProfile(firstname, lastname, email, password) {\n    // Request data to post to createprofile route on rest api\n    fetch('http://localhost:3600/users', {\n        method: 'POST',\n        headers: {\n            \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            \"firstName\": firstname,\n            \"lastName\": lastname,\n            \"email\": email,\n            \"password\": password\n        })\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .then(function(data) {\n        console.log('Request succeeded with JSON response', data);\n    })\n    .catch(function(error) {\n        console.log('Request failed', error);\n    });\n}\n\nexport async function loginRequest(email, password) {\n    // New Login Data request\n    const newLogin = await fetch('http://localhost:3600/auth', {\n        method: 'POST',\n        headers: {\n            \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            \"email\": email,\n            \"password\": password\n        })\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .then(function(data) {\n        cookies.set('accessToken', data.accessToken);\n        cookies.set('refreshToken', data.refreshToken);\n        const decoded = jwt_decode(data.accessToken);\n        cookies.set('name', decoded.name)\n        cookies.set('email', decoded.email)\n        cookies.set('refreshKey', decoded.refreshKey)\n        cookies.set('permission_level', decoded.permissionLevel)\n        cookies.set('userId', decoded.userId)\n        Router.push(\"/\")\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newLogin) {\n        return \"Username/Password does not match our records!\"\n    }\n}\n\nexport async function Logout() {\n    cookies.remove('accessToken');\n    cookies.remove('refreshToken');\n    cookies.remove('name')\n    cookies.remove('email')\n    cookies.remove('refreshKey')\n    cookies.remove('userId')\n    await Router.push(\"/login\");\n}\n\nexport async function createTask(objective, status) {\n    \n    const getCookies = cookies.getAll()\n    // New Login Data request\n    const newTask = await fetch('http://localhost:3600/tasks', {\n        method: 'POST',\n        headers: {\n            \"Content-type\": \"application/json\",\n            \"Authorization\": `Bearer ${getCookies.accessToken}`\n        },\n        body: JSON.stringify({\n            \"objective\": objective,\n            \"status\": status\n        })\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newTask) {\n        return newTask\n    }\n}\n\nexport async function getTasks(limit, token) {\n    \n    const getCookies = cookies.getAll()\n    // New Login Data request\n    const newTask = await fetch('http://localhost:3600/tasks', {\n        method: 'GET',\n        headers: {\n            \"Content-type\": \"application/json\",\n            \"Authorization\": `Bearer ${getCookies.accessToken ? getCookies.accessToken: token}`\n        },\n        query: JSON.stringify({\n            \"limit\": limit\n        })\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newTask) {\n        return newTask\n    }\n}\n\nexport async function removeTask(taskId) {\n    \n    const getCookies = cookies.getAll()\n    // New Login Data request\n    const newTask = await fetch(`http://localhost:3600/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n            \"Authorization\": `Bearer ${getCookies.accessToken ? getCookies.accessToken: token}`\n        }\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newTask) {\n        return newTask\n    }\n}\n\nexport async function updateTaskStatus(taskId, newstatus) {\n    \n    const getCookies = cookies.getAll()\n    // New Login Data request\n    const newTask = await fetch(`http://localhost:3600/tasks/${taskId}`, {\n        method: 'PATCH',\n        headers: {\n            \"Authorization\": `Bearer ${getCookies.accessToken ? getCookies.accessToken: token}`\n        },\n        body: JSON.stringify({\n            \"status\": newstatus\n        })\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .catch(function(error) {\n        return error\n    });\n    if(newTask) {\n        return newTask\n    }\n}\n"]},"metadata":{},"sourceType":"module"}